//## 프로그램ID      : ip_02080_AllocZone_Mgmt.vm//## 프로그램명      : 공급할당지역 관리//## 개발자          : 권용찬//## 개발일자        : 2010-04-27//##//## 관련 job file   : job_sinc_10_inventoryPlanning_03.xml//## 관련 query file : query_sinc_10_inventoryPlanning_03.xml//##//## REVISIONS//## VER        DATE        AUTHOR    DESCRIPTION//## ---------  ----------  --------  ------------------------------------//## VER1.0        2011-04-27  권용찬      create//## VER2.0		2014-10-23	이강욱	   update//############################################################/************************************************************************************************************************************//**********************************************  WiseGrid Java Script   *************************************************************//************************************************************************************************************************************///-----------------------------------------             전역 변수            ----------------------------------------------////var mode;														// WiseGrid 통신 시 전송 모드(search, save, ... etc)var class_path = "com.wisegrid.admin.";							// 서블릿 패키지(class 파일 경로)var job_id = 'ip_02080_AllocZone_Mgmt';var GridObj ; 													// WiseGrid 객체var GridObj2;var GridObj3;var GridObj4;//var GridObj5;var color_tot = '234|234|234';			//합계 라인 배경색var color_edit_col = '255|253|208';var color_sp = '230|222|230'; 			//컬럼 구분선 배경색var color_select_row = '141|232|141';	//라인 선택 배경색var colBg01 = '224|255|224';			//255|255|153var colBg02 = '255|255|255';/*┌──────────────────────────────────┐  │그리드의 사이즈 조절 Fnc  └──────────────────────────────────┘*/    function setGridAutoResize( tab_h, table_h ){                var maxWidthValue;        var maxHeightValue;                if (document.layers) {            //Nescape            maxWidthValue = window.innerWidth;            maxHeightValue = window.innerHeight;        }        if (document.all) {            //explore            maxWidthValue = document.body.clientWidth;            maxHeightValue = document.body.clientHeight;        }                 var tabHeightValue = Number(maxHeightValue) - Number(tab_h) ;         var tableHeightValue = Number(maxHeightValue) - Number(table_h) ;                 var search_h = document.frm.search_h.value;         if( search_menu.style.display == "none" )         {             tabHeightValue += Number(search_h);             tableHeightValue += Number(search_h);         }                 // 화면 size 축소 시 화면이 너무 작아 그리드 크기가 음수가 되면 에러가 나므로 그 경우 무조건 1로 세팅         // ==> 화면이 더이상 축소되지 않음         if( tabHeightValue < 1 )             tabHeightValue = 1;         if( tableHeightValue < 1 )             tableHeightValue = 1;                 //tabPage1.style.height = tabHeightValue + "px";         //tbMain.style.height = tableHeightValue + "px";         //document.WiseGrid.height = tableHeightValue + "px";         //document.WiseGrid2.height = tableHeightValue - document.WiseGrid.height + "px";        //document.WiseGrid3.height = tableHeightValue - document.WiseGrid.height + "px";             }  /*┌─────────────────────────────────────────────────────────────────────┐  │WiseGrid 오브젝트가 생성되고 초기화된 후 발생하는 							│  │JavaScript Event인 Initialize()를 받아 그리드의 헤더를 셋팅한다.			│  └─────────────────────────────────────────────────────────────────────┘*/function init() { 	GridObj = document.WiseGrid;	setProperty(GridObj);	//WiseGrid Default설정 부분 (WiseGrid_Property.js파일 내에 선언되어 있다.)	setHeader(GridObj);  	//해더생성 	setDefault();        	//화면 기본 설정 }         /*┌──────────────────────────────────┐  │화면 기본 설정 부분.  └──────────────────────────────────┘*/function setDefault() { 	GridObj.bRowSelectorVisible = false;        		//로우 셀렉터를 WiseGrid에서 숨긴다,. 	GridObj.bRowSelectorIndex = true;				//Row Selector 영역에 Row Index를 보여준다.    GridObj.nHDLineSize         = 12; //Header Size        //헤더의 라인수를 설정한다.     GridObj.nHDLines = 2;              //선택된 셀의 글자색 지정한다.    GridObj.strSelectedCellFgColor = '180|82|205';    GridObj.strHDClickAction = "select";        	//클릭한 컬럼의 셀을 선택가능하게 한다.	GridObj.strActiveRowBgColor = "170|170|170";    //선택된 행의 배경색상을 설정한다.     //GridObj.strHDClickAction    = "sortsingle";       	// Cell Font Setting	GridObj.nCellFontSize = 9;					// Font Size 9	//GridObj.strCellFontName = '맑은 고딕';     //GridObj.bStatusbarVisible = false;				// status bar visible 상태바 설정     }       /*┌──────────────────────────────────┐  │해더생성  └──────────────────────────────────┘*/ function setHeader_org(GridObj) {        	//GridObj.SetCRUDMode("CRUD", "AD", "UP", "DE");	GridObj.AddHeader("CRUD"			,"CRUD"       	,"t_text" 		,100    ,0  ,false);  	//GridObj.AddHeader("SELECTED"		," "       		,"t_checkbox" 	,2		,21  ,true); //0   		//GridObj.SetColHide("CRUD", true); 	GridObj.AddHeader("DEPT_CODE"		,"지점코드"		,"t_text"	,20		,66  ,false); //0    	GridObj.AddHeader("DEPT_NAME"		,"지점명"			,"t_text" 	,100	,120 ,false); //0    	GridObj.AddHeader("ALLOC_ZONE_01"	,"전국"      	,"t_checkbox" 	,100	,83  ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_02"	,"수도"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_03"	,"부산"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_04"	,"유통"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_05"	,"시판"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_06"	,"CVS"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_07"	,"유통+CVS"		,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_08"	,"CVS+시판"		,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_09"	,"유통+시판"		,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_10"	,"특판"			,"t_checkbox" 	,100	,83 ,true); //0    	GridObj.AddHeader("ALLOC_ZONE_11"	,"사용자"		,"t_checkbox" 	,100	,83 ,true); //0   	//VER2.0 사용자 컬럼 추가 2014-10-23 이강욱 	GridObj.AddHeader("ALLOC_ZONE_12"	,"사용자2"		,"t_checkbox" 	,100	,83 ,true); 	GridObj.AddHeader("ALLOC_ZONE_13"	,"사용자3"		,"t_checkbox" 	,100	,83 ,true); 	GridObj.AddHeader("ALLOC_ZONE_14"	,"사용자4"		,"t_checkbox" 	,100	,83 ,true);// 	GridObj.AddHeader("ALLOC_ZONE_15"	,"예비"			,"t_checkbox" 	,100	,83 ,true);// 	GridObj.AddHeader("ALLOC_ZONE_16"	,"예비"			,"t_checkbox" 	,100	,83 ,true);// 	GridObj.AddHeader("ALLOC_ZONE_17"	,"예비"			,"t_checkbox" 	,100	,83 ,true);// 	GridObj.AddHeader("ALLOC_ZONE_18"	,"예비"			,"t_checkbox" 	,100	,83 ,true);// 	GridObj.AddHeader("ALLOC_ZONE_19"	,"예비"			,"t_checkbox" 	,100	,83 ,true); 	GridObj.BoundHeader();	    GridObj.SetColCellAlign('DEPT_CODE','center');     GridObj.SetColCellAlign('DEPT_NAME','center');     GridObj.SetColCellAlign('ALLOC_ZONE_01','center');     GridObj.SetColCellAlign('ALLOC_ZONE_02','center');     GridObj.SetColCellAlign('ALLOC_ZONE_03','center');     GridObj.SetColCellAlign('ALLOC_ZONE_04','center');     GridObj.SetColCellAlign('ALLOC_ZONE_05','center');     GridObj.SetColCellAlign('ALLOC_ZONE_06','center');     GridObj.SetColCellAlign('ALLOC_ZONE_07','center');     GridObj.SetColCellAlign('ALLOC_ZONE_08','center');     GridObj.SetColCellAlign('ALLOC_ZONE_09','center');     GridObj.SetColCellAlign('ALLOC_ZONE_10','center');     GridObj.SetColCellAlign('ALLOC_ZONE_11','center');     GridObj.SetColCellAlign('ALLOC_ZONE_12','center');    GridObj.SetColCellAlign('ALLOC_ZONE_13','center');    GridObj.SetColCellAlign('ALLOC_ZONE_14','center');//    GridObj.SetColCellAlign('ALLOC_ZONE_15','center');//    GridObj.SetColCellAlign('ALLOC_ZONE_16','center');//    GridObj.SetColCellAlign('ALLOC_ZONE_17','center');//    GridObj.SetColCellAlign('ALLOC_ZONE_18','center');//    GridObj.SetColCellAlign('ALLOC_ZONE_19','center'); 	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_01',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_02',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_03',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_04',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_05',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_06',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_07',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_08',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_09',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_10',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_11',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_12',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_13',true,true);	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_14',true,true);//	GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_15',true,true);	//GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_16',true,true);	//GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_17',true,true);	//GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_18',true,true);	//GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_19',true,true);	GridObj.SetColFix('DEPT_NAME');		GridObj.SetCRUDMode("CRUD");  // AD와 DE가 셋팅 될 경우는 없다.	//Hidden 컬럼	GridObj.SetColHide("CRUD",true);}       /*┌──────────────────────────────────┐  │해더생성  └──────────────────────────────────┘*/ function setHeader(GridObj) {        	var header_length = 0, j;		var item_id = '';		commonUtil.getSelQeury( "item_id", item_id, "ip_02080_AllocZone_Mgmt_list_header",{		callback:function(result){			GridObj.AddHeader("CRUD"			,"CRUD"       	,"t_text" 	,100    ,0  ,false);						GridObj.AddHeader("DEPT_CODE"		,"지점코드"		,"t_text"	,20		,66  ,false); //0   		 	GridObj.AddHeader("DEPT_NAME"		,"지점명"			,"t_text" 	,100	,120 ,false); //0      			for(var i=0 ; i < 15 ; i++){  //19				if(i < result.length) {					//alert("ALLOC_ZONE_"+1+", "+result[0][i])					GridObj.AddHeader("ALLOC_ZONE_"+1	,result[0][i]       	,"t_checkbox" 	,100	,83  ,true);    				} 					else {					j = strToNum(i)+strToNum(1);					if(i < 15) { //19											//alert("ALLOC_ZONE_"+j+", "+result[0][i])						GridObj.AddHeader("ALLOC_ZONE_"+j	,result[0][i]     	,"t_checkbox" 	,100	,83  ,true);					}					else {						GridObj.AddHeader("ALLOC_ZONE_"+j	,result[0][i]       ,"t_checkbox" 	,100	,83  ,true);					}				}			}		 							GridObj.BoundHeader();									    GridObj.SetColCellAlign('DEPT_CODE','center'); 		    GridObj.SetColCellAlign('DEPT_NAME','center'); 				    GridObj.SetColCellAlign('ALLOC_ZONE_1','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_2','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_3','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_4','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_5','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_6','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_7','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_8','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_9','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_10','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_11','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_12','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_13','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_14','center'); 		    GridObj.SetColCellAlign('ALLOC_ZONE_15','center'); //		    GridObj.SetColCellAlign('ALLOC_ZONE_16','center'); //		    GridObj.SetColCellAlign('ALLOC_ZONE_17','center'); //		    GridObj.SetColCellAlign('ALLOC_ZONE_18','center'); //		    GridObj.SetColCellAlign('ALLOC_ZONE_19','center'); 		 			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_1',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_2',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_3',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_4',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_5',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_6',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_7',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_8',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_9',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_10',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_11',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_12',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_13',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_14',true,true);			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_15',true,true);//			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_16',true,true);//			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_17',true,true);//			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_18',true,true);//			GridObj.SetColHDCheckBoxVisible('ALLOC_ZONE_19',true,true);										GridObj.SetColFix('DEPT_NAME');						GridObj.SetCRUDMode("CRUD");  // AD와 DE가 셋팅 될 경우는 없다.			//Hidden 컬럼			GridObj.SetColHide("CRUD",true);						}	});   }/*┌──────────────────────────────────┐  │WiseGrid Change Combo Event  └──────────────────────────────────┘*/function GridChangeComboHandler(strColumnKey, nRow, nOldIndex, nNewIndex){		/*	// if 진행중인 데이터는 수정 불가!!	var if_flag	= GridObj.GetCellValue("IF_FLAG", nRow);	if( if_flag == "" || if_flag == null) {	}else{		alert("확정된 항목은 수정하실수 없습니다!");		GridObj.SetComboSelectedIndex(strColumnKey, nRow,  nOldIndex);		return; 	}		 		var version		= document.all.version.value;	    var sel_dmd	= GridObj.GetCellHiddenValue("SEL_DMD", nRow);    var sel_item_id = GridObj.GetCellValue("ITEM_ID", nRow);    document.all.sel_dmd.value = sel_dmd;    document.all.sel_item_id.value = sel_item_id;    */        //doQuery3(nRow);    	//alert("calPrDateNo 시작");    	//calPrDateNo(nRow);		};function GridChangeCell(strColumnKey, nRow, nOldValue, nNewValue) {  //pr_qty}function Grid3ChangeCell(strColumnKey, nRow, nOldValue, nNewValue) {}	// 컬럼 고정function setGrid(){	//GridObj2.SetColCellBgColor('DEL_PLT',color_edit_col);//PLT	GridObj.SetColFix('ITEM_NAME');}/*┌──────────────────────────────────┐  │데이터 조회가 정상적으로 완료되면 발생되는 Event에 대한 Fnc  └──────────────────────────────────┘*/function GridEndQuery(){	    var endMode = GridObj.GetParam("mode");    var error_msg = '';        //alert("endMode="+endMode);      if(endMode == "search") //조회가 완료된 경우    {        if(GridObj.GetStatus() == "true")         {            /*         				for(var i=0;i<GridObj.GetRowCount();i++) {			// cell색깔 변경				if(GridObj.GetCellValue('PR_DATE_NO',i) > Number(2) ){  // GREEN					GridObj.SetCellBgColor('PR_DATE_NO', i, '200|255|110');				}else if(GridObj.GetCellValue('PR_DATE_NO',i) > Number(1) && GridObj.GetCellValue('PR_DATE_NO',i) <= Number(2)){  // YELLOW					GridObj.SetCellBgColor('PR_DATE_NO', i, '255|255|0');				}				else if(GridObj.GetCellValue('PR_DATE_NO',i) <= Number(1)){ // RED					GridObj.SetCellBgColor('PR_DATE_NO', i, '255|0|0'); 				}							GridObj.SetCellFontBold('TOT_STOCK', i, 'true'); // font 굵기			GridObj.SetCellFontBold('PR_QTY', i, 'true'); // font 굵기			GridObj.SetCellFontBold('STD_STOCK', i, 'true'); // font 굵기			}*/			        } else            {             error_msg = GridObj.GetMessage();             alert(error_msg);            		}    }else if(endMode == "ExePlan"){		alert("중장기 자재 수급 계획이 완료되었습니다 메뉴화면을 다시 클릭후 사용해주시기 바랍니다");    }else{ // 삭제, 전송 상태일시 메인그리드 제조회       	GoSearch();    }    	}/*┌──────────────────────────────────┐  │그리드의 원 클릭 이벤트  └──────────────────────────────────┘*/function GridCellClick(strColumnKey, nRow) {	var hd_name =  GridObj.GetColHDText(strColumnKey);		if(hd_name == '-예비-'){		alert("예비 필드 입니다.");		GridObj.SetCellValue(strColumnKey, nRow, "0");		return;	}}	               /*┌──────────────────────────────────┐  │화면에 '조회'를 누르면 호출 Fnc  └──────────────────────────────────┘*/   function GoSearch(service)    {    doQuery();	   }/*┌──────────────────────────────────┐  │하부 그리드 조회 WD1 더블클릭  └──────────────────────────────────┘*/function GridCellDblClick(strColumnKey, nRow){     	}           /*┌──────────────────────────────────┐  │DW 1 조회 쿼리를 호출 Fnc  └──────────────────────────────────┘*/   function doQuery()    {       var servlet_url = Project_name+"/servlet/com.wisegrid.admin."+job_id;       //var cnfm_date	= document.all.cnfm_date.value;                     //넘겨줄 값들을만든다.( 파라미터 정의 부분 )       GridObj.SetParam("mode", "search");       GridObj.SetParam("gubn", "gubn");       GridObj.DoQuery(servlet_url);   }// 셀 저장 전역변수var objTdG;/*┌───────────────────────────────────────┐  │행 멀티선택 Fnc  └───────────────────────────────────────┘*/function rowInsSel(obj){		var sel_data = GridObj.GetSelectedCells(); // 선택한 부분의 key와 row를 가져온다	var i=0;	var rowNo;	var sell_name = sel_data.split(",")[0];		if(sell_name == 'DEPT_CODE' || sell_name == 'DEPT_NAME'){  //  부서코드 부서명일때는 실행 X		return;	}			//alert("sel_data="+sel_data);	//alert("obj="+sel_data.split(",")[0*2+1]);	 	 		//return;			while(1) {		if (sel_data.split(",")[i*2+1] == null || sel_data.split(",")[i*2+1] == "")  // 더이상 데이터 없다			return;		else {			var rowNo = sel_data.split(",")[i*2+1];			//해당 row에 check를 한다			GridObj.SetCellValue(sell_name, rowNo, "1");		}		i++;	}}/*┌───────────────────────────────────────┐  │행 멀티선택 취소 Fnc  └───────────────────────────────────────┘*/function rowInsDeSel(obj){		var sel_data = GridObj.GetSelectedCells(); // 선택한 부분의 key와 row를 가져온다	var i=0;	var rowNo;	var sell_name = sel_data.split(",")[0];			if(sell_name == 'DEPT_CODE' || sell_name == 'DEPT_NAME'){  //  부서코드 부서명일때는 실행 X		return;	}			while(1) {		if (sel_data.split(",")[i*2+1] == null || sel_data.split(",")[i*2+1] == "")  // 더이상 데이터 없다			return;		else {			var rowNo = sel_data.split(",")[i*2+1];			//해당 row에 check를 한다			GridObj.SetCellValue(sell_name, rowNo, "0");		}		i++;	}}//--------------------------------------   main_template 에 정의된 Event ---------------------------------------------------///*┌──────────────────────────────────┐  │WiseGrid Cell Change Event  └──────────────────────────────────┘*/// 저장function GoSave(service) {	var GridObj = document.WiseGrid;	mode = "save";	doSave();	};// 저장function doSave() { 	var GridObj = document.WiseGrid;	var servlet_url = Project_name+"/servlet/com.wisegrid.admin."+job_id;    	//넘겨줄 값들을만든다.( 파라미터 정의 부분 )	GridObj.SetParam("mode", "save");	GridObj.SetParam("user_id", document.frm._user_id.value);		//WiseGrid이 서버와 통신시에 데이터를 전달하는 메서드입니다. 통신이 성공하면 true를 반환합니다.	GridObj.DoQuery(servlet_url, "WISEGRIDDATA_ALL");	//GridObj.DoQuery(servlet_url, "SELECTED"); } //