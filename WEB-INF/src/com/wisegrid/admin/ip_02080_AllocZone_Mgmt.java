package com.wisegrid.admin;                                                                                                                                                                                                                                                                                                                                                            import java.io.IOException;                                                                                                  import java.io.PrintWriter;                                                                                                  import java.sql.SQLException;                                                                                                import java.util.ArrayList;                                                                                                                                                                                                                               import javax.servlet.ServletException;                                                                                       import javax.servlet.http.HttpServlet;                                                                                       import javax.servlet.http.HttpServletRequest;                                                                                import javax.servlet.http.HttpServletResponse;                                                                                                                                                                                                            import com.zionex.t3sinc.common.CommonUtil;                                                                                  import xlib.cmc.GridData;                                                                                                    import xlib.cmc.OperateGridData;                                                                                                                                                                                                                                                                                                                                                       import java.sql.Connection;                                                                                                  import java.sql.ResultSet;                                                                                                   import java.sql.Statement;                                                                                                   import java.util.HashMap;                                                                                                    import java.util.Iterator;                                                                                                   import java.util.LinkedList;                                                                                                 import java.util.Map;                                                                                                                                                                                                                                     import com.zionex.t3sinc.util.db.SincDatabaseUtility;                                                                        /**                                                                                                                           *                                                                                                                            * @author iCOMPIA CORP.                                                                                                      */                                                                                                                          public class ip_02080_AllocZone_Mgmt extends HttpServlet {                                                                                                                                                                                          	private static final long serialVersionUID = -419201700278107216L;                                                       	                                                                                                                         	Connection 	conn 	= null;                                                                                              	Statement 	stmt	= null;                                                                                              	ResultSet	rs		= null;	                                                                                             	String 		sql 	= null;                                                                                              	//Map sessionMap 	= new HashMap();                                                                                     	                                                                                                                         	SincDatabaseUtility databaseUtility = new SincDatabaseUtility();	                                                                                                                                                                                  	public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {               		GridData gdReq = null;                                                                                               		GridData gdRes = null;                                                                                                                                                                                                                                    System.out.println("START...");                                                                                                                                                                                                                   		// Encode Type; UTF-8                                                                                                		req.setCharacterEncoding("UTF-8");                                                                                   		res.setContentType("text/html;charset=UTF-8");                                                                       		                                                                                                                     		PrintWriter out = res.getWriter();                                                                                   		try {                                                                                                                			// WISEGRID_DATA Param WiseGridG                                                                                 			String rawData = req.getParameter("WISEGRID_DATA");                                                              			                                                                                                                 			gdReq = OperateGridData.parse(rawData);                                                                                                                                                                                                       			String mode = gdReq.getParam("mode");                                                                            			System.out.println("Test :: mode = " + mode);                                                                                                                                                                                                 			if (mode.equals("search")) //                                                                                    				gdRes = doQuery(gdReq);                                                                                      			else if (mode.equals("save")) //                                                                               				gdRes = doSave(gdReq);													} catch (Exception e) {                                                                                              			gdRes = new GridData();                                                                                          			gdRes.setMessage("Error: " + e.getMessage());                                                                    			gdRes.setStatus("false");                                                                                        			e.printStackTrace();                                                                                             		} finally {                                                                                                          			try {                                                                                                            				//                                                                                                           				OperateGridData.write(gdRes, out);			} catch (Exception e) {				e.printStackTrace();			}		}	}		// DW 1 Á¶È¸  Äõ¸®	public GridData doQuery(GridData gdReq) throws Exception {		                                                                                                                     		GridData gdRes = new GridData();		                                                                             		int rowCount = 0;                                                                                                    						try {                                                                                                                			gdRes = OperateGridData.cloneResponseGridData(gdReq);                                                            			                                                                                                                  			String gubn	= gdReq.getParam("gubn");			                                                                                                                 			String paramKey   ="gubn";                                                                      			String paramCode  = gubn;                                                                                                                                                                                            			String query_id   = "ip_02080_AllocZone_Mgmt_list";                                                                                                                                                                                          			ArrayList<ArrayList<String>> qResult = new CommonUtil().getSelQeury(paramKey, paramCode, query_id);              			                                                                                                                 			rowCount = qResult.size();                                                                                                                                                                                                                    			//                                                                                                               			if (rowCount == 0) {                                                                                             				gdRes.addParam("mode", "search");		                                                                     				gdRes.setMessage("...");                                                                                     				gdRes.setStatus("true");                                                                                     				return gdRes;                                                                                                			}                                                                                                                			                                                                                                                 			for (int i = 0; i < rowCount; i++) {                                                                             								gdRes.getHeader("CRUD"			).addValue( "", "");				gdRes.getHeader("DEPT_CODE"		).addValue(qResult.get(i).get(0  ),"");                                      				gdRes.getHeader("DEPT_NAME"		).addValue(qResult.get(i).get(1  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_1"	).addValue(qResult.get(i).get(2  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_2"	).addValue(qResult.get(i).get(3  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_3"	).addValue(qResult.get(i).get(4  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_4"	).addValue(qResult.get(i).get(5  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_5"	).addValue(qResult.get(i).get(6  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_6"	).addValue(qResult.get(i).get(7  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_7"	).addValue(qResult.get(i).get(8  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_8"	).addValue(qResult.get(i).get(9  ),"");                                      				gdRes.getHeader("ALLOC_ZONE_9"	).addValue(qResult.get(i).get(10 ),"");                                      				gdRes.getHeader("ALLOC_ZONE_10"	).addValue(qResult.get(i).get(11 ),"");                                      				gdRes.getHeader("ALLOC_ZONE_11"	).addValue(qResult.get(i).get(12 ),"");  				gdRes.getHeader("ALLOC_ZONE_12"	).addValue(qResult.get(i).get(13 ),"");				gdRes.getHeader("ALLOC_ZONE_13"	).addValue(qResult.get(i).get(14 ),"");				gdRes.getHeader("ALLOC_ZONE_14"	).addValue(qResult.get(i).get(15 ),"");				gdRes.getHeader("ALLOC_ZONE_15"	).addValue(qResult.get(i).get(16 ),"");				//gdRes.getHeader("ALLOC_ZONE_16"	).addValue(qResult.get(i).get(17 ),"");				//gdRes.getHeader("ALLOC_ZONE_17"	).addValue(qResult.get(i).get(18 ),"");				//gdRes.getHeader("ALLOC_ZONE_18"	).addValue(qResult.get(i).get(19 ),"");				//gdRes.getHeader("ALLOC_ZONE_19"	).addValue(qResult.get(i).get(20 ),"");							}                                                                                                                                                                                                                                             			gdRes.addParam("mode", "search");		                                                                         			gdRes.setMessage("");                                                                                            			gdRes.setStatus("true");                                                                                                                                                                                                                      		} catch (Exception e) {                                                                                              			throw e;                                                                                                         		}                                                                                                                    				                                                                                                             		return gdRes;                                                                                                        	}                	  	public GridData doSave(GridData gdReq) throws Exception {			System.out.println("doSave() start!!!");			GridData gdRes = new GridData(); // WiseGrid °´Ã¼»ý¼º			int rowCount = 0; // SEQ ÄÃ·³ row ¼ö						System.out.println("Total Row Count : " + gdReq.getHeader("DEPT_CODE").getRowCount());				rowCount = gdReq.getHeader("DEPT_CODE").getRowCount();								if(rowCount == 0) {					gdRes.addParam("mode", "save");					gdRes.setMessage("doSave : ÀúÀåÇÒ DATA°¡ ¾ø½À´Ï´Ù.");					gdRes.setStatus("true");					return gdRes;				}				String sql 				= "INSERT  INTO DC_ALLOC_ZONE ( DEPT_CODE, DEPT_NAME, ALLOC_ZONE_01, ALLOC_ZONE_02, ALLOC_ZONE_03, ALLOC_ZONE_04, ALLOC_ZONE_05, ALLOC_ZONE_06, \n" 				+ "        						ALLOC_ZONE_07, ALLOC_ZONE_08, ALLOC_ZONE_09, ALLOC_ZONE_10, ALLOC_ZONE_11, ALLOC_ZONE_12, ALLOC_ZONE_13, \n" 				+ "								ALLOC_ZONE_14, ALLOC_ZONE_15, MADE_DTTM, MADE_TYPE, MADE_BY) \n";				System.out.println("getParam");                String user_id          = gdReq.getParam("user_id");    								// µ¥ÀÌÅÍ ¼ÂÆÃ				System.out.println("sql Äõ¸® »ý¼º");				for (int i = 0; i < rowCount; i++)  {  											if( i > 0){							sql += " union all \n"; 						} 													sql += "	SELECT	'" + gdReq.getHeader("DEPT_CODE").getValue(i)		+ "'	AS DEPT_CODE,          		\n";							sql += "			'" + gdReq.getHeader("DEPT_NAME").getValue(i)		+ "'	AS DEPT_NAME,       		\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_1").getValue(i)	+ "'	AS ALLOC_ZONE_01,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_2").getValue(i)	+ "'	AS ALLOC_ZONE_02,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_3").getValue(i)	+ "'	AS ALLOC_ZONE_03,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_4").getValue(i)	+ "'	AS ALLOC_ZONE_04,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_5").getValue(i)	+ "'	AS ALLOC_ZONE_05,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_6").getValue(i)	+ "'	AS ALLOC_ZONE_06,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_7").getValue(i)	+ "'	AS ALLOC_ZONE_07,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_8").getValue(i)	+ "'	AS ALLOC_ZONE_08,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_9").getValue(i)	+ "'	AS ALLOC_ZONE_09,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_10").getValue(i)	+ "'	AS ALLOC_ZONE_10,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_11").getValue(i)	+ "'	AS ALLOC_ZONE_11,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_12").getValue(i)	+ "'	AS ALLOC_ZONE_12,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_13").getValue(i)	+ "'	AS ALLOC_ZONE_13,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_14").getValue(i)	+ "'	AS ALLOC_ZONE_14,        	\n";							sql += "			'" + gdReq.getHeader("ALLOC_ZONE_15").getValue(i)	+ "'	AS ALLOC_ZONE_15,        	\n";							sql += "			SYSDATE														AS MADE_DTTM,      			\n";							sql += "			'AD'														AS MADE_TYPE,      			\n";							sql += "			'" + user_id										+ "'	AS MADE_BY 	    			\n";							sql += "	FROM	DUAL			                                                  					\n";															}							try{				conn = databaseUtility.getConnection("t3sinc"); // DB Connection				stmt = conn.createStatement(); // statement °´Ã¼ »ý¼º								//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////				System.out.println("DC_ALLOC_ZONE µ¥ÀÌÅ¸  »èÁ¦");				String sql2;				sql2 =  "DELETE	DC_ALLOC_ZONE										          		 			\n";								System.out.println("-----------------------------------------------QUERY-----------------------------------------------");				System.out.println(sql2);				System.out.println("-----------------------------------------------QUERY-----------------------------------------------");								System.out.println("executeQuery ½ÇÇà!!!");				rs = databaseUtility.executeQuery(stmt, sql2);				System.out.println("executeQuery Á¾·á!!!");								boolean result2 = stmt.execute(sql2);				System.out.println("DC_ALLOC_ZONE µ¥ÀÌÅ¸  »èÁ¦!!! - °á°ú : " + result2);				//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////													System.out.println("-----------------------------------------------QUERY-----------------------------------------------");				System.out.println(sql);				System.out.println("-----------------------------------------------QUERY-----------------------------------------------");								System.out.println("executeQuery ½ÇÇà!!!");								rs = databaseUtility.executeQuery(stmt, sql);								System.out.println("executeQuery Á¾·á!!!");					            System.out.println("call SP_IP_00_CREATE_DC_ALLOC_ZONE() ½ÇÇà!!!");	            String sql3 = "call SP_IP_00_CREATE_DC_ALLOC_ZONE('CRE_DATA',SYSDATE,1,1,'NA',SYSDATE )";	            System.out.println("-----------------------------------------------QUERY-SP EXE-----------------------------------------------");	            System.out.println(sql3);	            System.out.println("-----------------------------------------------QUERY-SP EXE-----------------------------------------------");	            boolean result3 = stmt.execute(sql3);								System.out.println("call SP_IP_EDI_DEFAULT_LIST_MAPPING() Á¾·á!!! - °á°ú : " + result3);												gdRes.addParam("mode", "save");				gdRes.setMessage("¼º°øÀûÀ¸·Î ÀÛ¾÷ÇÏ¿´½À´Ï´Ù.");				gdRes.setStatus("true");										}catch (Exception e) {				throw e;			}finally {	            databaseUtility.close(conn, stmt, rs);              	        }			System.out.println("doSave() end!!!");			return gdRes;		}			}                                                                                                                  