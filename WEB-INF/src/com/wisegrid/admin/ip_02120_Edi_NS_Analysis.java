package com.wisegrid.admin;                                                                                                                                                                                                                                                                                                                                                            import java.io.IOException;                                                                                                  import java.io.PrintWriter;                                                                                                  import java.sql.SQLException;                                                                                                import java.util.ArrayList;                                                                                                                                                                                                                               import javax.servlet.ServletException;                                                                                       import javax.servlet.http.HttpServlet;                                                                                       import javax.servlet.http.HttpServletRequest;                                                                                import javax.servlet.http.HttpServletResponse;                                                                                                                                                                                                            import com.zionex.t3sinc.common.CommonUtil;                                                                                  import xlib.cmc.GridData;                                                                                                    import xlib.cmc.OperateGridData;                                                                                                                                                                                                                                                                                                                                                       import java.sql.Connection;                                                                                                  import java.sql.ResultSet;                                                                                                   import java.sql.Statement;                                                                                                   import java.util.HashMap;                                                                                                    import java.util.Iterator;                                                                                                   import java.util.LinkedList;                                                                                                 import java.util.Map;                                                                                                                                                                                                                                     import com.zionex.t3sinc.util.db.SincDatabaseUtility;                                                                        /**                                                                                                                           *                                                                                                                            * @author iCOMPIA CORP.                                                                                                      */                                                                                                                          public class ip_02120_Edi_NS_Analysis extends HttpServlet {                                                                                                                                                                                          	private static final long serialVersionUID = -419201700278107216L;                                                       	                                                                                                                         	Connection 	conn 	= null;                                                                                              	Statement 	stmt	= null;                                                                                              	ResultSet	rs		= null;	                                                                                             	String 		sql 	= null;                                                                                              	//Map sessionMap 	= new HashMap();                                                                                     	                                                                                                                         	SincDatabaseUtility databaseUtility = new SincDatabaseUtility();	                                                                                                                                                                                  	public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {               		GridData gdReq = null;                                                                                               		GridData gdRes = null;                                                                                                                                                                                                                                    System.out.println("START...");                                                                                                                                                                                                                   		// Encode Type; UTF-8                                                                                                		req.setCharacterEncoding("UTF-8");                                                                                   		res.setContentType("text/html;charset=UTF-8");                                                                       		                                                                                                                     		PrintWriter out = res.getWriter();                                                                                   		try {                                                                                                                			// WISEGRID_DATA Param WiseGridG                                                                                 			String rawData = req.getParameter("WISEGRID_DATA");                                                              			                                                                                                                 			gdReq = OperateGridData.parse(rawData);                                                                                                                                                                                                       			String mode = gdReq.getParam("mode");                                                                            			System.out.println("Test :: mode = " + mode);                                                                                                                                                                                                 			if (mode.equals("search")) //                                                                                    				gdRes = doQuery(gdReq);                                                                                      			else if (mode.equals("search2")) //                                                                               				gdRes = doQuery2(gdReq);                                                                                     			else if (mode.equals("search3")) //                                                                               				gdRes = doQuery3(gdReq);			else if (mode.equals("search4")) //                                                                               				gdRes = doQuery4(gdReq);			else if (mode.equals("save")) //                                                                               				gdRes = doSave(gdReq);													} catch (Exception e) {                                                                                              			gdRes = new GridData();                                                                                          			gdRes.setMessage("Error: " + e.getMessage());                                                                    			gdRes.setStatus("false");                                                                                        			e.printStackTrace();                                                                                             		} finally {                                                                                                          			try {                                                                                                            				//                                                                                                           				OperateGridData.write(gdRes, out);			} catch (Exception e) {				e.printStackTrace();			}		}	}		// DW 1 Á¶È¸  Äõ¸®	public GridData doQuery(GridData gdReq) throws Exception {		GridData gdRes = new GridData();		int rowCount = 0;		try {                                                                                                                			gdRes = OperateGridData.cloneResponseGridData(gdReq);                                                            			                                                                                                                 			String cnfm_date	= gdReq.getParam("cnfm_date");                                                            			                                                                                                                 			String paramKey   ="cnfm_date";                                                                      			String paramCode  = cnfm_date;                                                                                                                             			String query_id   = "ip_02120_Edi_NS_Analysis";                                                                                                                                                                                          			ArrayList<ArrayList<String>> qResult = new CommonUtil().getSelQeury(paramKey, paramCode, query_id);              			                                                                                                                 			rowCount = qResult.size();                                                                                                                                                                                                                    			//                                                                                                               			if (rowCount == 0) {                                                                                             				gdRes.addParam("mode", "search");		                                                                     				gdRes.setMessage("...");                                                                                     				gdRes.setStatus("true");                                                                                     				return gdRes;                                                                                                			}                                                                                                                			/*¼±ÅÃ±¸ºÐ ¸®½ºÆ®¸¦ ÃßÃâÇÏ¿© ÄÞº¸¸®½ºÆ® »ý¼º */			String query_id2 = "ip_02120_Edi_Default_NS_combo"; 			System.out.println("getSelQeury : " + query_id2);			ArrayList<ArrayList<String>> comboList = new CommonUtil().getSelQeury("", "", query_id2);						int arrIdx = comboList.size();						String[] codeIdList = new String[arrIdx];			String[] codeNameList = new String[arrIdx];						System.out.println("ÄÞº¸¸®½ºÆ® »ý¼º");			for ( int i = 0 ; i < arrIdx ; i++ ){				codeIdList[i] = comboList.get(i).get(0);   //¼±ÅÃ±¸ºÐ ID ÄÞº¸¸®½ºÆ® »ý¼º				codeNameList[i] = comboList.get(i).get(1); // ¼±ÅÃ±¸ºÐ ÀÌ¸§ ÄÞº¸¸®½ºÆ® »ý¼º			}						System.out.println("ÄÞº¸¸®½ºÆ® set");			gdRes.getHeader("DEFAULT_CODE_NS").setComboValues(codeNameList, codeIdList );		//¼±ÅÃ±¸ºÐ   ÄÞº¸¸®½ºÆ® Ãâ°í »ç¾÷Àå ÄÃ·³¿¡ set						for (int i = 0; i < rowCount; i++) {                                                                             								gdRes.getHeader("CRUD"			).addValue( "", "");				//gdRes.getHeader("SELECTED"		).addValue("0", "");				gdRes.getHeader("CNFM_DATE"		).addValue(qResult.get(i).get(0  ),"");                                      				gdRes.getHeader("SELL_STOP_FLAG").addValue(qResult.get(i).get(1  ),"");                                      				gdRes.getHeader("ALLOC_FLAG"	).addValue(qResult.get(i).get(2  ),"");    				gdRes.getHeader("GUBN"			).addValue(qResult.get(i).get(3  ),"");    				gdRes.getHeader("ITEM_ID"		).addValue(qResult.get(i).get(4  ),"");                                      				gdRes.getHeader("ITEM_NAME"		).addValue(qResult.get(i).get(5  ),"");                                      				gdRes.getHeader("SPEC"			).addValue(qResult.get(i).get(6  ),"");                                      				gdRes.getHeader("CUST_CODE"		).addValue(qResult.get(i).get(7  ),"");                                      				gdRes.getHeader("CUST_NAME"		).addValue(qResult.get(i).get(8  ),"");                                      				gdRes.getHeader("EDI_BOX"		).addValue(qResult.get(i).get(9  ),"");                                      				gdRes.getHeader("SELL_BOX"		).addValue(qResult.get(i).get(10  ),"");				gdRes.getHeader("HS_BOX"		).addValue(qResult.get(i).get(11  ),"");				gdRes.getHeader("DEFAULT_BOX"	).addValue(qResult.get(i).get(12  ),"");								gdRes.getHeader("DEFAULT_CODE_NS"	).addSelectedHiddenValue(qResult.get(i).get(13));                                  				gdRes.getHeader("DC_ID"			).addValue(qResult.get(i).get(14 ),"");                                      				gdRes.getHeader("DC_NAME"		).addValue(qResult.get(i).get(15 ),"");                                      				gdRes.getHeader("DEPT_CODE"		).addValue(qResult.get(i).get(16 ),"");                                      				gdRes.getHeader("DEPT_NAME"		).addValue(qResult.get(i).get(17 ),"");                                      				gdRes.getHeader("HAN_NAME"		).addValue(qResult.get(i).get(18 ),"");  				gdRes.getHeader("BIGO"			).addValue(qResult.get(i).get(19 ),"");  							}                                                                                                                                                                                                                                             			gdRes.addParam("mode", "search");		                                                                         			gdRes.setMessage("");                                                                                            			gdRes.setStatus("true");                                                                                                                                                                                                                      		} catch (Exception e) {                                                                                              			throw e;                                                                                                         		}                                                                                                                    				                                                                                                             		return gdRes;                                                                                                        	}                                                                                                                        	// DW 2 Á¶È¸  Äõ¸® ÁÖ¹®Á¤º¸	public GridData doQuery2(GridData gdReq) throws Exception {                                                               		                                                                                                                     		GridData gdRes = new GridData();		                                                                             		int rowCount = 0;                                                                                                    						try {                                                                                                                			gdRes = OperateGridData.cloneResponseGridData(gdReq);                                                            			                                                                                                                 			String item_id	= gdReq.getParam("item_id");			String cust_id	= gdReq.getParam("cust_id");			String dc_id	= gdReq.getParam("dc_id");			String cnfm_date	= gdReq.getParam("cnfm_date");			                                                                                                                 			String paramKey   ="item_id!%!cust_id!%!dc_id!%!cnfm_date";                                                                      			String paramCode  = item_id+"!%!"+cust_id+"!%!"+dc_id+"!%!"+cnfm_date;                                                                                                                                                                                            			String query_id   = "ip_02120_Edi_NS_Analysis_DW2";                                                                                                                                                                                          			ArrayList<ArrayList<String>> qResult = new CommonUtil().getSelQeury(paramKey, paramCode, query_id);              			                                                                                                                 			rowCount = qResult.size();                                                                                                                                                                                                                    			//                                                                                                               			if (rowCount == 0) {                                                                                             				gdRes.addParam("mode", "search2");		                                                                     				gdRes.setMessage("...");                                                                                     				gdRes.setStatus("true");                                                                                     				return gdRes;                                                                                                			}                                                                                                                			                                                                                                                 			for (int i = 0; i < rowCount; i++) {                                                                             								gdRes.getHeader("GUBN"			).addValue(qResult.get(i).get(0  ),"");				gdRes.getHeader("CUST_CODE"		).addValue(qResult.get(i).get(1  ),"");				gdRes.getHeader("CUST_NAME"		).addValue(qResult.get(i).get(2  ),"");				gdRes.getHeader("SLIP_NO"		).addValue(qResult.get(i).get(3  ),"");                                      				gdRes.getHeader("SEQ_NO"		).addValue(qResult.get(i).get(4  ),"");                                      				gdRes.getHeader("REQT_QTY"		).addValue(qResult.get(i).get(5  ),"");                                      				gdRes.getHeader("SELL_QTY"		).addValue(qResult.get(i).get(6  ),"");                                      				gdRes.getHeader("SHORTAGE_GUBN"	).addValue(qResult.get(i).get(7  ),"");                                      				gdRes.getHeader("IPUT_DTTM"		).addValue(qResult.get(i).get(8  ),"");                                      				gdRes.getHeader("CLOS_DTTM"		).addValue(qResult.get(i).get(9  ),"");                                      				gdRes.getHeader("CHGO_GUBN"		).addValue(qResult.get(i).get(10 ),"");                                      							}                                                                                                                                                                                                                                             			gdRes.addParam("mode", "search2");		                                                                         			gdRes.setMessage("");                                                                                            			gdRes.setStatus("true");                                                                                                                                                                                                                      		} catch (Exception e) {                                                                                              			throw e;                                                                                                         		}                                                                                                                    				                                                                                                             		return gdRes;                                                                                                        	}                				//ÇÏ´Ü ±×¸®µå WD3 Á¶È¸ Äõ¸®  ¼ö¼ÛÁ¤º¸	public GridData doQuery3(GridData gdReq) throws Exception {                                                                       		GridData gdRes = new GridData();		                                                                             		int rowCount = 0;                                                                                                    		System.out.println("search3() start!!!");				try {                                                                                                                			gdRes = OperateGridData.cloneResponseGridData(gdReq);                                                            			                                                                                                                 			String item_id	= gdReq.getParam("item_id");			String cust_id	= gdReq.getParam("cust_id");			String dc_id	= gdReq.getParam("dc_id");			String cnfm_date	= gdReq.getParam("cnfm_date");			                                                                                                                 			String paramKey   ="item_id!%!cust_id!%!dc_id!%!cnfm_date";                                                                      			String paramCode  = item_id+"!%!"+cust_id+"!%!"+dc_id+"!%!"+cnfm_date;                                                                                                                                                                                            			String query_id   = "ip_02120_Edi_NS_Analysis_DW3";                                                                                                                                                                                           			ArrayList<ArrayList<String>> qResult = new CommonUtil().getSelQeury(paramKey, paramCode, query_id);              			                                                                                                                 			rowCount = qResult.size();                                                                                                                                                                                                                    			//                                                                                                               			if (rowCount == 0) {                                                                                             				gdRes.addParam("mode", "search3");		                                                                     				gdRes.setMessage("...");                                                                                     				gdRes.setStatus("true");                                                                                     				return gdRes;                                                                                                			}                                                                                                                			                                                                                                                 			System.out.println(rowCount);						for (int i = 0; i < rowCount; i++) {          				gdRes.getHeader("DC_NAME"		).addValue(qResult.get(i).get(0  ),"");				gdRes.getHeader("RECEIPT_PRE"	).addValue(qResult.get(i).get(1  ),"");				gdRes.getHeader("BASE_STOCK"	).addValue(qResult.get(i).get(2  ),"");				gdRes.getHeader("IPGO"			).addValue(qResult.get(i).get(3  ),"");				gdRes.getHeader("CHGO"			).addValue(qResult.get(i).get(4  ),"");				gdRes.getHeader("REQT_QTY"		).addValue(qResult.get(i).get(5  ),"");				gdRes.getHeader("CONFIRM_QTY"	).addValue(qResult.get(i).get(6  ),"");				gdRes.getHeader("SHORTAGE_QTY"	).addValue(qResult.get(i).get(7  ),"");				gdRes.getHeader("ORDER_CNT"		).addValue(qResult.get(i).get(8  ),"");				gdRes.getHeader("MIN_CLOS_DTTM"	).addValue(qResult.get(i).get(9  ),"");				gdRes.getHeader("MAX_CLOS_DTTM"	).addValue(qResult.get(i).get(10 ),"");				gdRes.getHeader("SRC_LOC"		).addValue(qResult.get(i).get(11 ),"");				gdRes.getHeader("BRAND_NO"		).addValue(qResult.get(i).get(12 ),"");				gdRes.getHeader("TRANS_STATE"	).addValue(qResult.get(i).get(13 ),"");				gdRes.getHeader("SHORTAGE_GUBN"	).addValue(qResult.get(i).get(14 ),"");				gdRes.getHeader("QTY"			).addValue(qResult.get(i).get(15 ),"");				gdRes.getHeader("CHGO_QTY"		).addValue(qResult.get(i).get(16 ),"");				gdRes.getHeader("CHGO_DTTM"		).addValue(qResult.get(i).get(17 ),"");				gdRes.getHeader("IPGO_QTY"		).addValue(qResult.get(i).get(18 ),"");				gdRes.getHeader("IPGO_DTTM"		).addValue(qResult.get(i).get(19 ),"");			}                                                                                                                                                                                                                                             			gdRes.addParam("mode", "search3");		                                                                         			gdRes.setMessage("");                                                                                            			gdRes.setStatus("true");                                                                                                                                                                                                                      		} catch (Exception e) {                                                                                              			throw e;                                                                                                         		}                                                                                                                    				                                                                                                             		return gdRes;                                                                                                        	}     	// DW 4 Á¶È¸  Äõ¸®  EDI Á¤º¸	public GridData doQuery4(GridData gdReq) throws Exception {                                                               		                                                                                                                     		GridData gdRes = new GridData();		                                                                             		int rowCount = 0;                                                                                                                                                                                                                                 		try {                                                                                                                			gdRes = OperateGridData.cloneResponseGridData(gdReq);                                                            			                                                                                                                 			String item_id	= gdReq.getParam("item_id");			String cust_id	= gdReq.getParam("cust_id");			String dc_id	= gdReq.getParam("dc_id");			String cnfm_date	= gdReq.getParam("cnfm_date");			                                                                                                                 			String paramKey   ="item_id!%!cust_id!%!dc_id!%!cnfm_date";                                                                      			String paramCode  = item_id+"!%!"+cust_id+"!%!"+dc_id+"!%!"+cnfm_date;                                                                                                                                                                                            			String query_id   = "ip_02120_Edi_NS_Analysis_DW4";                                                                                                                                                                                              			ArrayList<ArrayList<String>> qResult = new CommonUtil().getSelQeury(paramKey, paramCode, query_id);              			                                                                                                                 			rowCount = qResult.size();                                                                                                                                                                                                                    			//                                                                                                                 			if (rowCount == 0) {                                                                                             				gdRes.addParam("mode", "search4");		                                                                     				gdRes.setMessage("...");                                                                                     				gdRes.setStatus("true");                                                                                     				return gdRes;                                                                                                			}                                                                                                                			                                                                                                                 			for (int i = 0; i < rowCount; i++) {        				gdRes.getHeader("GUBN"			).addValue(qResult.get(i).get(0  ),"");                                      				gdRes.getHeader("CNFM_DATE"		).addValue(qResult.get(i).get(1  ),"");                                      				gdRes.getHeader("CUST_CODE"		).addValue(qResult.get(i).get(2  ),"");                                      				gdRes.getHeader("OD_SLIP_NO"	).addValue(qResult.get(i).get(3  ),"");				gdRes.getHeader("ODER_BOX"		).addValue(qResult.get(i).get(4  ),"");				gdRes.getHeader("CONV_BOX"		).addValue(qResult.get(i).get(5  ),"");				gdRes.getHeader("ODER_DATE"		).addValue(qResult.get(i).get(6  ),"");                                      				gdRes.getHeader("IPUT_TIME"		).addValue(qResult.get(i).get(7  ),"");                                      				gdRes.getHeader("IPUT_EMP_NO"	).addValue(qResult.get(i).get(8  ),"");                                      				gdRes.getHeader("CONV_TIME"		).addValue(qResult.get(i).get(9  ),"");                                      				gdRes.getHeader("CONV_EMP_NO"	).addValue(qResult.get(i).get(10 ),"");                                      				gdRes.getHeader("SLIP_NO"		).addValue(qResult.get(i).get(11 ),"");                                      			}                                                                                                                                                                                                                                             			gdRes.addParam("mode", "search4");		                                                                         			gdRes.setMessage("");                                                                                            			gdRes.setStatus("true");                                                                                                                                                                                                                      		} catch (Exception e) {                                                                                              			throw e;                                                                                                         		}                                                                                                                    				                                                                                                             		return gdRes;                                                                                                        	}                      	public GridData doSave(GridData gdReq) throws Exception {		System.out.println("doSave() start!!!");		conn = databaseUtility.getConnection("t3sinc"); // DB Connection		stmt = conn.createStatement(); // statement °´Ã¼ »ý¼º		GridData gdRes = new GridData(); // WiseGrid °´Ã¼»ý¼º		int rowCount = 0; // CRUD ÄÃ·³ row ¼ö				System.out.println("Total Row Count : " + gdReq.getHeader("CNFM_DATE").getRowCount());		try {			// È­¸é¿¡¼­ Àü´Þ¹ÞÀº "CRUD"ÀÇ row ¼ö¸¦ °¡Á®¿Â´Ù.			rowCount = gdReq.getHeader("CNFM_DATE").getRowCount();						if(rowCount == 0) {				gdRes.addParam("mode", "Save");				gdRes.setMessage("¼º°øÀûÀ¸·Î ÀÛ¾÷ÇÏ¿´½À´Ï´Ù._ÀúÀåµ¥ÀÌÅÍ ¾øÀ½.");				gdRes.setStatus("true");				return gdRes;			}			System.out.println("CNFM_DATE Row Count : " + rowCount);			String user_id = gdReq.getParam("user_id");			String sql, inner_sql;						//ÇØ´ç ¹öÁ¯ÀÌ ÀÖÀ»°æ¿ì¿¡´Â (MERGE ¹® ¾÷µ¥ÀÌÆ®³ª ÀÎ¼³Æ®¸¦) ½ÇÇà!!				sql  = "	MERGE INTO EDI_DEFAULT_NS ORG																		\n";			sql += "	 USING (																							\n";			boolean flag = false;						for (int i = 0; i < rowCount; i++) {												if( flag){					sql  += "union all \n";				}				flag = true;						// ÄÞº¸¸®½ºÆ® º¯¼ö ÇÒ´ç					String default_code = "";					if(gdReq.getHeader("DEFAULT_CODE_NS").getSelectedIndex(i) > -1){													default_code = gdReq.getHeader("DEFAULT_CODE_NS").getComboHiddenValues()[gdReq.getHeader("DEFAULT_CODE_NS").getSelectedIndex(i)];					}					//ÆÄ¶ó¹ÌÅÍ¸¦ º¯¼ö¿¡ Àû¿ë!!  					inner_sql  = "	SELECT		'" + gdReq.getHeader("CNFM_DATE"	).getValue(i)	+ "'	CNFM_DATE,  		\n";					inner_sql += "				'" + gdReq.getHeader("ITEM_ID"		).getValue(i)	+ "'	PROD_CODE,  		\n";					inner_sql += "				'" + gdReq.getHeader("CUST_CODE"	).getValue(i)	+ "'	CUST_CODE,			\n";					inner_sql += "				DECODE('" + gdReq.getHeader("GUBN"	).getValue(i)			+ "','ÀÏ¹Ý','1','È¸¼Û','2')	GUBN,\n";					inner_sql += "				'" + gdReq.getHeader("BIGO"			).getValue(i)	+ "'	BIGO,				\n";					inner_sql += "		DECODE(	'" + default_code		+ "',NULL,'300','"+ default_code +"')	 	DEFAULT_CODE_NS,	\n";					inner_sql += "				'" + user_id										+ "' 	IPUT_EMP_NO			\n";					inner_sql += "	FROM	DUAL			                                        							\n";										sql += inner_sql;										if(rowCount == 1){ // update°Ç¼ö°¡ 1°ÇÀÎ °æ¿ì ora-01732¿¡·¯°¡ ¹ß»ýÇÑ´Ù. ÀÌÀ¯¸ð¸§. µû¶ó¼­ 1°ÇÀÎ °æ¿ì °­Á¦·Î µÎ°ÇÀ¸·Î ¸¸µç´Ù.						sql += "UNION	ALL \n" + inner_sql;					}																}//for¹® ³¡.						sql += "		) TMP                                                                                      	\n";			sql += "	ON  (                                                                                          	\n";			sql += "	      		ORG.CNFM_DATE	= TMP.CNFM_DATE                                                  	\n";			sql += "		  AND	ORG.PROD_CODE 	= TMP.PROD_CODE                                                  	\n";			sql += "		  AND	ORG.CUST_CODE	= TMP.CUST_CODE                                                  	\n";			sql += "		  AND	ORG.GUBN		= TMP.GUBN                                                  		\n";			sql += "	      ) WHEN MATCHED THEN                                                                    	\n";			sql += "	             UPDATE                                                                          	\n";			sql += "	                SET	ORG.DEFAULT_CODE_NS = TMP.DEFAULT_CODE_NS,                               	\n";			sql += "	                   	ORG.IPUT_DATE		= SYSDATE,                                           	\n";			sql += "	                   	ORG.BIGO			= TMP.BIGO,                                           	\n";			sql += "						ORG.IPUT_EMP_NO		= TMP.IPUT_EMP_NO                                    	\n";			sql += "	        WHEN NOT MATCHED THEN                                                                	\n";			sql += "	        INSERT                                                                               	\n";			sql += "	        (                                                                                    	\n";			sql += "	          ORG.CNFM_DATE, ORG.PROD_CODE, ORG.CUST_CODE, ORG.DEFAULT_CODE_NS, ORG.GUBN, ORG.BIGO, ORG.IPUT_EMP_NO  	\n";			sql += "	        ) VALUES                                                                             	\n";			sql += "	        (                                                                                    	\n";			sql += "	            TMP.CNFM_DATE, TMP.PROD_CODE, TMP.CUST_CODE, TMP.DEFAULT_CODE_NS, TMP.GUBN, TMP.BIGO, TMP.IPUT_EMP_NO	\n";			sql += "	        )                                                                                    	\n";			System.out.println("-----------------------------------------------QUERY-----------------------------------------------");			System.out.println(sql);			System.out.println("-----------------------------------------------QUERY-----------------------------------------------");						System.out.println("executeQuery ½ÇÇà!!!");						rs = databaseUtility.executeQuery(stmt, sql);						System.out.println("executeQuery Á¾·á!!!");						/*			 * È­¸é¿¡ Àü´ÞÇÒ ÆÄ¶ó¹ÌÅÍ¸¦ ¼³Á¤ÇÑ´Ù. ¸Þ¼¼Áö¸¦ ¼ÂÆÃÇÑ´Ù. Status¸¦ ¼³Á¤ÇÑ´Ù			 */			gdRes.addParam("mode", "save");			gdRes.setMessage("¼º°øÀûÀ¸·Î ÀÛ¾÷ÇÏ¿´½À´Ï´Ù.");			gdRes.setStatus("true");					}catch (Exception e) {			throw e;		}finally {            databaseUtility.close(conn, stmt, rs);           }        System.out.println("doSave() end!!!");		return gdRes;	}				}                                                                                                                  