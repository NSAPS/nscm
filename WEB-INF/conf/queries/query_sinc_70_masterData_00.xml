<?xml version="1.0" encoding="EUC-KR"?>
<queries>

<!--
=====================================================================================================
	기준정보 >> 수송계획
=====================================================================================================
-->
	<!--
	======================================================================
		1. DC기준정보
	======================================================================
	-->
	
	<!-- DC기준정보 리스트 -->
	<query id="dc_loc_list">	
	
	
		SELECT  DC.DC_ID, DC.DC_SHORT_NAME
		  FROM  DC_MST DC
		  		,(SELECT '4' SS FROM DUAL)
		 WHERE  DC.MADE_TYPE != 'DE'
		 ORDER  BY DC.DC_ID
		 		 
		 
	</query>	
	
	<!-- DC 기준정보 sl_cat 리스트 -->
	<query id="sl_cat_list">
	
		SELECT  CD, CD_NAME 
		  FROM  CODE_MST, DUAL B
		 WHERE  CD_GRP = 'DC_MST_SL_CAT'
		 ORDER BY CD
	
	</query> 
			
	
	<!-- DC기준정보 -->
	<query id="md_04010_dcMaster_list">	
	
	
		SELECT  DM2.DC_ID, DM2.DC_SHORT_NAME, DM2.DC_LOC_TYPE, DM2.CDC_FLAG, DM2.RDC_FLAG, DM2.SL_CAT
		        ,MAX(CASE WHEN PRIORITY = '1' THEN DD2.SRC_LOC ELSE NULL END) CDCN1
		        ,MAX(CASE WHEN PRIORITY = '1' THEN DD2.SRC_NAME ELSE NULL END) CDC1
		        ,MAX(CASE WHEN PRIORITY = '2' THEN DD2.SRC_LOC ELSE NULL END) CDCN2
		        ,MAX(CASE WHEN PRIORITY = '2' THEN DD2.SRC_NAME ELSE NULL END) CDC2
		        ,MAX(CASE WHEN PRIORITY = '3' THEN DD2.SRC_LOC ELSE NULL END) CDCN3
		        ,MAX(CASE WHEN PRIORITY = '3' THEN DD2.SRC_NAME ELSE NULL END) CDC3
		        ,DM2.KEEPING_CAPA1, DM2.KEEPING_CAPA2, DM2.KEEPING_CAPA3        
		  FROM  DC_MST DM2
		         ,(
		        SELECT	DD.DC_ID, DD.SRC_LOC, DM.DC_SHORT_NAME SRC_NAME, DD.PRIORITY 
		          FROM 	DC_MST DM, DC_DTL DD
		         WHERE	DM.DC_ID = DD.SRC_LOC
		           AND	DM.MADE_TYPE != 'DE'
		           AND 	DD.MADE_TYPE != 'DE'
		        ) DD2
		WHERE  DM2.DC_ID = DD2.DC_ID (+)
		  AND  DM2.MADE_TYPE != 'DE'		  
		 [AND  DM2.DC_ID = '${dc_loc}']		 		 
		GROUP  BY DM2.DC_ID, DM2.DC_SHORT_NAME, DM2.DC_LOC_TYPE, DM2.CDC_FLAG, DM2.RDC_FLAG, DM2.SL_CAT
		       ,DM2.KEEPING_CAPA1, DM2.KEEPING_CAPA2, DM2.KEEPING_CAPA3
		ORDER  BY DM2.DC_ID			

			
	</query>
		
	
	<!-- 수정후  저장 -->
	<!-- 01. DC_MST 정보 업데이트 -->
	<!-- 02. DC_DTL 그룹 전체 삭제  -->
	<!-- 03_1_2_3. DC_DTL 그룹 전체 INSERT -->
	<query id="md_04010_dcMaster_list_save_01" fix="_user_id" iterator="cdc_flag rdc_flag sl_cat capa1 capa2 capa3 dc_id">
			
		UPDATE  DC_MST
		   SET  CDC_FLAG        =  '$!{cdc_flag}'
		        ,RDC_FLAG	    =  '$!{rdc_flag}'
		        ,SL_CAT 	    =  '$!{sl_cat}'
		        ,KEEPING_CAPA1  =  TO_NUMBER(REPLACE('$!{capa1}', ',', ''))
		        ,KEEPING_CAPA2  =  TO_NUMBER(REPLACE('$!{capa2}', ',', ''))
		        ,KEEPING_CAPA3  =  TO_NUMBER(REPLACE('$!{capa3}', ',', ''))
		        ,MADE_DTTM      =  SYSDATE
                ,MADE_BY        =  '$!{_user_id}'
		 WHERE  MADE_TYPE      !=  'DE' 
		   AND  DC_ID           =  '$!{dc_id}'			
			
	</query>	
	
	<query id="md_04010_dcMaster_list_save_02" iterator="dc_id">	
	
		DELETE  DC_DTL
		 WHERE  MADE_TYPE != 'DE'
		   AND  DC_ID = '$!{dc_id}'	
	
	</query>		
	 
	<query id="md_04010_dcMaster_list_save_03_1" fix="_user_id" iterator="dc_id cdc1">	
		
		#if ( "$!{cdc1}" != "" )
			INSERT  INTO DC_DTL (DC_ID, SRC_LOC, PRIORITY, MADE_TYPE, MADE_DTTM, MADE_BY)
			SELECT  '$!{dc_id}' AS DC_ID
			        ,'$!{cdc1}' AS SRC_LOC
			        ,TO_NUMBER('1') AS PRIORITY
			        ,'AD' AS MADE_TYPE
			        ,SYSDATE AS MADE_DTTM
			        ,'$!{_user_id}' AS MADE_BY
			  FROM  DUAL 
			 WHERE  NOT EXISTS (SELECT  DD.DC_ID 
			                      FROM  DC_DTL DD 
			                     WHERE  DD.DC_ID = '$!{dc_id}'
			                       AND  DD.SRC_LOC = '$!{cdc1}'
			                    )
		#else
			DELETE  DC_DTL
			 WHERE  0=1
		#end		
					
	</query>	
	
	<query id="md_04010_dcMaster_list_save_03_2" fix="_user_id" iterator="dc_id cdc2">
		
		#if ( "$!{cdc2}" != "" )
			INSERT  INTO DC_DTL (DC_ID, SRC_LOC, PRIORITY, MADE_TYPE, MADE_DTTM, MADE_BY)
			SELECT  '$!{dc_id}' AS DC_ID
			        ,'$!{cdc2}' AS SRC_LOC
			        ,TO_NUMBER('2') AS PRIORITY
			        ,'AD' AS MADE_TYPE
			        ,SYSDATE AS MADE_DTTM
			        ,'$!{_user_id}' AS MADE_BY
			  FROM  DUAL 
			 WHERE  NOT EXISTS (SELECT  DD.DC_ID 
			                      FROM  DC_DTL DD 
			                     WHERE  DD.DC_ID = '$!{dc_id}'
			                       AND  DD.SRC_LOC = '$!{cdc2}'
			                    )
		#else
			DELETE  DC_DTL
			 WHERE  2=3 
		#end
		
	</query>
		
	
	<query id="md_04010_dcMaster_list_save_03_3" fix="_user_id" iterator="dc_id cdc3">
				
		#if ( "$!{cdc3}" != "" )
			INSERT  INTO DC_DTL (DC_ID, SRC_LOC, PRIORITY, MADE_TYPE, MADE_DTTM, MADE_BY)
			SELECT  '$!{dc_id}' AS DC_ID
			        ,'$!{cdc3}' AS SRC_LOC
			        ,TO_NUMBER('3') AS PRIORITY
			        ,'AD' AS MADE_TYPE
			        ,SYSDATE AS MADE_DTTM
			        ,'$!{_user_id}' AS MADE_BY
			  FROM  DUAL 
			 WHERE  NOT EXISTS (SELECT  DD.DC_ID 
			                      FROM  DC_DTL DD 
			                     WHERE  DD.DC_ID = '$!{dc_id}'
			                       AND  DD.SRC_LOC = '$!{cdc3}'
			                    )
		#else
			DELETE  DC_DTL
			 WHERE  3=4

		#end
		
	</query>
	
	<!--
	======================================================================
		2. 운송수단 기준정보
	======================================================================
	-->
	
	
	
	<!-- 운송수단 기준정보 -->
	<query id="md_04020_transModeMaster_list" paging="true">
	
	
		SELECT  TM.MODE_ID
	      		,TM.MODE_NAME
	        	,TM.MAX_CAPA_KG
	        	,TM.EXCESS_RATE_KG
	        	,TM.MAX_CAPA_PT
	        	,TM.EXCESS_RATE_PT
	 	  FROM  TRANS_MODE TM, DUAL B
	 	 WHERE  TM.MODE_ID||TM.MODE_NAME LIKE '%'||'${mode_id}'||'%'
	 	   AND	TM.MADE_TYPE != 'DE'
	 	 ORDER  BY TM.MODE_ID	 	 
	 	  
	 	  			
	</query>
	
	<!--
	======================================================================
		3. 수송 Route 자동생성
	======================================================================
	-->
	
	<!-- 수송 Route 자동생성 : 조회 -->
	<query id="md_04030_transRoute_list" paging="true"> 
		
        SELECT  MP.TGT_LOC, DM1.DC_SHORT_NAME TGT_NAME, MP.PROD_ID, IM.ITEM_NAME, 
		        MP.SRC_LOC, DM2.DC_SHORT_NAME SRC_NAME, MP.PRIORITY
		  FROM  MAP_PROD_DCPATH MP, ITEM_MST IM, DC_MST DM1, 
		        (
		         SELECT  D.DC_ID, D.DC_SHORT_NAME
		           FROM  DC_MST D
		         UNION ALL
		         SELECT  H.HID DC_ID, H.HID_NAME DC_SHORT_NAME
		           FROM  HRCHY H
		          WHERE  H.LVL_TYPE = '공장'
		        ) DM2 
		 WHERE  MP.TGT_LOC = DM1.DC_ID
		   AND  MP.SRC_LOC = DM2.DC_ID
		   AND  MP.PROD_ID = IM.ITEM_ID 
		   [AND  MP.TGT_LOC = '${tgt_loc}']
		   AND  MP.PROD_ID = '${item_id}'
		 ORDER  BY MP.TGT_LOC, MP.PROD_ID, MP.PRIORITY
			
	</query>
	
	<!-- 수송 Route 자동생성 : PROCEDURE 호출 -->
	<query id="md_04030_transRoute_list_create">
	
		CALL SP_RP_99_PATH_AUTO('CRE_DATA', SYSDATE, 1, 1, 'NA', SYSDATE)
		
	</query>

	<!-- 수송 Route 자동생성 : 무한루프 무결성 체크 -->
	<query id="md_04030_transRoute_list_check_integrity">

		 SELECT DECODE(SIGN(COUNT(EX1.PROD_ID)),1,'N','Y')	YN,
		 		COUNT(EX1.PROD_ID)							N_CNT
		  FROM MAP_PROD_DCPATH_EXCEPT EX1,
		       MAP_PROD_DCPATH_EXCEPT EX2,
		       ITEM_MST IM
		 WHERE EX1.PROD_ID = EX2.PROD_ID
		   AND EX1.SRC_LOC = EX2.TGT_LOC
		   AND EX1.TGT_LOC = EX2.SRC_LOC
		   AND EX1.PROD_ID = IM.ITEM_ID
		   --AND IM.SELL_STOP_DATE	= '99991231'  수출때문에 뺀다.
		 ORDER BY EX1.PROD_ID, EX1.SRC_LOC
		
	</query>	

	<!-- 수송 Route 자동생성 : 무한루프 무결성 체크 -->
	<query id="md_04030_transRoute_integrity_check_popup">

		SELECT EX1.PROD_ID, IM.ITEM_NAME, F_GETDCNAME(EX1.SRC_LOC), F_GETDCNAME(EX1.TGT_LOC), NC.HAN_NAME
		  FROM MAP_PROD_DCPATH_EXCEPT EX1,
		       MAP_PROD_DCPATH_EXCEPT EX2,
		       ITEM_MST IM,
			   NCOMT005	NC
		 WHERE EX1.PROD_ID = EX2.PROD_ID
		   AND EX1.SRC_LOC = EX2.TGT_LOC
		   AND EX1.TGT_LOC = EX2.SRC_LOC
		   AND EX1.PROD_ID = IM.ITEM_ID
		   AND EX1.MADE_BY = NC.EMP_NO
		 ORDER BY EX1.PROD_ID, EX1.SRC_LOC

	</query>	
	
	<!--
	======================================================================
		4. 품목별 수송 Route 관리
	======================================================================
	-->
	
	<!-- 품목별 수송 Route  관리  -->
	<!-- 1. 선택한 제품의 Exception 테이블(MAP_PROD_DCPATH_EXCEPT)에 데이터가 있는지 조회 -->
	<query id="md_04040_transRouteByProduct_list">
        
        -- 해당 쿼리는 INSERT 문제를 해결하기 위해서, UI상의 한 COLUMN이 쿼리의 한 ROW로 구성됨.
        SELECT  NVL(MPD.TGT_LOC, DM.TGT_LOC) TGT, NVL(MPD.TGT_NAME, DM.DC_SHORT_NAME) T_NAME, 
                NVL(MPD.SRC_LOC, DM.DC_ID) SRC, MPD.SRC_NAME, MPD.PRIORITY, 
                MPD.TRANS_COST, MPD.CNT
          FROM  ( 
                 -- 1. ITEM_ID에 해당하는 데이터를 가지고옮(빈 PRIORITY 정보를 갖고 있지 않음, 화면에 뿌려질려면, 빈 PRIORITY값도 가지고 있어야함)   
                 SELECT  MP.TGT_LOC, DM2.DC_SHORT_NAME TGT_NAME, MP.SRC_LOC, 
                         DM1.DC_SHORT_NAME SRC_NAME, MP.PRIORITY, MP.TRANS_COST, DM1.CNT 
                   FROM  MAP_PROD_DCPATH_EXCEPT MP, DC_MST DM2,
                         (
                          -- 출고가 가능한(CDC_FLAG 가 'Y'인 경우) 출고장을 SELECT
                          SELECT  DM.DC_ID, DM.DC_SHORT_NAME, 
                                  SUM(1) OVER (ORDER BY DM.DC_ID) CNT
                            FROM  DC_MST DM
                           WHERE  DM.DC_ID IN(8510, 8620) 
                              OR  DM.CDC_FLAG = 'Y'
                         ) DM1
                  WHERE  PROD_ID    = '$!{item_id}'
                    AND  MP.SRC_LOC = DM1.DC_ID 
                    AND  MP.TGT_LOC = DM2.DC_ID
                  ORDER  BY MP.TGT_LOC, MP.SRC_LOC, DM1.CNT
                 ) MPD, 
                 (       
                  -- 2. 빈 PRIORITY 값을 갖는 ROW를 넣어주기 위해서, 1에서 선택되지 않은 출고장의 값을 모두 SELECT함.        
                  SELECT  DISTINCT DM1.DC_ID TGT_LOC, DM1.DC_SHORT_NAME, DM2.DC_ID, DM2.CNT 
                    FROM  (
                           -- 해당 되는 아이템의 모든 입고장을 SELECT
                           SELECT  DM.DC_ID, DM.DC_SHORT_NAME
                             FROM  DC_MST DM
                             WHERE DM.MADE_TYPE NOT IN ('DE')
                          ) DM1,
                          (
                           -- 해당 되는 아이템의 모든 출고장을 SELECT
                           SELECT  DM.DC_ID, DM.DC_SHORT_NAME, 
                                   SUM(1) OVER (ORDER BY DM.DC_ID) CNT
                             FROM  DC_MST DM
                            WHERE  DM.DC_ID IN(8510, 8620) 
                               OR  DM.CDC_FLAG = 'Y'
                          ) DM2,
                          (
                           SELECT 	IM.ITEM_ID
                             FROM 	ITEM_MST IM
                            WHERE 	IM.MADE_TYPE != 'DE'
                              AND   IM.ITYPE != 'HALB' --반제품 제외
                              AND 	IM.ITEM_ID ='$!{item_id}'
                            ORDER 	BY IM.ITEM_ID
                          ) IM
                 ) DM
          WHERE  MPD.TGT_LOC(+) = DM.TGT_LOC
            AND  MPD.SRC_LOC(+) = DM.DC_ID 
            AND  MPD.CNT(+)   = DM.CNT
            AND  '$!{item_id}' IS NOT NULL 
          ORDER  BY TGT, SRC, MPD.CNT
			
	</query>
	
	
    <!-- 2. 품목별 검색 : 아이템이 없는 경우, 조회가 되지 않게 막기위해서. -->
	<query id="transRouteByProduct_header">
		 
		SELECT DM.DC_SHORT_NAME, DM.DC_ID, DM.CNT
		  FROM (
		        SELECT  DM.DC_SHORT_NAME, DM.DC_ID, ROWNUM CNT
		          FROM  DC_MST DM
		         WHERE  DM.DC_ID IN(8510, 8620) 
                    OR  DM.CDC_FLAG = 'Y'
		          ORDER BY DC_ID
		       ) DM
   
	</query>
	
	<!-- 3. 품목별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT DELETE -->
	<query id="md_04040_transRouteByProduct_list_save_01">
			
			DELETE 	MAP_PROD_DCPATH_EXCEPT MP
 			 WHERE  MP.PROD_ID = '$!{item_id}'	
			
	</query>
	
	<!-- 4. 품목별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT UPDATE -->
	<query id="md_04040_transRouteByProduct_list_save_02" fix="item_id _user_id"
		   iterator="priority src_loc tgt_loc tran_cost">
		UPDATE  MAP_PROD_DCPATH_EXCEPT MP
		   SET  MP.PRIORITY   = '$!{priority}',
		        MP.TRANS_COST = (
		                         SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
								   FROM  DC_DTL_TRANS_COST DC
								  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
								    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
								 ),
		        MP.MADE_TYPE  = 'AD',
		        MP.MADE_DTTM  = SYSDATE,
		        MP.MADE_BY    = '$!{_user_id}'
		 WHERE  MP.PROD_ID = '$!{item_id}' 
		   AND  MP.SRC_LOC = '$!{src_loc}' 
		   AND  MP.TGT_LOC = '$!{tgt_loc}'
		   AND 	EXISTS (
		                SELECT  MPD.PROD_ID
		                  FROM  MAP_PROD_DCPATH_EXCEPT MPD
		                 WHERE  MPD.PROD_ID = '$!{item_id}'
		                   AND  MPD.SRC_LOC = '$!{src_loc}'
		                   AND  MPD.TGT_LOC = '$!{tgt_loc}'
		               )
	</query>
	
	<!-- 5. 품목별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT INSERT -->
	<query id="md_04040_transRouteByProduct_list_save_03" fix="item_id _user_id"
		   iterator="priority src_loc tgt_loc tran_cost">
		INSERT INTO  MAP_PROD_DCPATH_EXCEPT MP
             	( PROD_ID, SRC_LOC, TGT_LOC, PRIORITY, TRANS_COST, MADE_TYPE, MADE_DTTM, MADE_BY)
		SELECT  '$!{item_id}'  AS PROD_ID,
		        '$!{src_loc}'  AS SRC_LOC,
		        '$!{tgt_loc}'  AS TGT_LOC,
		        '$!{priority}' AS PRIORITY,
		        (
                 SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
				   FROM  DC_DTL_TRANS_COST DC
				  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
				    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
				) AS TRANS_COST,
		        'AD'           AS MADE_TYPE,
		        SYSDATE        AS MADE_DTTM,
		        '$!{_user_id}' AS MADE_BY
		  FROM  DUAL
		 WHERE  '$!{priority}' IS NOT NULL
		   AND  NOT EXISTS (
		              SELECT  MPD.PROD_ID
		                FROM  MAP_PROD_DCPATH_EXCEPT MPD
		               WHERE  MPD.PROD_ID = '$!{item_id}'
		                 AND  MPD.SRC_LOC = '$!{src_loc}'
		                 AND  MPD.TGT_LOC = '$!{tgt_loc}'
		             )
	</query>
	
	<!-- 6. 품목별 수송 Route 관리 MAP_PROD_DCPATH DELETE -->
	<query id="md_04040_transRouteByProduct_list_save_04" fix="item_id"
	       iterator="priority src_loc tgt_loc">
			
			DELETE 	MAP_PROD_DCPATH MP
 			 WHERE  MP.PROD_ID = '$!{item_id}'
 			   AND  MP.SRC_LOC = '$!{src_loc}'
 			   AND  MP.TGT_LOC = '$!{tgt_loc}'	
			
	</query>
	
	<!-- 7. 품목별 수송 Route 관리  MAP_PROD_DCPATH UPDATE -->
	<query id="md_04040_transRouteByProduct_list_save_05" fix="item_id _user_id"
		   iterator="priority src_loc tgt_loc tran_cost">
		UPDATE  MAP_PROD_DCPATH MP
		   SET  MP.PRIORITY   = '$!{priority}',
		        MP.TRANS_COST = (
		                         SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
								   FROM  DC_DTL_TRANS_COST DC
								  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
								    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
								 ),
		        MP.MADE_TYPE  = 'AD',
		        MP.MADE_DTTM  = SYSDATE,
		        MP.MADE_BY    = '$!{_user_id}'
		 WHERE  MP.PROD_ID = '$!{item_id}' 
		   AND  MP.SRC_LOC = '$!{src_loc}' 
		   AND  MP.TGT_LOC = '$!{tgt_loc}'
		   AND 	EXISTS (
		                SELECT  MPD.PROD_ID
		                  FROM  MAP_PROD_DCPATH MPD
		                 WHERE  MPD.PROD_ID = '$!{item_id}'
		                   AND  MPD.SRC_LOC = '$!{src_loc}'
		                   AND  MPD.TGT_LOC = '$!{tgt_loc}'
		               )
	</query>
	
	<!-- 8. 품목별 수송 Route 관리 MAP_PROD_DCPATH INSERT -->
	<query id="md_04040_transRouteByProduct_list_save_06" fix="item_id _user_id"
		   iterator="priority src_loc tgt_loc tran_cost">
		INSERT INTO  MAP_PROD_DCPATH MP
             	( PROD_ID, SRC_LOC, TGT_LOC, PRIORITY, TRANS_COST, MADE_TYPE, MADE_DTTM, MADE_BY)
		SELECT  '$!{item_id}'  AS PROD_ID,
		        '$!{src_loc}'  AS SRC_LOC,
		        '$!{tgt_loc}'  AS TGT_LOC,
		        '$!{priority}' AS PRIORITY,
		        (
                 SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
				   FROM  DC_DTL_TRANS_COST DC
				  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
				    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
				) AS TRANS_COST,
		        'AD'           AS MADE_TYPE,
		        SYSDATE        AS MADE_DTTM,
		        '$!{_user_id}' AS MADE_BY
		  FROM  DUAL
		 WHERE  '$!{priority}' IS NOT NULL
		   AND  NOT EXISTS (
		              SELECT  MPD.PROD_ID
		                FROM  MAP_PROD_DCPATH MPD
		               WHERE  MPD.PROD_ID = '$!{item_id}'
		                 AND  MPD.SRC_LOC = '$!{src_loc}'
		                 AND  MPD.TGT_LOC = '$!{tgt_loc}'
		             )
	</query>
	
	<!--
	======================================================================
		5. 거점별 수송Route 관리
	======================================================================
	-->
	
	<!-- 거점별 수송Route  관리  -->
	<!-- ① Exception 테이블(MAP_PROD_DCPATH_EXCEPT)에 데이터가 있는지 조회 -->
	<query id="md_04050_transRouteByLocation_list">
		
        -- 총 20개의 출고장을 갖도록 쿼리를 설정.	
        SELECT  MPDE.CD_NAME, MPDE.CD, MPDE.PROD_ID, MPDE.ITEM_NAME, 
		        SUM(CASE WHEN MPDE.CNT=1  THEN PRIORITY ELSE NULL end) P01, 
		        SUM(CASE WHEN MPDE.CNT=2  THEN PRIORITY ELSE NULL end) P02, 
		        SUM(CASE WHEN MPDE.CNT=3  THEN PRIORITY ELSE NULL end) P03, 
		        SUM(CASE WHEN MPDE.CNT=4  THEN PRIORITY ELSE NULL end) P04, 
		        SUM(CASE WHEN MPDE.CNT=5  THEN PRIORITY ELSE NULL end) P05, 
		        SUM(CASE WHEN MPDE.CNT=6  THEN PRIORITY ELSE NULL end) P06, 
		        SUM(CASE WHEN MPDE.CNT=7  THEN PRIORITY ELSE NULL end) P07, 
		        SUM(CASE WHEN MPDE.CNT=8  THEN PRIORITY ELSE NULL end) P08, 
		        SUM(CASE WHEN MPDE.CNT=9  THEN PRIORITY ELSE NULL end) P09, 
		        SUM(CASE WHEN MPDE.CNT=10 THEN PRIORITY ELSE NULL end) P10, 
		        SUM(CASE WHEN MPDE.CNT=11 THEN PRIORITY ELSE NULL end) P11, 
		        SUM(CASE WHEN MPDE.CNT=12 THEN PRIORITY ELSE NULL end) P12, 
		        SUM(CASE WHEN MPDE.CNT=13 THEN PRIORITY ELSE NULL end) P13, 
		        SUM(CASE WHEN MPDE.CNT=14 THEN PRIORITY ELSE NULL end) P14, 
		        SUM(CASE WHEN MPDE.CNT=15 THEN PRIORITY ELSE NULL end) P15, 
		        SUM(CASE WHEN MPDE.CNT=16 THEN PRIORITY ELSE NULL end) P16, 
		        SUM(CASE WHEN MPDE.CNT=17 THEN PRIORITY ELSE NULL end) P17, 
		        SUM(CASE WHEN MPDE.CNT=18 THEN PRIORITY ELSE NULL end) P18, 
		        SUM(CASE WHEN MPDE.CNT=19 THEN PRIORITY ELSE NULL end) P19,
		        SUM(CASE WHEN MPDE.CNT=20 THEN PRIORITY ELSE NULL end) P20, -- CDC 증가로 컬럼 추가
		        SUM(CASE WHEN MPDE.CNT=21 THEN PRIORITY ELSE NULL end) P21,
		        SUM(CASE WHEN MPDE.CNT=22 THEN PRIORITY ELSE NULL end) P22,
		        SUM(CASE WHEN MPDE.CNT=23 THEN PRIORITY ELSE NULL end) P23,
		        SUM(CASE WHEN MPDE.CNT=24 THEN PRIORITY ELSE NULL end) P24,
		        SUM(CASE WHEN MPDE.CNT=25 THEN PRIORITY ELSE NULL end) P25,
		        SUM(CASE WHEN MPDE.CNT=26 THEN PRIORITY ELSE NULL end) P26,
		        SUM(CASE WHEN MPDE.CNT=27 THEN PRIORITY ELSE NULL end) P27,
		        SUM(CASE WHEN MPDE.CNT=28 THEN PRIORITY ELSE NULL end) P28,
		        SUM(CASE WHEN MPDE.CNT=29 THEN PRIORITY ELSE NULL end) P29,
		        SUM(CASE WHEN MPDE.CNT=30 THEN PRIORITY ELSE NULL end) P30,
		        SUM(CASE WHEN MPDE.CNT=31 THEN PRIORITY ELSE NULL end) P31,
		        SUM(CASE WHEN MPDE.CNT=32 THEN PRIORITY ELSE NULL end) P32
		 FROM  (
		        SELECT  IH.CD_NAME, IH.CD, NVL(MPD.PROD_ID, IH.PROD_ID) PROD_ID, IH.ITEM_NAME, MPD.SRC_LOC, MPD.SRC_NAME, MPD.PRIORITY, MPD.TRANS_COST, MPD.CNT
		          FROM  (
		                 SELECT  MP.PROD_ID, MP.SRC_LOC, DM1.DC_SHORT_NAME SRC_NAME, MP.PRIORITY, MP.TRANS_COST, DM1.CNT 
		                            FROM  MAP_PROD_DCPATH_EXCEPT MP,
		                                  (
		                                   -- 출고가 가능한(CDC_FLAG 가 'Y'인 경우) 출고장을 SELECT
		                                   SELECT  DM.DC_ID, DM.DC_SHORT_NAME, 
		                                           SUM(1) OVER (ORDER BY DM.DC_ID) CNT
		                                     FROM  DC_MST DM
		                                    WHERE  DM.DC_ID IN(8510, 8620) 
                                               OR  DM.CDC_FLAG = 'Y'
		                                  ) DM1
		                           WHERE  MP.TGT_LOC    = '$!{tgt_loc}'
		                             AND  MP.SRC_LOC = DM1.DC_ID 
		                 ) MPD,
		                 (
		                 -- ITEM_MST에서 CAT03이 P로 시작하는 데이타와, 제품군 정보를 조인하여 데이타를 가져옮
		                 SELECT  DISTINCT IM.ITEM_ID PROD_ID, IM.ITEM_NAME, CM.CD, CM.CD_NAME
		                   FROM  (
		                         SELECT  I.ITEM_ID, I.ITEM_NAME, I.DIVISION
		                           FROM  ITEM_MST I
		                          WHERE  I.CAT03 = '${cat3}'
		                            AND  I.ITEM_STATUS = 'ST'
		                            AND  I.ITYPE != 'HALB' --반제품만 제외
		                            AND  I.SELL_STOP_DATE = '99991231'
		                         ) IM, 
		                         (
		                          SELECT  CM.CD, CM.CD_NAME
		                            FROM  CODE_MST CM
		                           WHERE  CM.CD_GRP = 'DIVISION'
		                         ) CM
		                  WHERE  IM.DIVISION = CM.CD
		                 ) IH
		         WHERE  MPD.PROD_ID(+) = IH.PROD_ID
		) MPDE
		GROUP BY MPDE.CD, MPDE.CD_NAME, MPDE.PROD_ID, MPDE.ITEM_NAME
		ORDER BY MPDE.CD, MPDE.CD_NAME, MPDE.PROD_ID, MPDE.ITEM_NAME
			
	</query>
	
	
    <!-- ② 거점별 수송 Route 관리 UI Header Query (MAP_PROD_DCPATH_EXCEPT) -->
	<query id="transRouteByLocation_header">
		 
		SELECT DM.DC_SHORT_NAME, DM.DC_ID, DM.CNT
		  FROM (
		        SELECT  DM.DC_SHORT_NAME, DM.DC_ID, ROWNUM CNT
		          FROM  DC_MST DM
		         WHERE  DM.DC_ID IN(8510, 8620) 
                    OR  DM.CDC_FLAG = 'Y'
		         ORDER BY DC_ID
		       ) DM
   
	</query>
	
	<!-- ③ 거점별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT DELETE -->
	<query id="md_04050_transRouteByLocation_list_save_01" fix="tgt_loc cat3">
			
			DELETE 	MAP_PROD_DCPATH_EXCEPT MP
 			 WHERE  MP.TGT_LOC = '$!{tgt_loc}'
 			   AND  MP.PROD_ID IN(
 			                     SELECT  I.ITEM_ID
		                           FROM  ITEM_MST I
		                          WHERE  I.CAT03 = '${cat3}'
		                            AND  I.ITYPE = 'FERT' -- 완제품만 검색
 			                     )	
			
	</query>
	
	<!-- ④ 거점별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT UPDATE -->
	<query id="md_04050_transRouteByLocation_list_save_02" fix="tgt_loc _user_id"
		   iterator="priority prod_id src_loc tran_cost">
		UPDATE  MAP_PROD_DCPATH_EXCEPT MP
		   SET  MP.PRIORITY   = '$!{priority}',
		        MP.TRANS_COST = (
		                         SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
								   FROM  DC_DTL_TRANS_COST DC
								  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
								    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
								 ),
		        MP.MADE_TYPE  = 'AD',
		        MP.MADE_DTTM  = SYSDATE,
		        MP.MADE_BY    = '$!{_user_id}'
		 WHERE  MP.PROD_ID = '$!{prod_id}' 
		   AND  MP.SRC_LOC = '$!{src_loc}' 
		   AND  MP.TGT_LOC = '$!{tgt_loc}'
		   AND 	EXISTS (
		                SELECT  MPD.PROD_ID
		                  FROM  MAP_PROD_DCPATH_EXCEPT MPD
		                 WHERE  MPD.PROD_ID = '$!{prod_id}'
		                   AND  MPD.SRC_LOC = '$!{src_loc}'
		                   AND  MPD.TGT_LOC = '$!{tgt_loc}'
		               )
	</query>
	
	<!-- ⑤ 거점별 수송 Route 관리 MAP_PROD_DCPATH_EXCEPT INSERT -->
	<query id="md_04050_transRouteByLocation_list_save_03" fix="tgt_loc _user_id"
		   iterator="priority src_loc prod_id tran_cost">
		INSERT INTO  MAP_PROD_DCPATH_EXCEPT MP
             	( PROD_ID, SRC_LOC, TGT_LOC, PRIORITY, TRANS_COST, MADE_TYPE, MADE_DTTM, MADE_BY)
		SELECT  '$!{prod_id}'  AS PROD_ID,
		        '$!{src_loc}'  AS SRC_LOC,
		        '$!{tgt_loc}'  AS TGT_LOC,
		        '$!{priority}' AS PRIORITY,
		        (
                 SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
				   FROM  DC_DTL_TRANS_COST DC
				  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
				    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
				) AS TRANS_COST,
		        'AD'           AS MADE_TYPE,
		        SYSDATE        AS MADE_DTTM,
		        '$!{_user_id}' AS MADE_BY
		  FROM  DUAL
		 WHERE  '$!{priority}' IS NOT NULL
		   AND  NOT EXISTS (
		              SELECT  MPD.PROD_ID
		                FROM  MAP_PROD_DCPATH_EXCEPT MPD
		               WHERE  MPD.PROD_ID = '$!{prod_id}'
		                 AND  MPD.SRC_LOC = '$!{src_loc}'
		                 AND  MPD.TGT_LOC = '$!{tgt_loc}'
		             )
	</query>
	
	<!-- ⑥ 거점별 수송 Route 관리 MAP_PROD_DCPATH DELETE -->
	<query id="md_04050_transRouteByLocation_list_save_04" fix="tgt_loc" 
	       iterator="priority src_loc prod_id">
			
			DELETE 	MAP_PROD_DCPATH MP
 			 WHERE  MP.TGT_LOC = '$!{tgt_loc}'
 			   AND  MP.SRC_LOC = '$!{src_loc}'
 			   AND  MP.PROD_ID = '$!{prod_id}'	
			
	</query>
	
	<!-- ⑦ 거점별 수송 Route 관리 MAP_PROD_DCPATH UPDATE -->
	<query id="md_04050_transRouteByLocation_list_save_05" fix="tgt_loc _user_id"
		   iterator="priority prod_id src_loc tran_cost">
		UPDATE  MAP_PROD_DCPATH MP
		   SET  MP.PRIORITY   = '$!{priority}',
		        MP.TRANS_COST = (
		                         SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
								   FROM  DC_DTL_TRANS_COST DC
								  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
								    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
								 ),
		        MP.MADE_TYPE  = 'AD',
		        MP.MADE_DTTM  = SYSDATE,
		        MP.MADE_BY    = '$!{_user_id}'
		 WHERE  MP.PROD_ID = '$!{prod_id}' 
		   AND  MP.SRC_LOC = '$!{src_loc}' 
		   AND  MP.TGT_LOC = '$!{tgt_loc}'
		   AND 	EXISTS (
		                SELECT  MPD.PROD_ID
		                  FROM  MAP_PROD_DCPATH MPD
		                 WHERE  MPD.PROD_ID = '$!{prod_id}'
		                   AND  MPD.SRC_LOC = '$!{src_loc}'
		                   AND  MPD.TGT_LOC = '$!{tgt_loc}'
		               )
	</query>
	
	<!-- ⑧ 거점별 수송 Route 관리 MAP_PROD_DCPATH INSERT -->
	<query id="md_04050_transRouteByLocation_list_save_06" fix="tgt_loc _user_id"
		   iterator="priority src_loc prod_id tran_cost">
		INSERT INTO  MAP_PROD_DCPATH MP
             	( PROD_ID, SRC_LOC, TGT_LOC, PRIORITY, TRANS_COST, MADE_TYPE, MADE_DTTM, MADE_BY)
		SELECT  '$!{prod_id}'  AS PROD_ID,
		        '$!{src_loc}'  AS SRC_LOC,
		        '$!{tgt_loc}'  AS TGT_LOC,
		        '$!{priority}' AS PRIORITY,
		        (
                 SELECT  NVL(DC.PALLET_COST,0) TRANS_COST 
				   FROM  DC_DTL_TRANS_COST DC
				  WHERE  DC.RDC_ID = '$!{tgt_loc}' -- 입고장
				    AND  DC.CDC_ID = '$!{src_loc}' -- 출고장
				) AS TRANS_COST,
		        'AD'           AS MADE_TYPE,
		        SYSDATE        AS MADE_DTTM,
		        '$!{_user_id}' AS MADE_BY
		  FROM  DUAL
		 WHERE  '$!{priority}' IS NOT NULL
		   AND  NOT EXISTS (
		              SELECT  MPD.PROD_ID
		                FROM  MAP_PROD_DCPATH MPD
		               WHERE  MPD.PROD_ID = '$!{prod_id}'
		                 AND  MPD.SRC_LOC = '$!{src_loc}'
		                 AND  MPD.TGT_LOC = '$!{tgt_loc}'
		             )
	</query>
	
	<!-- ⑨ 제품 분류 검색 조건 조회 -->
	<query id="code_mst_cat3">
		SELECT CM.CD, CM.CD_NAME 
		  FROM CODE_MST CM, DUAL B
         WHERE CM.CD_GRP = 'REPL_PROD_GRP'
           --AND CM.CD LIKE 'P%'
	</query>
	
	
	<!--
	======================================================================
		6. 수송자원 정보
	======================================================================
	-->
	
	<!-- DC_MST NAME LIST -->
	<query id="dc_name_list">
		
		SELECT  DM.DC_ID, DM.DC_NAME 
		  FROM  DC_MST DM, DC_DTL_MODE DD
		 WHERE  DM.MADE_TYPE != 'DE'
           AND  DM.DC_ID = DD.DC_ID
		 ORDER  BY DM.DC_ID
		
	</query>	
		
	
	<!-- 수송자원 정보 조회 -->
	<query id="md_04060_transResourceMaster_list" paging="true">	
	
		SELECT  DM.DC_ID, DM.DC_NAME, DD.MODE_ID, DD.MODE_NAME, DD.PRIORITY
		        ,DM.IN_START_TIME, DM.IN_END_TIME, DM.OUT_START_TIME, DM.OUT_END_TIME
		  FROM  DC_MST DM
		        ,(
		        SELECT  DDM.DC_ID, DDM.MODE_ID, TM.MODE_NAME, DDM.PRIORITY  
		          FROM  DC_DTL_MODE DDM, TRANS_MODE TM
		         WHERE  TM.MODE_ID = DDM.MODE_ID
		           AND  DDM.MADE_TYPE != 'DE'
		           AND  TM.MADE_TYPE != 'DE'
		        ) DD
		 WHERE  DM.DC_ID = DD.DC_ID
		   AND  DM.MADE_TYPE != 'DE' 
		   [AND  DM.DC_ID = '${dc_name}']
		 ORDER  BY DM.DC_ID			
	 	  			
	</query>
	
	<!--
	======================================================================
		7. 물류Calendar정보
	======================================================================
	-->	
	
	<!-- 물류Calendar정보 거점 리스트 -->
	<query id="DC_SHORT_NAME_list">
		
        SELECT  SL.LOC, DM.DC_SHORT_NAME
          FROM  DC_MST DM, SALES_LOGI_CAL SL
         WHERE  SL.MADE_TYPE != 'DE'
           AND  DM.MADE_TYPE != 'DE'
           AND  DM.DC_ID = SL.LOC
         ORDER  BY SL.LOC  
			
	</query>	
	
	<!-- 물류Calendar정보 적용&미적용 리스트 -->
	<query id="use_flag_list">		
	
		SELECT  'Y' y, '적용' yy
		  FROM  DUAL
		 UNION  ALL
		SELECT  'N' n, '미적용' nn
		  FROM  DUAL
		  			
	</query>
		
	<!-- 물류Calendar정보 적용유무 저장 -->
	<query id="md_04070_trnasCalendar_list_save_01" fix="_user_id" iterator="use_flag dc_id">	
	
	    UPDATE  SALES_LOGI_CAL
           SET  USE_FLAG = '$!{use_flag}'
                ,MADE_DTTM = SYSDATE
                ,MADE_BY = '$!{_user_id}'
         WHERE  MADE_TYPE != 'DE' 
           AND  LOC ='$!{dc_id}'
           	
	</query>
		
	<!-- 물류Calendar정보 조회 -->
	<query id="md_04070_trnasCalendar_list">
		 
		SELECT  SL.LOC, DM.DC_SHORT_NAME
		        ,TO_CHAR(SL.START_DTTM, 'YYYY-MM-DD HH24:MI') SD
		        ,TO_CHAR(SL.END_DTTM, 'YYYY-MM-DD HH24:MI') ED
		        ,SL.CYCLE_TYPE, SL.USE_FLAG, SL.DESCRIPTION
		  FROM  DC_MST DM, SALES_LOGI_CAL SL
		 WHERE  SL.MADE_TYPE != 'DE'
		   AND  DM.MADE_TYPE != 'DE'
		   AND  DM.DC_ID = SL.LOC
		   #if ("$!{plan_date}" == "" &amp;&amp; "$!{plan_date_to}" == "")
		   		AND  SL.START_DTTM  BETWEEN  SYSDATE AND  SYSDATE
		   #else 
		   		AND  SL.START_DTTM  BETWEEN  '$!{plan_date}' AND  '$!{plan_date_to}'
		   #end
		  [AND  SL.LOC = '${DC_SHORT_NAME}']
		 ORDER  BY SL.LOC
	
	</query>
	
	<!--
	======================================================================
		8. 수송Route기준정보
	======================================================================
	-->
	
	<!-- 수송Route기준정보 rDC_SHORT_NAME 리스트  -->
	<query id="rDC_SHORT_NAME_list">
	
		SELECT  TS.RDC_ID, DM.DC_SHORT_NAME RDC_SHORT_NAME
		  FROM  PLANT_RDC_TRANS_COST TS, DC_MST DM
		 WHERE  DM.DC_ID = TS.RDC_ID
		   AND	TS.MADE_TYPE != 'DE'
		   AND	DM.MADE_TYPE != 'DE' 
		 GROUP  BY TS.RDC_ID, DM.DC_SHORT_NAME
		 ORDER  BY TS.RDC_ID

	</query>
		
	<!-- 수송Route기준정보 : 조회  -->
	<query id="md_04080_transRouteCost_list" paging="true">
			 
		SELECT  SS.RDC_ID, DM2.DC_SHORT_NAME RDC_SHORT_NAME, SS.PLANT_ID
                ,SS.DC_SHORT_NAME CDC_SHORT_NAME, SS.PALLET_COST
          FROM    (
                SELECT  TC.RDC_ID, TC.PLANT_ID, DM.DC_ID, DM.DC_SHORT_NAME, TC.PALLET_COST
                  FROM  PLANT_RDC_TRANS_COST TC, DC_MST DM
                 WHERE  DM.DC_ID = TC.PLANT_ID
                   AND  TC.MADE_TYPE != 'DE'
                   AND  DM.MADE_TYPE != 'DE'
                ) SS, DC_MST DM2
         WHERE  DM2.DC_ID = SS.RDC_ID
           AND  DM2.MADE_TYPE != 'DE'
          [AND    SS.RDC_ID = '${tgt_loc_sel}']
         ORDER  BY SS.RDC_ID, SS.PLANT_ID    
		 	
	</query>
	
	<!-- 입고장 출고장  중복 체크 -->
	<query id="loc_dup_check_in_dc_dtl_trans_cost"> 
			
			SELECT 	COUNT(PT.PLANT_ID) CNT 
			  FROM 	PLANT_RDC_TRANS_COST PT, DUAL B
			 WHERE 	PT.PLANT_ID = SUBSTR('$!{check_value}',0,4)
			   AND  PT.RDC_ID   = SUBSTR('$!{check_value}',8,11)
			
	</query>
	
	<!-- 수송Route기준정보 : 저장 -->
	<query id="md_04080_transRouteCost_reg_save"> 
			
			INSERT INTO PLANT_RDC_TRANS_COST 
			       (PLANT_ID, RDC_ID, PALLET_COST, MADE_TYPE, MADE_DTTM, MADE_BY)
			SELECT '$!{src_loc}'       PLANT_ID,
			       '$!{tgt_loc}'       RDC_ID,
			       NVL(TO_NUMBER(REPLACE('$!{pallet_cost}', ',', '')), 0)   PALLET_COST,
			       'AD'                MADE_TYPE,
			       SYSDATE             MADE_DTTM,
			       '$!{_user_id}'      MADE_BY
			  FROM DUAL
			
	</query>
	
	<!-- 수송Route기준정보 수정 : 조회  -->
	<query id="md_04080_transRouteCost_mod">
			 
		SELECT  SS.RDC_ID, DM2.DC_SHORT_NAME RDC_SHORT_NAME, SS.PLANT_ID
                ,SS.DC_SHORT_NAME CDC_SHORT_NAME, SS.PALLET_COST
          FROM    (
                SELECT  TC.RDC_ID, TC.PLANT_ID, DM.DC_ID, DM.DC_SHORT_NAME, TC.PALLET_COST
                  FROM  PLANT_RDC_TRANS_COST TC, DC_MST DM
                 WHERE  DM.DC_ID = TC.PLANT_ID
                   AND  TC.MADE_TYPE != 'DE'
                   AND  DM.MADE_TYPE != 'DE'
                ) SS, DC_MST DM2
         WHERE  DM2.DC_ID = SS.RDC_ID
           AND  DM2.MADE_TYPE != 'DE'
           AND  SS.RDC_ID = '$!{tgt_loc_sel}'
         ORDER  BY SS.RDC_ID, SS.PLANT_ID    
		 	
	</query>
	
	<!-- 수송Route기준정보 수정 : 수정  -->
	<query id="md_04080_transRouteCost_mod_save" fix="_user_id" 
		   iterator="trans_cost tgt_loc src_loc">
			 
		UPDATE  PLANT_RDC_TRANS_COST
		   SET  PALLET_COST = '$!{trans_cost}',
		        MADE_TYPE = 'UP',
		        MADE_DTTM = TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'),'YYYY-MM-DD'),
		        MADE_BY   = '$!{_user_id}'
		 WHERE  PLANT_ID  = '$!{src_loc}'
		   AND  RDC_ID    = '$!{tgt_loc}'
		 	
	</query>
	
	<!--
	======================================================================
		9. Route 수송 기준정보
	======================================================================
	-->
	
	<!-- Route 수송 기준정보 : 조회 -->
	<query id="md_04090_routeMultiDrop_list"> 
		
        SELECT  DR.CDC_ID, DR.ROUTE_SEQ, DM1.DC_SHORT_NAME CDC_SHORT_NAME, (DM1.DC_SHORT_NAME||'-'||DR.ROUTE_SEQ) ROUTE_ID,   
		        DR.RDC1, DM2.DC_SHORT_NAME DC_SHORT_NAME1, DR.RDC2, DM3.DC_SHORT_NAME DC_SHORT_NAME2, DR.RDC3, DM4.DC_SHORT_NAME DC_SHORT_NAME3,
		        TO_CHAR(DR.VALID_START,'YYYY-MM-DD') VALID_START, 
		        TO_CHAR(DR.VALID_END,'YYYY-MM-DD') VALID_END, DR.REASON    
		  FROM  DC_ROUTE_PATH DR, DC_MST DM1, 
		        DC_MST DM2, DC_MST DM3, DC_MST DM4
		 WHERE  DR.CDC_ID = DM1.DC_ID
		   AND  DR.RDC1   = DM2.DC_ID(+)
		   AND  DR.RDC2   = DM3.DC_ID(+)
		   AND  DR.RDC3   = DM4.DC_ID(+)
		   AND  DR.CDC_ID = '$!{tgt_loc_sel}'
		 ORDER  BY DR.CDC_ID, DR.ROUTE_SEQ
			
	</query>
	
	<!-- 출고장 리스트  -->
	<query id="src_loc_and_name_list">
		
        SELECT  DM.DC_ID, DM.DC_SHORT_NAME
          FROM  DC_MST DM, DUAL B
         WHERE  DM.DC_ID IN(8510, 8620) 
            OR  DM.CDC_FLAG = 'Y'
   
	</query>
	
	
	<!-- Route 수송 기준정보 : 저장 -->
	<query id="md_04090_routeMultiDrop_list_save_01" fix="tgt_loc_sel"> 
			
			DELETE 	DC_ROUTE_PATH
			 WHERE 	CDC_ID	  = '$!{tgt_loc_sel}'
			
	</query>
	
	<query id="md_04090_routeMultiDrop_list_save_02" fix="_user_id tgt_loc_sel" 
	       iterator="route_seq dc_id_1 dc_id_2 dc_id_3 start_dttm end_dttm reason "> 

		INSERT  INTO DC_ROUTE_PATH
		        (CDC_ID, ROUTE_SEQ, RDC1, RDC2, RDC3, VALID_START, 
		         VALID_END, REASON, MADE_TYPE, MADE_DTTM, MADE_BY)
		SELECT  '$!{tgt_loc_sel}' AS CDC_ID,
		        '$!{route_seq}' AS ROUTE_SEQ,
		        '$!{dc_id_1}' AS RDC1,
		        '$!{dc_id_2}' AS RDC2,
		        '$!{dc_id_3}' AS RDC3,
		        TO_DATE('$!{start_dttm}','YYYY-MM-DD') AS VALID_START,
		        TO_DATE('$!{end_dttm}','YYYY-MM-DD') AS VALID_END,
		        '$!{reason}' AS REASON,
		        'AD' AS MADE_TYPE,
		        SYSDATE AS MADE_DTTM,
		        '$!{_user_id}' AS MADE_BY
		  FROM  DUAL
		 WHERE  NOT EXISTS(SELECT CDC_ID FROM DC_ROUTE_PATH WHERE CDC_ID = '$!{tgt_loc_sel}' AND ROUTE_SEQ = '$!{route_seq}')
		
	</query>
	
	
	<!--
	======================================================================
		10. 중계수송거점설정
	======================================================================
	-->
	
	<!-- 중계수송거점설정 : 적용중인 품목 조회 -->
	<query id="md_04100_crossDockMst_list_01"> 
		
        SELECT  CM.CD_NAME, CD.ITEM_ID, IM.ITEM_NAME
		  FROM  CROSS_DOCK_MST CD, ITEM_MST IM, 
		        (
		        SELECT  CM.CD_NAME, CM.CD
		          FROM  CODE_MST CM
		         WHERE  CM.CD_GRP = 'SALES_CAT2'
		        ) CM
		 WHERE  CD.ITEM_ID = IM.ITEM_ID
		   AND  IM.SALES_CAT02 = CM.CD
		   AND  CD.CDC_ID = '$!{src_loc_sel}'
		   AND  CD.RDC_ID = '$!{tgt_loc_sel}'
		   [AND  IM.SALES_CAT02 = '${sales_cat02_sel}']
		 ORDER  BY CM.CD_NAME, CD.ITEM_ID
			
	</query>
	
	<!-- 중계수송거점설정 : 적용할 품목 조회 -->
	<query id="md_04100_crossDockMst_list_02"> 
 
		SELECT  CM.CD_NAME, IM.ITEM_ID, IM.ITEM_NAME
		  FROM  ITEM_MST IM, 
		        (
		        SELECT  CM.CD_NAME, CM.CD
		          FROM  CODE_MST CM
		         WHERE  CM.CD_GRP = 'SALES_CAT2'
		        ) CM
		 WHERE  ITYPE != 'HALB' --반제품 제외
		   AND  IM.SALES_CAT02 = CM.CD
		   AND  IM.SALES_CAT02 = '$!{sales_cat02_sel}'
		   AND  IM.ITEM_ID NOT IN ( -- 적용중인 품목 제외
		                          SELECT  CD.ITEM_ID
		                            FROM  CROSS_DOCK_MST CD, ITEM_MST IM
		                           WHERE  CD.ITEM_ID = IM.ITEM_ID
		                             AND  CD.CDC_ID = '$!{src_loc_sel}'
		                             AND  CD.RDC_ID = '$!{tgt_loc_sel}'
		                             [AND  IM.SALES_CAT02 = '${sales_cat02_sel}']
		                          )
         ORDER  BY IM.ITEM_ID
			
	</query>
	
	
	<!-- 중계수송거점설정 :  CROSS_DOCK_MST DELETE-->
	<query id="md_04100_crossDockMst_list_save_01"> 
	
		DELETE  CROSS_DOCK_MST CD
		 WHERE  CD.CDC_ID = '$!{src_loc_sel}' -- 중계수송거점
		   AND  CD.RDC_ID = '$!{tgt_loc_sel}' -- 입고장
		   AND  CD.ITEM_ID IN (
		                      SELECT  CD.ITEM_ID
		                        FROM  CROSS_DOCK_MST CD, ITEM_MST IM
		                       WHERE  CD.ITEM_ID = IM.ITEM_ID
		                         AND  CD.CDC_ID = '$!{src_loc_sel}'
		                         AND  CD.RDC_ID = '$!{tgt_loc_sel}'
		                         [AND  IM.SALES_CAT02 = '${sales_cat02_sel}']
		                      )
		                      
	</query>
	
	<!-- 중계수송거점설정 :  입고장과 아이템이 겹치는 부분 DELETE-->
	<query id="md_04100_crossDockMst_list_save_02" fix="tgt_loc_sel" 
	       iterator="leftItemId"> 
	
		DELETE CROSS_DOCK_MST CD
 		 WHERE CD.RDC_ID = '$!{tgt_loc_sel}' -- 입고장
		   AND CD.ITEM_ID = '$!{leftItemId}' -- 아이템 ID
		                      
	</query>
	
	<!-- 중계수송거점설정 :  CROSS_DOCK_MST INSERT-->
	<query id="md_04100_crossDockMst_list_save_03" fix="src_loc_sel tgt_loc_sel sales_cat02_sel _user_id" 
	       iterator="leftItemId"> 
	
		INSERT INTO  CROSS_DOCK_MST 
		             (CDC_ID, RDC_ID, ITEM_ID, MADE_TYPE, MADE_DTTM, MADE_BY)
		     SELECT  '$!{src_loc_sel}' CDC_ID,
		             '$!{tgt_loc_sel}' RDC_ID,
		             '$!{leftItemId}'  ITEM_ID,
		             'AD'              MADE_TYPE,
		             SYSDATE           MADE_DTTM,
		             '$!{_user_id}'    MADE_BY
		       FROM  DUAL
		                      
	</query>
	
	
	
<!--
=====================================================================================================
 끝 
=====================================================================================================
--> 


</queries>
