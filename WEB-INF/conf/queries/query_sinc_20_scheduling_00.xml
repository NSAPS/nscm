<?xml version="1.0" encoding="EUC-KR"?>
<queries>	

<!--
=====================================================================================================
	생산계획 >> 운영정보
=====================================================================================================
-->
    <!--
    =======================
	  공통
	=======================
	-->
	
	
	<!-- 
	=======================
	  공장할당 결과 조정
	=======================
	-->
	
	<!-- 공장할당 버전 -->
	<query id="plant_alloc_version">
	
            SELECT  MAX(PV.VERSION) VER
            FROM    PLAN_VERSION_LOG PV
            WHERE   PV.MADE_TYPE != 'DE'
            AND     PV.PERIOD_TYPE = 'DAILY'
            AND     PV.CAT_ID = 'FA'
            AND     PV.SEQ = 2	
	
	</query>
	
	<!--  공장할당 결과 조정 조회 --> 
	<query id="sc_01060_plantAllocationPlanResultAnalysis_list">
	
            SELECT  NO, -- 0
                    MAX(VERSION) VERSION, --공장할당VERSION 1
                    DECODE(NO,1,RES_TP,2, RES_TP, NULL) RES_TP,     --설비유형 2 
                    DECODE(NO,1,ITEM_ID,2,'소계') ITEM_ID, --자재코드 3 
                    MAX(DECODE(NO,1, ITEM_NAME,2, RES_TP_NM||'소계','총계')) ITEM_NAME, --자재코드명 4
                    ROUND(AVG(DECODE(NO,1,W3_AVG_RATIO,2,W3_AVG_RATIO,W3_AVG_RATIO)),2) W3_AVG_RATIO, --3주평균접근율 5
                    ROUND(AVG(DECODE(NO,1,W1_AVG_RATIO,2,W1_AVG_RATIO,W1_AVG_RATIO)),2) W1_AVG_RATIO, --1주평균접근율 6
                    TO_CHAR(SUM(DECODE(NO,1,SAFETY_STOCK,2,SAFETY_STOCK,SAFETY_STOCK)),'999,999,999') SAFETY_STOCK, --안전재고 7
                    TO_CHAR(SUM(DECODE(NO,1,BASE_STOCK,2,BASE_STOCK,BASE_STOCK)),'999,999,999') BASE_STOCK, --기초재고 8
                    TO_CHAR(SUM(DECODE(NO,1,RECEIPT_EXPT,2,RECEIPT_EXPT,RECEIPT_EXPT)),'999,999,999') RECEIPT_EXPT, --금주생산계획 9
                    TO_CHAR(SUM(DECODE(NO,1,SALES_PLAN,2,SALES_PLAN,SALES_PLAN)),'999,999,999') SALES_PLAN, --금주판매계획 10
                    ROUND(AVG(DECODE(NO,1,SALES_VS_WEEK1_AVG,2,SALES_VS_WEEK1_AVG,SALES_VS_WEEK1_AVG)),2) SALES_VS_WEEK1_AVG, --1주평균판매대비 11
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK,2,EXPERT_STOCK,EXPERT_STOCK)),'999,999,999') EXPERT_STOCK, --예상재고(차주초) 12
                    TO_CHAR(SUM(DECODE(NO,1,N_RECEIPT_EXPT,2,N_RECEIPT_EXPT,N_RECEIPT_EXPT)),'999,999,999') N_RECEIPT_EXPT, --차주생산계획 13
                    -------------------------------------------------------------------------------------------------          
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*0),'YYYY-MM-DD') RP0_DAY, --당주(월) 14 -- 변경(토)
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*1),'YYYY-MM-DD') RP1_DAY, --차주(월) 15 -- 변경(토)
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*2),'YYYY-MM-DD') RP2_DAY, --차차주(월) 16 -- 변경(토)
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY0,2,RP_QTY0,RP_QTY0)),'999,999,999') RP0_QTY, --보충요구량(당주) 17
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY1,2,RP_QTY1,RP_QTY1)),'999,999,999') RP1_QTY, --보충요구량(차주) 18
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY2,2,RP_QTY2,RP_QTY2)),'999,999,999') RP2_QTY, --보충요구량(차차주) 19
                    NVL(TRIM(TO_CHAR(SUM(DECODE(NO,1,PO_QTY1,2,PO_QTY1,PO_QTY1)),'999,999,999')),0) PO_QTY1, --생산필요량(차주) 20
                    NVL(TRIM(TO_CHAR(SUM(DECODE(NO,1,PO_QTY2,2,PO_QTY2,PO_QTY2)),'999,999,999')),0) PO_QTY2, --생산필요량(차차주) 21
                    TO_CHAR(SUM(DECODE(NO,1,NN_SALES_PLAN,2,NN_SALES_PLAN,NN_SALES_PLAN)),'999,999,999') NN_SALES_PLAN,   --차차주판매계획 22        
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK3,2,EXPERT_STOCK3,EXPERT_STOCK3)),'999,999,999') EXPERT_STOCK3,   --예상재고(차차주) 23
                    -------------------------------------------------------------------------------------------------          
                    TO_CHAR(SUM(DECODE(NO,1,NWK_ADJ_QTY,2,NWK_ADJ_QTY,NWK_ADJ_QTY)),'999,999,999') NWK_ADJ_QTY, --요구/생산 차이 24
                    TO_CHAR(SUM(DECODE(NO,1,N_SALES_PLAN,2,N_SALES_PLAN,N_SALES_PLAN)),'999,999,999') N_SALES_PLAN,           --차주판매계획 25
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK2,2,EXPERT_STOCK2,EXPERT_STOCK2)),'999,999,999') EXPERT_STOCK2,        --예상재고 26   
            		MAX(W1_NFOS),	-- 1주판매계획 27
            		MAX(W1_ACT),	-- 1주판매실적 28
            		MAX(W3_NFOS),	-- 3주판매계획 29
            		MAX(W3_ACT),	-- 3주판매실적 30
            		ROUND(SUM(DECODE(NO,1,N_PLAN_VS_STOCK_WORK,2,N_PLAN_VS_STOCK_WORK,N_PLAN_VS_STOCK_WORK)),1) N_PLAN_VS_STOCK_WORK,  --차주계획대비재고일수 31
            		ROUND(SUM(DECODE(NO,1,N_ACT_VS_STOCK_WORK,2,N_ACT_VS_STOCK_WORK,N_ACT_VS_STOCK_WORK)),1) N_ACT_VS_STOCK_WORK,	  --차주실적대비재고일수 32
            		ROUND(SUM(DECODE(NO,1,NN_PLAN_VS_STOCK_WORK,2,NN_PLAN_VS_STOCK_WORK,NN_PLAN_VS_STOCK_WORK)),1) NN_PLAN_VS_STOCK_WORK, --차차주계획대비재고일수 33
            		ROUND(SUM(DECODE(NO,1,NN_ACT_VS_STOCK_WORK, 2,NN_ACT_VS_STOCK_WORK,NN_ACT_VS_STOCK_WORK)),1) NN_ACT_VS_STOCK_WORK, --차차주계획대비재고일수 34
           			MAX(NN_WORK) NNWK_WORK, -- 차차주 영업일수 35
           			MAX(SALES_MEAN_1WEEK) SALES_MEAN_1WEEK, --1주 평균 판매 36
           			ROUND(SUM(DECODE(NO,1,NNN_ACT_VS_STOCK_WORK, 2,NNN_ACT_VS_STOCK_WORK,NNN_ACT_VS_STOCK_WORK)),1) NNN_ACT_VS_STOCK_WORK,	--차차차주실적대비재고일수 37
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_1,2,SALES_ACT_VS_SALES_PLAN_1,SALES_ACT_VS_SALES_PLAN_1)) SALES_ACT_VS_SALES_PLAN_1, --금주 판매계획 - 금주 1주 평균 판매실적 38
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_2,2,SALES_ACT_VS_SALES_PLAN_2,SALES_ACT_VS_SALES_PLAN_2)) SALES_ACT_VS_SALES_PLAN_2, --차주 판매계획 - 차주 1주 평균 판매실적 39
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_3,2,SALES_ACT_VS_SALES_PLAN_3,SALES_ACT_VS_SALES_PLAN_3)) SALES_ACT_VS_SALES_PLAN_3, --차차주 판매계획 - 차차주 1주 평균 판매실적 40
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2,2,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2)) W1_SALES_PLAN_DIFF, -- 1주평균 판매 계획 가감량 41  
           			SUM(DECODE(NO,1,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2,2,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2)) W3_SALES_PLAN_DIFF -- 3주평균 판매 계획 가감량 42       
            FROM    
                    ( 
                    SELECT  RES_TP.CD1    RES_TP,    --설비유형
                            RES_TP.CD1_NM RES_TP_NM, --설비유형명 
                            D.VERSION,               --공장할당VERSION
                            D.ITEM_ID,               --자재코드
                            IM.ITEM_NAME,            --자재코드명          
                            A.W3_AVG_RATIO,          --3주평균접근율
                            A.W1_AVG_RATIO,          --1주평균접근율
                            C.SAFETY_STOCK,          --안전재고
                            B.BASE_STOCK,            --기초재고
                            B.RECEIPT_EXPT,          --금주생산계획
                            B.SALES_PLAN,            --금주판매계획
                            B.SALES_VS_WEEK1_AVG,    --1주평균판매대비
                            B.EXPERT_STOCK,          --예상재고(차주초)
                            B.EXPERT_STOCK*WO.N_WORK / DECODE(B.N_SALES_PLAN, 0, 1, B.N_SALES_PLAN)		  N_PLAN_VS_STOCK_WORK, --차주계획대비재고일수
                            B.EXPERT_STOCK / DECODE(B.SALES_MEAN_1WEEK, 0, 1, B.SALES_MEAN_1WEEK) N_ACT_VS_STOCK_WORK,  --차주실적대비재고일수
                            B.N_RECEIPT_EXPT,        --차주생산계획
                            D.RP_QTY0 RP_QTY0,       --보충요구량(당주)               
                            D.RP_QTY1 RP_QTY1,       --보충요구량(차주)                                  
                            B.N_SALES_PLAN ,         --차주판매계획
                        #if("$!{checked_pa_pr}" == "PR")
                        	NVL(B.N_RECEIPT_EXPT ,0) - NVL(D.RP_QTY1,0) NWK_ADJ_QTY,        --요구/생산 차이
                        	B.N_RECEIPT_EXPT PO_QTY1,       --생산필요량(차주)
                            NVL(B.EXPERT_STOCK,0)+(NVL(B.N_RECEIPT_EXPT,0)-NVL(B.N_SALES_PLAN,0)) EXPERT_STOCK2, --예상재고(차주)  
                            (NVL(B.EXPERT_STOCK,0)+(NVL(B.N_RECEIPT_EXPT,0)-NVL(B.N_SALES_PLAN,0)))*WO.NN_WORK / DECODE(NVL(B.NN_SALES_PLAN,1), 0, 1, NVL(B.NN_SALES_PLAN,1))		  NN_PLAN_VS_STOCK_WORK, --차차주계획대비재고일수
                            (NVL(B.EXPERT_STOCK,0)+(NVL(B.N_RECEIPT_EXPT,0)-NVL(B.N_SALES_PLAN,0))) / DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NN_ACT_VS_STOCK_WORK,  --차차주실적대비재고일수
                            NVL(B.EXPERT_STOCK,0)+(NVL(B.N_RECEIPT_EXPT,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0)) EXPERT_STOCK3,  --예상재고(차차주)
                            (NVL(B.EXPERT_STOCK,0)+(NVL(B.N_RECEIPT_EXPT,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0))) /
                            DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NNN_ACT_VS_STOCK_WORK,  --차차차주실적대비재고일수
                        #else
                        	NVL(D.RP_QTY1,0) - NVL(D.RP_QTY1,0) NWK_ADJ_QTY,        --요구/생산 차이
                        	D.RP_QTY1 PO_QTY1,       --생산필요량(차주)
                            NVL(B.EXPERT_STOCK,0)+(NVL(D.RP_QTY1,0)-NVL(B.N_SALES_PLAN,0)) EXPERT_STOCK2, --예상재고(차주)  
                            (NVL(B.EXPERT_STOCK,0)+(NVL(D.RP_QTY1,0)-NVL(B.N_SALES_PLAN,0)))*WO.NN_WORK / DECODE(NVL(B.NN_SALES_PLAN,1), 0, 1, NVL(B.NN_SALES_PLAN,1))		  NN_PLAN_VS_STOCK_WORK, --차차주계획대비재고일수
                            (NVL(B.EXPERT_STOCK,0)+(NVL(D.RP_QTY1,0)-NVL(B.N_SALES_PLAN,0))) / DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NN_ACT_VS_STOCK_WORK,  --차차주실적대비재고일수
                            NVL(B.EXPERT_STOCK,0)+(NVL(D.RP_QTY1,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0)) EXPERT_STOCK3,  --예상재고(차차주)
                            (NVL(B.EXPERT_STOCK,0)+(NVL(D.RP_QTY1,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0))) /
                            DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NNN_ACT_VS_STOCK_WORK,  --차차차주실적대비재고일수
                        #end
                            D.RP_QTY2 RP_QTY2,       --보충요구량(차차주)               
                            D.RP_QTY2 PO_QTY2,       --생산필요량(차차주)
                            B.NN_SALES_PLAN,         --판매계획(차차주)                     
                    		A.W1_NFOS,	-- 1주판매계획
                    		A.W1_ACT,	-- 1주판매실적
                    		A.W3_NFOS,	-- 3주판매계획
                    		A.W3_ACT,	-- 3주판매실적                  
                    		WO.NN_WORK,  -- 차차주 영업일수
                    		DECODE(B.SALES_MEAN_1WEEK, 0, 1, B.SALES_MEAN_1WEEK) SALES_MEAN_1WEEK, -- 1주평균 판매
                    		B.SALES_PLAN - (NVL(A.W1_ACT,0) * (NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD'), 1)- TO_DATE('$!{sdate}','YYYY-MM-DD'))) SALES_ACT_VS_SALES_PLAN_1,
                    		B.N_SALES_PLAN - (NVL(A.W1_ACT,0) * 6) SALES_ACT_VS_SALES_PLAN_2,
                    		B.NN_SALES_PLAN - (NVL(A.W1_ACT,0) * 6) SALES_ACT_VS_SALES_PLAN_3,
                    		B.SALES_PLAN - (NVL(A.W3_ACT,0) * (NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD'), 1)- TO_DATE('$!{sdate}','YYYY-MM-DD'))) SALES_ACT_3W_VS_SALES_PLAN_1,
                    		B.N_SALES_PLAN - (NVL(A.W3_ACT,0) * 6) SALES_ACT_3W_VS_SALES_PLAN_2
                    FROM
                            (
                            --1. 판매계획/판매실적
                            SELECT  ITEM_ID,
                                    --1. 전월(판매계획/판매실적)
                                    /*
                                    ROUND(MAX(CASE WHEN  (M_ACT>0) THEN M_NFOS/M_ACT
                                    ELSE 0
                                    END),2) M_AVG_RATIO,
                                    */
                                    W1_NFOS,	-- 1주판매계획
                                    W1_ACT,		-- 1주평균판매실적
                                    W3_NFOS,	-- 3주판매계획
                                    W3_ACT,		-- 3주평균판매실적
                                    --2. 3주평균(판매계획/판매실적)
                                    ROUND(MAX(CASE WHEN  (W3_ACT>0) THEN W3_NFOS/W3_ACT
                                    ELSE 0
                                    END),2) W3_AVG_RATIO,
                                    --3. 1주평균(판매계획/판매실적)
                                    ROUND(MAX(CASE WHEN  (W1_ACT>0) THEN W1_NFOS/W1_ACT
                                    ELSE 0
                                    END),2) W1_AVG_RATIO
                                    --4. 당월경영계획
                                    --SUM(M_NFO_QTY) M_NFO_QTY                          
                            FROM    
                                    (
                                    SELECT  ITEM_ID,     
                                            --1. 전월(판매계획,판매실적)
                                            ---------------------------------------------------------
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM') THEN NFO_QTY END) M_NFOS,  
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM') THEN ACT_QTY END) M_ACT, 
                                            ---------------------------------------------------------      
                                            --2. 3주평균접근율
                                            --------------------------------------------------------------------------------------
                                            ROUND(SUM(CASE WHEN YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*3), 'IYYYIW') 
                                                 AND TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                             THEN NFO_QTY
                                            ELSE 0
                                            END
                                            )/18,2) W3_NFOS,
                                            ROUND(SUM(CASE WHEN YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*3), 'IYYYIW') 
                                                 AND TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                             THEN ACT_QTY
                                            ELSE 0
                                            END
                                            )/18,2) W3_ACT,
                                            --------------------------------------------------------------------------------------
                                            --3. 1주평균접근율
                                            ROUND(SUM(CASE WHEN YYYYWW  = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                               THEN NFO_QTY
                                            ELSE 0
                                            END
                                            )/6,2) W1_NFOS,
                                            ROUND(SUM(CASE WHEN YYYYWW  = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                               THEN ACT_QTY
                                            ELSE 0
                                            END
                                            )/6,2) W1_ACT,       
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM') THEN NFO_QTY
                                            END 
                                            ) M_NFO_QTY --당월경영계획      
                                    FROM    
                                            (
                                            --1. 전월 2개월간의 판매계획 
                                            SELECT    s1.ITEM_ID,
											        s2.YYYYMM, 
											        s2.YYYYWW,
											        s2.YYYYMMDD,       
											        SUM(NORMAL_QTY+PROM_QTY+SUPT_QTY+SAMP_QTY) NFO_QTY,
											        0 ACT_QTY
											FROM    NFOS_SALES_PLAN_WEEKLY    S1,
											        (
											        SELECT    CASE
											                    WHEN    (CAL_DATE - SYSDATE) >= 0 THEN
											                        CASE 
											                            WHEN TO_CHAR(SYSDATE, 'IW') = '01' AND TO_CHAR(SYSDATE, 'MM') = '12' THEN TO_CHAR(ADD_MONTHS(SYSDATE,1), 'yyyy')
											                            ELSE TO_CHAR(SYSDATE, 'yyyy') 
											                        END
											                    ELSE
											                        CASE 
											                            WHEN TO_CHAR(CAL_DATE, 'IW') = '01' AND TO_CHAR(CAL_DATE, 'MM') = '12' THEN TO_CHAR(ADD_MONTHS(CAL_DATE,1), 'yyyy')
											                            ELSE TO_CHAR(CAL_DATE, 'yyyy') 
											                        END
											                END                                 YYYY,
											                CASE
											                    WHEN    (CAL_DATE - SYSDATE) >= 0 THEN
											                        TO_CHAR(SYSDATE, 'IW')
											                    ELSE
											                        TO_CHAR(CAL_DATE, 'IW')
											                END        VERSION,
											                YYYYMMDD    YYYYMMDD,
											                YYYYMM        YYYYMM,
											                YYYYWW        YYYYWW
											        FROM    CAL_MST
											        WHERE    YYYYMM  BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM')
											                                            AND     TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM')
											        AND        HOLIDAY_FLAG    IS NULL
											        )                        S2
											WHERE    S1.YYYY        = S2.YYYY
											AND        S1.VERSION    = S2.VERSION
											AND        S1.YYYYMMDD    = S2.YYYYMMDD
											GROUP
											BY        S1.ITEM_ID,  S2.YYYYMM, s2.YYYYWW, s2.YYYYMMDD
                                            UNION   ALL
                                            --2. 전월 2개월간의 판매실적
                                            SELECT  ITEM_ID, 
                                                    CAL.YYYYMM, 
                                                    CAL.YYYYWW,
                                                    CAL.YYYYMMDD,  
                                                    0 NFO_QTY,
                                                    SUM(ACT.QTY) ACT_QTY
                                            FROM    SALES_ACT_RECENT ACT, CAL_MST CAL
                                            WHERE   ACT.SALE_DATE = CAL.CAL_DATE
                                            AND     CAL.YYYYMM  BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM')
                                                                AND     TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM')
                                            GROUP   BY ITEM_ID, CAL.YYYYMM, CAL.YYYYWW, CAL.YYYYMMDD
                                            )
                                    --WHERE ITEM_ID  IN ('102000124', '101000057')    
                                    GROUP BY ITEM_ID   
                                    )
                            GROUP BY ITEM_ID,W1_NFOS,W1_ACT,W3_NFOS,W3_ACT
                            )   A,
                            (
                            /*   
                            *  1. 기초재고            : 조회일자(오늘)에 해당하는 BASE_STOCK  SUM
                            *  2. 금주생산계획        : 조회일자(오늘)에서 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            *  3. 금주판매계획        : 조회일자(오늘)에서 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            *  4. 1주일 평균판매      : 조회일자(오늘)에 해당하는 SALES_MEAN_1WEEK SUM
                            *  5. 금주잔여판매일수    :  조회일자(오늘)을 포함해서 영업 마감일까지(조회일자 주의 토요일) 일수
                            *  6. 1주평균판매대비     : (금주판매계획/(1주일평균판매*금주잔여판매일수)) * 100
                            *  7. 예상재고(차주초)    : 기초재고 + 금주생산계획 - 금주판매계획
                            *  8. 차주생산계획        : 조회일자(오늘)기준 차주에서 차주 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            */ 
                            SELECT  ITEM_ID,
                                    BASE_STOCK,         --기초재고
                                    RECEIPT_EXPT,       --금주생산계획
                                    SALES_PLAN ,        --금주판매계획
                                    ROUND(SALES_PLAN / DECODE((SALES_MEAN_1WEEK * SALES_DAY),0,1,(SALES_MEAN_1WEEK * SALES_DAY)),2) 
                                    SALES_VS_WEEK1_AVG,    -- 1주평균판매대비
                                    BASE_STOCK + RECEIPT_EXPT - SALES_PLAN  EXPERT_STOCK,  -- 예상재고(차주초)
                                    N_RECEIPT_EXPT,     --차주생산계획
                                    N_SALES_PLAN,       --차주판매계획 
                                    NN_SALES_PLAN,      --차주판매계획
                                    SALES_MEAN_1WEEK	--1주평균판매                   
                            FROM        
                                    (
                                    SELECT  ITEM_ID,
                                            SUM(DECODE(YYYYMMDD, REPLACE ('$!{sdate}', '-', ''),BASE_STOCK,0))                              BASE_STOCK,                        --기초재고
                                            SUM(CASE WHEN  YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'IYYYIW')
									                       AND YYYYMMDD >= TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'YYYYMMDD')
									                 THEN  RECEIPT_EXPT
									                 ELSE  0
									            END)       RECEIPT_EXPT,                      --금주생산계획
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*1), 'IYYYIW'),RECEIPT_EXPT))  N_RECEIPT_EXPT,                    --차주생산계획        
                                            SUM(CASE WHEN  YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'IYYYIW')
									                       AND YYYYMMDD >= TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'YYYYMMDD')
									                 THEN  SALES_PLAN
									                 ELSE  0
									            END)       SALES_PLAN,                      --금주판매계획                                             
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*1), 'IYYYIW'),SALES_PLAN))    N_SALES_PLAN,                      --차주판매계획
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*2), 'IYYYIW'),SALES_PLAN))    NN_SALES_PLAN,                     --차차주판매계획                                      
                                            SUM(DECODE(YYYYMMDD, REPLACE ('$!{sdate}', '-', ''),SALES_MEAN_1WEEK,0))                        SALES_MEAN_1WEEK,                  --1주일 평균판매
                                            NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD'), 1)- TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD') SALES_DAY      --금주잔여판매일수 
                                    FROM
                                            (
                                            SELECT  DD.ITEM_ID,
                                                    DECODE(DC.DC_ID, NULL, 0, DD.BASE_STOCK) BASE_STOCK,
                                                    DD.RECEIPT_EXPT,
                                                    (DD.SALES_PLAN+DD.PROM_PLAN) SALES_PLAN, --판매계획수량수정(2008.11.12 수정)
                                                    SALES_MEAN_1WEEK,
                                                    CAL.YYYYWW,
                                                    CAL.YYYYMMDD
                                            FROM    DC_DATAWAREHOUSE DD, CAL_MST CAL,
										            (
										            SELECT 	DC_ID, DC_NAME
								               		  FROM 	DC_MST
								                	 WHERE 	CDC_FLAG = 'Y'
								                	UNION 
								                 	SELECT 	DC_ID, DC_NAME
								               		  FROM 	DC_MST
								                	 WHERE 	RDC_FLAG = 'Y'    
										            ) DC
										    WHERE   DD.CNFM_DATE = CAL.YYYYMMDD
										    AND     DD.DC_ID    =   DC.DC_ID(+)
                                            /* 당주 월요일부터 ~ 당주 일요일까지 */    
                                            AND     DD.CNFM_DATE BETWEEN  TO_CHAR(NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')+(7*-1), 2), 'YYYYMMDD')
                                                                 AND      TO_CHAR(NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')+(7*2) , 1)  , 'YYYYMMDD')          
                                            )
                                    GROUP BY ITEM_ID, NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD'), 1)- TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')  
                                    )   
                            )   B,
                            (
                            /* 
                          *  조회 일자에 해당하는 안전재고 (DC_ID에 해당 없이 모두 SUM) 
                          */
                            SELECT SP.WORK_DATE, SP.ITEM_ID, ROUND(SUM(SP.SAFETY_STOCK)+SUM(SP.CAMP_STOC)+ SUM(NVL(SP.FA_STOCK,0)) +
                                    SUM(DECODE(SIGN(TO_DATE(REPLACE('$!{sdate}', '-', ''),'YYYYMMDD')-TO_DATE(SP.START_DATE,'YYYYMMDD')),-1,0,
                                        DECODE(SIGN(TO_DATE(SP.END_DATE,'YYYYMMDD')-TO_DATE(REPLACE('$!{sdate}', '-', ''),'YYYYMMDD')),-1,0,
                                        NVL(SP.SAVE_STOC,0)))),0)      SAFETY_STOCK
                            FROM    STOCK_POLICY_QTY  SP,
                                    (
                                    SELECT  MAX(WORK_DATE) WORK_DATE
                                    FROM    STOCK_POLICY_QTY
                                    WHERE   LOC_TYPE = 'DC'
                                    )   MV
                            WHERE   SP.WORK_DATE = MV.WORK_DATE
                            GROUP   BY SP.WORK_DATE, SP.ITEM_ID
                            --ORDER    BY PY.ITEM_ID
                            )   C,
                            (
                            /*
                          * 당주, 차주, 차차주 보충 요구량
                          *//*
                            SELECT  PA.VERSION VERSION,
                                    ITEM_ID,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY0,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY1,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) +
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY2
                            FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL
                            WHERE   PA.DUE_DATE = CAL.CAL_DATE
                            AND     PA.VERSION||'2' = '$!{plant_alloc_version}'||'2'
                            AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')  
                            GROUP   BY PA.VERSION, ITEM_ID
                            */
                            SELECT '$!{plant_alloc_version}' VERSION, IM.ITEM_ID
                            	   , NVL(PA.RP_QTY0, 0) RP_QTY0, NVL(PA.RP_QTY1, 0) RP_QTY1, NVL(PA.RP_QTY2, 0) RP_QTY2--, IM.ITEM_NAME, IM.CAT03
                            FROM (
                                    SELECT  PA.VERSION VERSION,
                                            PA.ITEM_ID,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY0,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) +
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY1,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY2
                                    FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL
                                    WHERE   PA.DUE_DATE = CAL.CAL_DATE
		                            AND     PA.VERSION = '$!{plant_alloc_version}'
		                            AND     PA.SEQ = 2
                                    AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                        AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')
                                    GROUP   BY PA.VERSION, PA.ITEM_ID
                                    ) PA, ITEM_MST IM
                            WHERE IM.ITEM_ID = PA.ITEM_ID(+)
                            AND 	(    (IM.ITYPE = 'FERT' AND IM.CAT03 IN ('P10', 'P11', 'F10'))
                                      OR (IM.ITYPE IN ('FERT') AND IM.ETC_FLAG = '900') )
                            AND 	IM.ITEM_STATUS = 'ST'
                            AND 	'$!{plant_alloc_version}' IS NOT NULL
                            --
                            UNION ALL
                            --
                            SELECT  PA.VERSION VERSION,
                                    PA.ITEM_ID,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY0,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY1,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY2
                            FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL, ITEM_MST IM
                            WHERE   PA.DUE_DATE = CAL.CAL_DATE
                            AND     PA.VERSION = '$!{plant_alloc_version}'
                            AND     PA.SEQ = 2
                            AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')
                            AND 	PA.ITEM_ID = IM.ITEM_ID
                            AND 	IM.ITEM_STATUS = 'ST' AND IM.CAT03 = 'O10'
                            AND 	'$!{plant_alloc_version}' IS NOT NULL
                            GROUP   BY PA.VERSION, PA.ITEM_ID
                            --
                            UNION	ALL
                            --
                            /* 수출 MTS는 모두 보이게 한다. */
                            SELECT	'$!{plant_alloc_version}'	VERSION,
									ITEM_ID,
									0	RP_QTY0,
									0	RP_QTY1,
									0	RP_QTY2
							FROM	ITEM_MST
							WHERE	ITEM_STATUS	= 'ST'
							AND		CAT03 		= 'O10'
							AND		MTO_MTS_TYPE = '0002'
							AND		ITEM_ID	NOT IN 
									(
									SELECT	PA.ITEM_ID
									FROM	PLANT_ALLOC_PLAN PA,
											ITEM_MST IM
									WHERE	PA.ITEM_ID	= IM.ITEM_ID
									AND 	IM.ITEM_STATUS = 'ST' AND IM.CAT03 = 'O10'
									AND     PA.VERSION = '$!{plant_alloc_version}'
									)
							AND		'$!{checked_domain}' IS NOT NULL
                            )   D,
                            (
                            /*
                          *      임시 품종 분류 대분류(설비유형이 정의되면 변경 예정)
                          */
                            SELECT  ITEM.ITEM_ID,
                                    CD1.CD         CD1, 
                                    CD1.CD_NAME    CD1_NM
                            FROM    ITEM_MST ITEM, 
                                    CODE_MST CD1
                            WHERE   ITEM.CAT06 = CD1.CD
                            AND     CD1.CD_GRP = 'CAT06'
                            )   RES_TP,
                            ( 
                            SELECT  IM.ITEM_ID,
                                    IM.ITEM_NAME
                            FROM    ITEM_MST IM
                            WHERE   IM.MADE_TYPE != 'DE' 
                        #if("$!{checked_domain}" == "DO")
                        	/* 내수 제품*/
                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
                        #elseif("$!{checked_domain}" == "EXMTS")
                        	/* 수출 제품(MTS) */
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                            AND		IM.MTO_MTS_TYPE	= '0002'
                        #elseif("$!{checked_domain}" == "EXMTO")
                        	/* 수출 제품(MTO) */
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                            AND		IM.MTO_MTS_TYPE	= '0001'
                        #end                            
                            )   IM,
                            /* 차주, 차차주 영업 일수 */
                            (
                            SELECT  fn_nscm_get_workingday01(REPLACE('2009-01-14','-',''), 
                                 							 TO_CHAR(NEXT_DAY(TO_DATE('2009-01-14','YYYY-MM-DD'), 1), 'YYYYMMDD')) T_WORK, -- 금주 영업일수
                            		fn_nscm_get_workingday01(TO_CHAR(NEXT_DAY('$!{sdate}',2),'YYYYMMDD'), 
							                                 TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+6, 1), 'YYYYMMDD')) N_WORK, -- 차주 영업일수
							        fn_nscm_get_workingday01(TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+7, 2),'YYYYMMDD'),
							                                 TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+13, 1), 'YYYYMMDD')) NN_WORK,  -- 차차주 영업일수
							        TO_CHAR(NEXT_DAY('$!{sdate}',2),'YYYYMMDD') N_MON,  -- 차주 월요일                               
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+6, 1), 'YYYYMMDD') N_SUN,	-- 차주 일요일 
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+7, 2),'YYYYMMDD') NN_MON, 	-- 차차주 월요일
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+13, 1), 'YYYYMMDD') NN_SUN	-- 차차주 일요일
							FROM DUAL
                            ) WO           
                    WHERE   D.ITEM_ID = B.ITEM_ID(+)
                    AND     D.ITEM_ID = C.ITEM_ID(+)    
                    AND     D.ITEM_ID = A.ITEM_ID(+)
                    AND     D.ITEM_ID = IM.ITEM_ID
                    AND     D.ITEM_ID = RES_TP.ITEM_ID(+)
                    )   A,
                    (
                    /*
                        1 : 제품별 수량
                        2 : 설비유형별 소계
                        3 : 총계
                    */
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    UNION   ALL
                    SELECT  3 NO FROM DUAL
                    )   B    
            --WHEREITEM_ID IN ('101000982', '101000066')
            /* 
                최신 공장할당 버전이 PLANT_ALLOC_ITEM_ADJ 테이블에있으면 
                UNION ALL 위쪽 쿼리 실행 안함 
           */
            WHERE   NOT EXISTS ( 
                                SELECT  DISTINCT PA.VERSION
	                            FROM    PLANT_ALLOC_ITEM_ADJ PA,
	                            		(
	                            		SELECT  IM.ITEM_ID,
			                                    IM.ITEM_NAME
			                            FROM    ITEM_MST IM
			                            WHERE   IM.MADE_TYPE != 'DE' 
			                        #if("$!{checked_domain}" == "DO")
			                        	/* 내수 제품*/
			                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
			                        #elseif("$!{checked_domain}" == "EXMTS")
			                        	/* 수출 제품(MTS) */
			                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
			                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
			                            AND		IM.MTO_MTS_TYPE	= '0002'
			                        #elseif("$!{checked_domain}" == "EXMTO")
			                        	/* 수출 제품(MTO) */
			                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
			                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
			                            AND		IM.MTO_MTS_TYPE	= '0001'
			                        #end
	                            		) IM
	                            WHERE   PA.VERSION = '$!{plant_alloc_version}'
	                            AND		PA.ITEM_ID	= IM.ITEM_ID
                               )   
            GROUP   BY DECODE(NO,1,RES_TP,2,RES_TP, NULL), DECODE(NO,1,ITEM_ID,2,'소계'), NO   
            UNION   ALL
            /* 
                PLANT_ALLOC_ITEM_ADJ 테이블에 공장할당 버전과 일치하는 버전이 존재하면 실행 
           */
            SELECT  NO, -- 0
                    MAX(VERSION) VERSION, --공장할당VERSION 1
                    DECODE(NO,1,RES_TP,2, RES_TP, NULL) RES_TP,     --설비유형 2 
                    DECODE(NO,1,ITEM_ID,2,'소계') ITEM_ID, --자재코드 3 
                    MAX(DECODE(NO,1, ITEM_NAME,2, RES_TP_NM||'소계','총계')) ITEM_NAME, --자재코드명 4
                    ROUND(AVG(DECODE(NO,1,W3_AVG_RATIO,2,W3_AVG_RATIO,W3_AVG_RATIO)),2) W3_AVG_RATIO, --3주평균접근율 5
                    ROUND(AVG(DECODE(NO,1,W1_AVG_RATIO,2,W1_AVG_RATIO,W1_AVG_RATIO)),2) W1_AVG_RATIO, --1주평균접근율 6
                    TO_CHAR(SUM(DECODE(NO,1,SAFETY_STOCK,2,SAFETY_STOCK,SAFETY_STOCK)),'999,999,999') SAFETY_STOCK, --안전재고 7
                    TO_CHAR(SUM(DECODE(NO,1,BASE_STOCK,2,BASE_STOCK,BASE_STOCK)),'999,999,999') BASE_STOCK, --기초재고 8
                    TO_CHAR(SUM(DECODE(NO,1,RECEIPT_EXPT,2,RECEIPT_EXPT,RECEIPT_EXPT)),'999,999,999') RECEIPT_EXPT, --금주생산계획 9
                    TO_CHAR(SUM(DECODE(NO,1,SALES_PLAN,2,SALES_PLAN,SALES_PLAN)),'999,999,999') SALES_PLAN, --금주판매계획 10
                    ROUND(AVG(DECODE(NO,1,SALES_VS_WEEK1_AVG,2,SALES_VS_WEEK1_AVG,SALES_VS_WEEK1_AVG)),2) SALES_VS_WEEK1_AVG, --1주평균판매대비 11
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK,2,EXPERT_STOCK,EXPERT_STOCK)),'999,999,999') EXPERT_STOCK, --예상재고(차주초) 12
                    TO_CHAR(SUM(DECODE(NO,1,N_RECEIPT_EXPT,2,N_RECEIPT_EXPT,N_RECEIPT_EXPT)),'999,999,999') N_RECEIPT_EXPT, --차주생산계획 13
                    -------------------------------------------------------------------------------------------------          
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*0),'YYYY-MM-DD') RP0_DAY, --당주(월) -- 변경(토)
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*1),'YYYY-MM-DD') RP1_DAY, --차주(월) -- 변경(토)
                    TO_CHAR(TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*2),'YYYY-MM-DD') RP2_DAY, --차차주(월) -- 변경(토)
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY0,2,RP_QTY0,RP_QTY0)),'999,999,999') RP0_QTY, --보충요구량(당주) 
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY1,2,RP_QTY1,RP_QTY1)),'999,999,999') RP1_QTY, --보충요구량(차주) 
                    TO_CHAR(SUM(DECODE(NO,1,RP_QTY2,2,RP_QTY2,RP_QTY2)),'999,999,999') RP2_QTY, --보충요구량(차차주) 
                    NVL(TRIM(TO_CHAR(SUM(DECODE(NO,1,PO_QTY1,2,PO_QTY1,PO_QTY1)),'999,999,999')),0) PO_QTY1, --생산필요량(차주)
                    NVL(TRIM(TO_CHAR(SUM(DECODE(NO,1,PO_QTY2,2,PO_QTY2,PO_QTY2)),'999,999,999')),0) PO_QTY2, --생산필요량(차차주)
                    TO_CHAR(SUM(DECODE(NO,1,NN_SALES_PLAN,2,NN_SALES_PLAN,NN_SALES_PLAN)),'999,999,999') NN_SALES_PLAN,   --차차주판매계획           
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK3,2,EXPERT_STOCK3,EXPERT_STOCK3)),'999,999,999') EXPERT_STOCK3,   --예상재고(차차주)   
                    -------------------------------------------------------------------------------------------------          
                    TO_CHAR(SUM(DECODE(NO,1,NWK_ADJ_QTY,2,NWK_ADJ_QTY,NWK_ADJ_QTY)),'999,999,999') NWK_ADJ_QTY, --요구/생산 차이 16
                    TO_CHAR(SUM(DECODE(NO,1,N_SALES_PLAN,2,N_SALES_PLAN,N_SALES_PLAN)),'999,999,999') N_SALES_PLAN,           --차주판매계획 17
                    TO_CHAR(SUM(DECODE(NO,1,EXPERT_STOCK2,2,EXPERT_STOCK2,EXPERT_STOCK2)),'999,999,999') EXPERT_STOCK2,        --예상재고 18   
            		MAX(W1_NFOS),	-- 1주판매계획
            		MAX(W1_ACT),	-- 1주판매실적
            		MAX(W3_NFOS),	-- 3주판매계획
            		MAX(W3_ACT),		-- 3주판매실적
            		ROUND(SUM(DECODE(NO,1,N_PLAN_VS_STOCK_WORK,2,N_PLAN_VS_STOCK_WORK,N_PLAN_VS_STOCK_WORK)),1) N_PLAN_VS_STOCK_WORK,  --차주계획대비재고일수 31
            		ROUND(SUM(DECODE(NO,1,N_ACT_VS_STOCK_WORK,2,N_ACT_VS_STOCK_WORK,N_ACT_VS_STOCK_WORK)),1) N_ACT_VS_STOCK_WORK,	  --차주실적대비재고일수 32
            		ROUND(SUM(DECODE(NO,1,NN_PLAN_VS_STOCK_WORK,2,NN_PLAN_VS_STOCK_WORK,NN_PLAN_VS_STOCK_WORK)),1) NN_PLAN_VS_STOCK_WORK, --차차주계획대비재고일수 33
            		ROUND(SUM(DECODE(NO,1,NN_ACT_VS_STOCK_WORK, 2,NN_ACT_VS_STOCK_WORK,NN_ACT_VS_STOCK_WORK)),1) NN_ACT_VS_STOCK_WORK, --차차주계획대비재고일수 34
            		MAX(NN_WORK) NNWK_WORK, -- 차차주 영업일수 35
            		MAX(SALES_MEAN_1WEEK) SALES_MEAN_1WEEK, --1주 평균 판매 36
            		ROUND(SUM(DECODE(NO,1,NNN_ACT_VS_STOCK_WORK, 2,NNN_ACT_VS_STOCK_WORK,NNN_ACT_VS_STOCK_WORK)),1) NNN_ACT_VS_STOCK_WORK,	--차차차주실적대비재고일수 37
            		SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_1,2,SALES_ACT_VS_SALES_PLAN_1,SALES_ACT_VS_SALES_PLAN_1)) SALES_ACT_VS_SALES_PLAN_1, --금주 판매계획 - 금주 1주 평균 판매실적 38
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_2,2,SALES_ACT_VS_SALES_PLAN_2,SALES_ACT_VS_SALES_PLAN_2)) SALES_ACT_VS_SALES_PLAN_2, --차주 판매계획 - 차주 1주 평균 판매실적 39
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_3,2,SALES_ACT_VS_SALES_PLAN_3,SALES_ACT_VS_SALES_PLAN_3)) SALES_ACT_VS_SALES_PLAN_3, --차차주 판매계획 - 차차주 1주 평균 판매실적 40
           			SUM(DECODE(NO,1,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2,2,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2,SALES_ACT_VS_SALES_PLAN_1 + SALES_ACT_VS_SALES_PLAN_2)) W1_SALES_PLAN_DIFF, -- 1주평균 판매 계획 가감량 
           			SUM(DECODE(NO,1,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2,2,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2,SALES_ACT_3W_VS_SALES_PLAN_1 + SALES_ACT_3W_VS_SALES_PLAN_2)) W3_SALES_PLAN_DIFF -- 3주평균 판매 계획 가감량 42
    FROM    
                    ( 
                    SELECT  RES_TP.CD1    RES_TP,    --설비유형
                            RES_TP.CD1_NM RES_TP_NM, --설비유형명 
                            D.VERSION,               --공장할당VERSION
                            D.ITEM_ID,               --자재코드
                            IM.ITEM_NAME,            --자재코드명          
                            A.W3_AVG_RATIO,          --3주평균접근율
                            A.W1_AVG_RATIO,          --1주평균접근율
                            C.SAFETY_STOCK,          --안전재고
                            B.BASE_STOCK,            --기초재고
                            B.RECEIPT_EXPT,          --금주생산계획
                            B.SALES_PLAN,            --금주판매계획
                            B.SALES_VS_WEEK1_AVG,    --1주평균판매대비
                            B.EXPERT_STOCK,          --예상재고(차주초)
                            B.EXPERT_STOCK*WO.N_WORK / DECODE(B.N_SALES_PLAN, 0, 1, B.N_SALES_PLAN)		  N_PLAN_VS_STOCK_WORK, --차주계획대비재고일수
                            B.EXPERT_STOCK / DECODE(B.SALES_MEAN_1WEEK, 0, 1, B.SALES_MEAN_1WEEK) N_ACT_VS_STOCK_WORK,  --차주실적대비재고일수
                            B.N_RECEIPT_EXPT,        --차주생산계획
                            D.RP_QTY0 RP_QTY0,       --보충요구량(당주)               
                            D.RP_QTY1 RP_QTY1,       --보충요구량(차주)               
                            PT.W02_LST_PRODQTY PO_QTY1,       --생산필요량(차주)
                            NVL(PT.W02_LST_PRODQTY,0) - NVL(D.RP_QTY1,0) NWK_ADJ_QTY,        --요구/생산 차이
                            B.N_SALES_PLAN ,         --차주판매계획                                            
                            NVL(B.EXPERT_STOCK,0)+(NVL(PT.W02_LST_PRODQTY,0)-NVL(B.N_SALES_PLAN,0)) EXPERT_STOCK2, --예상재고(차주)  
                            (NVL(B.EXPERT_STOCK,0)+(NVL(PT.W02_LST_PRODQTY,0)-NVL(B.N_SALES_PLAN,0)))*WO.NN_WORK / DECODE(NVL(B.NN_SALES_PLAN,1), 0, 1, NVL(B.NN_SALES_PLAN,1))		  NN_PLAN_VS_STOCK_WORK, --차차주계획대비재고일수
                            (NVL(B.EXPERT_STOCK,0)+(NVL(PT.W02_LST_PRODQTY,0)-NVL(B.N_SALES_PLAN,0))) / DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NN_ACT_VS_STOCK_WORK,  --차차주실적대비재고일수
                            NVL(B.EXPERT_STOCK,0)+(NVL(PT.W02_LST_PRODQTY,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0)) EXPERT_STOCK3,  --예상재고(차차주)
                            (NVL(B.EXPERT_STOCK,0)+(NVL(PT.W02_LST_PRODQTY,0)-NVL(B.N_SALES_PLAN,0))+(NVL(D.RP_QTY2,0)-NVL(B.NN_SALES_PLAN,0))) /
                            DECODE(NVL(B.SALES_MEAN_1WEEK,1), 0, 1, NVL(B.SALES_MEAN_1WEEK,1)) NNN_ACT_VS_STOCK_WORK,  --차차차주실적대비재고일수
                            D.RP_QTY2 RP_QTY2,       --보충요구량(차차주)               
                            PT.W03_LST_PRODQTY PO_QTY2,       --생산필요량(차차주)
                            B.NN_SALES_PLAN,         --판매계획(차차주)                              
                    		A.W1_NFOS,	-- 1주판매계획
                    		A.W1_ACT,	-- 1주판매실적
                    		A.W3_NFOS,	-- 3주판매계획
                    		A.W3_ACT,   -- 3주판매실적
                    		WO.NN_WORK,  -- 차차주 영업일수
                    		DECODE(B.SALES_MEAN_1WEEK, 0, 1, B.SALES_MEAN_1WEEK) SALES_MEAN_1WEEK, -- 1주평균 판매
                    		B.SALES_PLAN - (NVL(A.W1_ACT,0) * (NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD'), 1)- TO_DATE('$!{sdate}','YYYY-MM-DD'))) SALES_ACT_VS_SALES_PLAN_1,
		            		B.N_SALES_PLAN - (NVL(A.W1_ACT,0) * 6) SALES_ACT_VS_SALES_PLAN_2,
		            		B.NN_SALES_PLAN - (NVL(A.W1_ACT,0) * 6) SALES_ACT_VS_SALES_PLAN_3,
                    		B.SALES_PLAN - (NVL(A.W3_ACT,0) * (NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD'), 1)- TO_DATE('$!{sdate}','YYYY-MM-DD'))) SALES_ACT_3W_VS_SALES_PLAN_1,
                    		B.N_SALES_PLAN - (NVL(A.W3_ACT,0) * 6) SALES_ACT_3W_VS_SALES_PLAN_2                    		
                    FROM
                            (
                            --1. 판매계획/판매실적
                            SELECT  ITEM_ID,
                                    --1. 전월(판매계획/판매실적)
                                    /*
                                    ROUND(MAX(CASE WHEN  (M_ACT>0) THEN M_NFOS/M_ACT
                                    ELSE 0
                                    END),2) M_AVG_RATIO,
                                    */
                                    W1_NFOS,	-- 1주판매계획
                                    W1_ACT,		-- 1주판매실적
                                    W3_NFOS,	-- 3주판매계획
                                    W3_ACT,		-- 3주판매실적
                                    --2. 3주평균(판매계획/판매실적)
                                    ROUND(MAX(CASE WHEN  (W3_ACT>0) THEN W3_NFOS/W3_ACT
                                    ELSE 0
                                    END),2) W3_AVG_RATIO,
                                    --3. 1주평균(판매계획/판매실적)
                                    ROUND(MAX(CASE WHEN  (W1_ACT>0) THEN W1_NFOS/W1_ACT
                                    ELSE 0
                                    END),2) W1_AVG_RATIO
                                    --4. 당월경영계획
                                    --SUM(M_NFO_QTY) M_NFO_QTY                          
                            FROM    
                                    (
                                    SELECT  ITEM_ID,     
                                            --1. 전월(판매계획,판매실적)
                                            ---------------------------------------------------------
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM') THEN NFO_QTY END) M_NFOS,  
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM') THEN ACT_QTY END) M_ACT, 
                                            ---------------------------------------------------------      
                                            --2. 3주평균접근율
                                            --------------------------------------------------------------------------------------
                                            ROUND(SUM(CASE WHEN YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*3), 'IYYYIW') 
                                                 AND TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                             THEN NFO_QTY
                                            ELSE 0
                                            END
                                            )/18,2) W3_NFOS,
                                            ROUND(SUM(CASE WHEN YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*3), 'IYYYIW') 
                                                 AND TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                             THEN ACT_QTY
                                            ELSE 0
                                            END
                                            )/18,2) W3_ACT,
                                            --------------------------------------------------------------------------------------
                                            --3. 1주평균접근율
                                            ROUND(SUM(CASE WHEN YYYYWW  = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                               THEN NFO_QTY
                                            ELSE 0
                                            END
                                            )/6,2) W1_NFOS,
                                            ROUND(SUM(CASE WHEN YYYYWW  = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')-( 7*1), 'IYYYIW')
                                               THEN ACT_QTY
                                            ELSE 0
                                            END
                                            )/6,2) W1_ACT,       
                                            SUM(CASE WHEN YYYYMM = TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM') THEN NFO_QTY
                                            END 
                                            ) M_NFO_QTY --당월경영계획      
                                    FROM    
                                            (
                                            --1. 전월 2개월간의 판매계획 
                                            SELECT    s1.ITEM_ID,
											        s2.YYYYMM, 
											        s2.YYYYWW,
											        s2.YYYYMMDD,       
											        SUM(NORMAL_QTY+PROM_QTY+SUPT_QTY+SAMP_QTY) NFO_QTY,
											        0 ACT_QTY
											FROM    NFOS_SALES_PLAN_WEEKLY    S1,
											        (
											        SELECT    CASE
											                    WHEN    (CAL_DATE - SYSDATE) >= 0 THEN
											                        CASE 
											                            WHEN TO_CHAR(SYSDATE, 'IW') = '01' AND TO_CHAR(SYSDATE, 'MM') = '12' THEN TO_CHAR(ADD_MONTHS(SYSDATE,1), 'yyyy')
											                            ELSE TO_CHAR(SYSDATE, 'yyyy') 
											                        END
											                    ELSE
											                        CASE 
											                            WHEN TO_CHAR(CAL_DATE, 'IW') = '01' AND TO_CHAR(CAL_DATE, 'MM') = '12' THEN TO_CHAR(ADD_MONTHS(CAL_DATE,1), 'yyyy')
											                            ELSE TO_CHAR(CAL_DATE, 'yyyy') 
											                        END
											                END                                 YYYY,
											                CASE
											                    WHEN    (CAL_DATE - SYSDATE) >= 0 THEN
											                        TO_CHAR(SYSDATE, 'IW')
											                    ELSE
											                        TO_CHAR(CAL_DATE, 'IW')
											                END        VERSION,
											                YYYYMMDD    YYYYMMDD,
											                YYYYMM        YYYYMM,
											                YYYYWW        YYYYWW
											        FROM    CAL_MST
											        WHERE    YYYYMM  BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM')
											                                            AND     TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM')
											        AND        HOLIDAY_FLAG    IS NULL
											        )                        S2
											WHERE    S1.YYYY        = S2.YYYY
											AND        S1.VERSION    = S2.VERSION
											AND        S1.YYYYMMDD    = S2.YYYYMMDD
											GROUP
											BY        S1.ITEM_ID,  S2.YYYYMM, s2.YYYYWW, s2.YYYYMMDD
                                            UNION   ALL
                                            --2. 전월 2개월간의 판매실적
                                            SELECT  ITEM_ID, 
                                                    CAL.YYYYMM, 
                                                    CAL.YYYYWW,
                                                    CAL.YYYYMMDD,  
                                                    0 NFO_QTY,
                                                    SUM(ACT.QTY) ACT_QTY
                                            FROM    SALES_ACT_RECENT ACT, CAL_MST CAL
                                            WHERE   ACT.SALE_DATE = CAL.CAL_DATE
                                            AND     CAL.YYYYMM  BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), -1),'YYYYMM')
                                                                AND     TO_CHAR(ADD_MONTHS(TO_DATE('$!{sdate}','YYYY-MM-DD'), 0),'YYYYMM')
                                            GROUP   BY ITEM_ID, CAL.YYYYMM, CAL.YYYYWW, CAL.YYYYMMDD
                                            )
                                    --WHERE ITEM_ID  IN ('102000124', '101000057')    
                                    GROUP BY ITEM_ID   
                                    )
                            GROUP BY ITEM_ID,W1_NFOS,W1_ACT,W3_NFOS,W3_ACT
                            )   A,
                            (
                            /*   
                            *  1. 기초재고            : 조회일자(오늘)에 해당하는 BASE_STOCK  SUM
                            *  2. 금주생산계획        : 조회일자(오늘)에서 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            *  3. 금주판매계획        : 조회일자(오늘)에서 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            *  4. 1주일 평균판매      : 조회일자(오늘)에 해당하는 SALES_MEAN_1WEEK SUM
                            *  5. 금주잔여판매일수    :  조회일자(오늘)을 포함해서 영업 마감일까지(조회일자 주의 토요일) 일수
                            *  6. 1주평균판매대비     : (금주판매계획/(1주일평균판매*금주잔여판매일수)) * 100
                            *  7. 예상재고(차주초)    : 기초재고 + 금주생산계획 - 금주판매계획
                            *  8. 차주생산계획        : 조회일자(오늘)기준 차주에서 차주 마지막 영업일까지(조회일자 주의 토요일)  SUM
                            */ 
                            SELECT  ITEM_ID,
                                    BASE_STOCK,         --기초재고
                                    RECEIPT_EXPT,       --금주생산계획
                                    SALES_PLAN ,        --금주판매계획
                                    ROUND(SALES_PLAN / DECODE((SALES_MEAN_1WEEK * SALES_DAY),0,1,(SALES_MEAN_1WEEK * SALES_DAY)),2) 
                                    SALES_VS_WEEK1_AVG,    -- 1주평균판매대비
                                    BASE_STOCK + RECEIPT_EXPT - SALES_PLAN  EXPERT_STOCK,  -- 예상재고(차주초)
                                    N_RECEIPT_EXPT,     --차주생산계획
                                    N_SALES_PLAN,       --차주판매계획 
                                    NN_SALES_PLAN,      --차주판매계획  
                                    SALES_MEAN_1WEEK	--1주평균판매                  
                            FROM        
                                    (
                                    SELECT  ITEM_ID,
                                            SUM(DECODE(YYYYMMDD, REPLACE ('$!{sdate}', '-', ''),BASE_STOCK,0))                              BASE_STOCK,                        --기초재고
                                            SUM(CASE WHEN  YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'IYYYIW')
									                       AND YYYYMMDD >= TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'YYYYMMDD')
									                 THEN  RECEIPT_EXPT
									                 ELSE  0
									            END)       RECEIPT_EXPT,                      --금주생산계획
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*1), 'IYYYIW'),RECEIPT_EXPT))  N_RECEIPT_EXPT,                    --차주생산계획        
                                            SUM(CASE WHEN  YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'IYYYIW')
									                       AND YYYYMMDD >= TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD'), 'YYYYMMDD')
									                 THEN  SALES_PLAN
									                 ELSE  0
									            END)       SALES_PLAN,                      --금주판매계획                                                
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*1), 'IYYYIW'),SALES_PLAN))    N_SALES_PLAN,                      --차주판매계획
                                            SUM(DECODE(YYYYWW  , TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+(7*2), 'IYYYIW'),SALES_PLAN))    NN_SALES_PLAN,                     --차차주판매계획                                      
                                            SUM(DECODE(YYYYMMDD, REPLACE ('$!{sdate}', '-', ''),SALES_MEAN_1WEEK,0))                        SALES_MEAN_1WEEK,                  --1주일 평균판매
                                            NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD'), 1)- TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD') SALES_DAY      --금주잔여판매일수 
                                    FROM
                                            (
                                            SELECT  DD.ITEM_ID,
                                                    DECODE(DC.DC_ID, NULL, 0, DD.BASE_STOCK) BASE_STOCK,
                                                    DD.RECEIPT_EXPT,
                                                    (DD.SALES_PLAN+DD.PROM_PLAN) SALES_PLAN, --판매계획수량수정(2008.11.12 수정)
                                                    SALES_MEAN_1WEEK,
                                                    CAL.YYYYWW,
                                                    CAL.YYYYMMDD
                                            FROM    DC_DATAWAREHOUSE DD, CAL_MST CAL,
										            (
										            SELECT 	DC_ID, DC_NAME
								               		  FROM 	DC_MST
								                	 WHERE 	CDC_FLAG = 'Y'
								                	UNION 
								                 	SELECT 	DC_ID, DC_NAME
								               		  FROM 	DC_MST
								                	 WHERE 	RDC_FLAG = 'Y'    
										            ) DC
										    WHERE   DD.CNFM_DATE = CAL.YYYYMMDD
										    AND     DD.DC_ID    =   DC.DC_ID(+)
                                            /* 당주 월요일부터 ~ 당주 일요일까지 */    
                                            AND     DD.CNFM_DATE BETWEEN  TO_CHAR(NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')+(7*-1), 2), 'YYYYMMDD')
                                                                 AND      TO_CHAR(NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')+(7*2) , 1)  , 'YYYYMMDD')          
                                            )
                                    GROUP BY ITEM_ID, NEXT_DAY(TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD'), 1)- TO_DATE(REPLACE ('$!{sdate}', '-', ''),'YYYYMMDD')  
                                    )   
                            )B,
                            (
                            /* 
                            * 조회 일자에 해당하는 안전재고 (DC_ID에 해당 없이 모두 SUM) 
                            */
                            SELECT SP.WORK_DATE, SP.ITEM_ID, ROUND(SUM(SP.SAFETY_STOCK)+SUM(SP.CAMP_STOC)+ SUM(NVL(SP.FA_STOCK,0)) +
                                    SUM(DECODE(SIGN(TO_DATE(REPLACE('$!{sdate}', '-', ''),'YYYYMMDD')-TO_DATE(SP.START_DATE,'YYYYMMDD')),-1,0,
                                        DECODE(SIGN(TO_DATE(SP.END_DATE,'YYYYMMDD')-TO_DATE(REPLACE('$!{sdate}', '-', ''),'YYYYMMDD')),-1,0,
                                        NVL(SP.SAVE_STOC,0)))),0)     SAFETY_STOCK
                            FROM    STOCK_POLICY_QTY  SP,
                                    (
                                    SELECT  MAX(WORK_DATE) WORK_DATE
                                    FROM    STOCK_POLICY_QTY
                                    WHERE   LOC_TYPE = 'DC'
                                    )   MV
                            WHERE   SP.WORK_DATE = MV.WORK_DATE
                            GROUP   BY SP.WORK_DATE, SP.ITEM_ID
                            ) C,
                            (
                            /*
                            SELECT  PA.VERSION VERSION,
                                    ITEM_ID,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY0,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY1,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN QTY
                                    ELSE 0
                                    END) RP_QTY2
                            FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL
                            WHERE   PA.DUE_DATE = CAL.CAL_DATE
                            AND     PA.VERSION||'2' = '$!{plant_alloc_version}'||'2'
                            AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')  
                            GROUP   BY PA.VERSION, ITEM_ID
                            */
                            SELECT '$!{plant_alloc_version}' VERSION, IM.ITEM_ID
                            	   , NVL(PA.RP_QTY0, 0) RP_QTY0, NVL(PA.RP_QTY1, 0) RP_QTY1, NVL(PA.RP_QTY2, 0) RP_QTY2--, IM.ITEM_NAME, IM.CAT03
                            FROM (
                                    SELECT  PA.VERSION VERSION,
                                            PA.ITEM_ID,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY0,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) +
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY1,
                                            SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN PA.QTY
                                            ELSE 0
                                            END) RP_QTY2
                                    FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL
                                    WHERE   PA.DUE_DATE = CAL.CAL_DATE
		                            AND     PA.VERSION = '$!{plant_alloc_version}'
		                            AND     PA.SEQ = 2
                                    AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                        AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')
                                    GROUP   BY PA.VERSION, PA.ITEM_ID
                                    ) PA, ITEM_MST IM
                            WHERE IM.ITEM_ID = PA.ITEM_ID(+)
                            AND 	(    (IM.ITYPE = 'FERT' AND IM.CAT03 IN ('P10', 'P11', 'F10'))
                                      OR (IM.ITYPE IN ('FERT') AND IM.ETC_FLAG = '900') )
                            AND 	IM.ITEM_STATUS = 'ST'
                            AND 	'$!{plant_alloc_version}' IS NOT NULL
                            --
                            UNION ALL
                            --
                            SELECT  PA.VERSION VERSION,
                                    PA.ITEM_ID,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY0,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*1), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) +
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY1,
                                    SUM(CASE WHEN CAL.YYYYWW = TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW') THEN PA.QTY
                                    ELSE 0
                                    END) RP_QTY2
                            FROM    PLANT_ALLOC_PLAN PA, CAL_MST CAL, ITEM_MST IM
                            WHERE   PA.DUE_DATE = CAL.CAL_DATE
                            AND     PA.VERSION = '$!{plant_alloc_version}'
                            AND     PA.SEQ = 2
                            AND     CAL.YYYYWW  BETWEEN TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*0), 'IYYYIW')
                                                AND     TO_CHAR(TO_DATE('$!{sdate}','YYYY-MM-DD')+( 7*2), 'IYYYIW')
                            AND 	PA.ITEM_ID = IM.ITEM_ID
                            AND 	IM.ITEM_STATUS = 'ST' AND IM.CAT03 = 'O10'
                            AND 	'$!{plant_alloc_version}' IS NOT NULL
                            GROUP   BY PA.VERSION, PA.ITEM_ID
                            --
                            UNION	ALL
                            --
                            /* 수출 MTS는 모두 보이게 한다. */
                            SELECT	'$!{plant_alloc_version}'	VERSION,
									ITEM_ID,
									0	RP_QTY0,
									0	RP_QTY1,
									0	RP_QTY2
							FROM	ITEM_MST
							WHERE	ITEM_STATUS	= 'ST'
							AND		CAT03 		= 'O10'
							AND		MTO_MTS_TYPE = '0002'
							AND		ITEM_ID	NOT IN 
									(
									SELECT	PA.ITEM_ID
									FROM	PLANT_ALLOC_PLAN PA,
											ITEM_MST IM
									WHERE	PA.ITEM_ID	= IM.ITEM_ID
									AND 	IM.ITEM_STATUS = 'ST' AND IM.CAT03 = 'O10'
									AND     PA.VERSION = '$!{plant_alloc_version}'
									)
							AND		'$!{checked_domain}' IS NOT NULL
                            ) D,
                            (
                            /*
                            당주, 차주, 차차주 생산 필요량  
                          */
                            SELECT  IL.VERSION, IL.ITEM_ID, 
                                    A.DUE_DATE AS W01_DUE_DATE, A.LST_PRODQTY AS W01_LST_PRODQTY, 
                                    B.DUE_DATE AS W02_DUE_DATE, B.LST_PRODQTY AS W02_LST_PRODQTY, 
                                    C.DUE_DATE AS W03_DUE_DATE, C.LST_PRODQTY AS W03_LST_PRODQTY 
                            FROM    (
                                    SELECT  DISTINCT PT.VERSION, PT.ITEM_ID
                                    FROM    PLANT_ALLOC_ITEM_ADJ PT
                                    WHERE   VERSION = '$!{plant_alloc_version}'
                                    )   IL,   
                                    (
                                    SELECT  PT.VERSION, PT.ITEM_ID, PT.DUE_DATE, PT.LST_PRODQTY 
                                    FROM    PLANT_ALLOC_ITEM_ADJ PT  
                                    WHERE   VERSION = '$!{plant_alloc_version}'
                                    AND     PT.DUE_DATE = TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*0)
                                    )   A, -- 당주
                                    ( 
                                    SELECT  PT.VERSION, PT.ITEM_ID, PT.DUE_DATE, PT.LST_PRODQTY 
                                    FROM    PLANT_ALLOC_ITEM_ADJ PT  
                                    WHERE   VERSION = '$!{plant_alloc_version}'
                                    AND     PT.DUE_DATE = TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*1)
                                    )   B, -- 차주
                                    ( 
                                    SELECT  PT.VERSION, PT.ITEM_ID, PT.DUE_DATE, PT.LST_PRODQTY 
                                    FROM    PLANT_ALLOC_ITEM_ADJ PT  
                                    WHERE   VERSION = '$!{plant_alloc_version}'
                                    AND     PT.DUE_DATE = TRUNC(TO_DATE('$!{sdate}','YYYY-MM-DD'),'D')+6+(7*2)
                                    )   C -- 차차주
                            WHERE   IL.VERSION = A.VERSION(+)
                            AND     IL.VERSION = B.VERSION(+)
                            AND     IL.VERSION = C.VERSION(+)
                            AND     IL.ITEM_ID = A.ITEM_ID(+)
                            AND     IL.ITEM_ID = B.ITEM_ID(+)
                            AND     IL.ITEM_ID = C.ITEM_ID(+)      
                            )   PT,
                            (
                            SELECT  ITEM.ITEM_ID,
                                    CD1.CD         CD1, 
                                    CD1.CD_NAME    CD1_NM
                            FROM    ITEM_MST ITEM, 
                                    CODE_MST CD1
                            WHERE   ITEM.CAT06 = CD1.CD
                            AND     CD1.CD_GRP = 'CAT06'
                            )   RES_TP,
                            ( 
                            SELECT  IM.ITEM_ID,
                                    IM.ITEM_NAME
                            FROM    ITEM_MST IM
                            WHERE   IM.MADE_TYPE != 'DE' 
                        #if("$!{checked_domain}" == "DO")
                        	/* 내수 제품*/
                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
                        #elseif("$!{checked_domain}" == "EXMTS")
                        	/* 수출 제품(MTS) */
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                            AND		IM.MTO_MTS_TYPE	= '0002'
                        #elseif("$!{checked_domain}" == "EXMTO")
                        	/* 수출 제품(MTO) */
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                            AND		IM.MTO_MTS_TYPE	= '0001'
                        #end
                            ) IM ,
                            /* 차주, 차차주 영업 일수 */
                            (
                            SELECT  fn_nscm_get_workingday01(TO_CHAR(NEXT_DAY('$!{sdate}',2),'YYYYMMDD'), 
							                                 TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+6, 1), 'YYYYMMDD')) N_WORK, -- 차주 영업일수
							        fn_nscm_get_workingday01(TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+7, 2),'YYYYMMDD'),
							                                 TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+13, 1), 'YYYYMMDD')) NN_WORK,  -- 차차주 영업일수
							        TO_CHAR(NEXT_DAY('$!{sdate}',2),'YYYYMMDD') N_MON,  -- 차주 월요일                               
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+6, 1), 'YYYYMMDD') N_SUN,	-- 차주 일요일 
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+7, 2),'YYYYMMDD') NN_MON, 	-- 차차주 월요일
							        TO_CHAR(NEXT_DAY(TO_DATE('$!{sdate}','YYYY-MM-DD')+13, 1), 'YYYYMMDD') NN_SUN	-- 차차주 일요일
							FROM DUAL
                            ) WO                
                    WHERE   D.ITEM_ID = B.ITEM_ID(+)
                    AND     D.ITEM_ID = C.ITEM_ID(+)    
                    AND     D.ITEM_ID = A.ITEM_ID(+)
                    AND     D.ITEM_ID = IM.ITEM_ID
                    AND     D.ITEM_ID = RES_TP.ITEM_ID(+)
                    AND     D.VERSION = PT.VERSION(+)
                    AND     D.ITEM_ID = PT.ITEM_ID(+)
                    )   A,
                    (
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    UNION   ALL
                    SELECT  3 NO FROM DUAL
                    )   B    
            --WHERE ITEM_ID IN ('101000982', '101000066')
            WHERE   EXISTS ( 
                            SELECT  DISTINCT PA.VERSION
                            FROM    PLANT_ALLOC_ITEM_ADJ PA,
                            		(
                            		SELECT  IM.ITEM_ID,
		                                    IM.ITEM_NAME
		                            FROM    ITEM_MST IM
		                            WHERE   IM.MADE_TYPE != 'DE' 
		                        #if("$!{checked_domain}" == "DO")
		                        	/* 내수 제품*/
		                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
		                        #elseif("$!{checked_domain}" == "EXMTS")
		                        	/* 수출 제품(MTS) */
		                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
		                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
		                            AND		IM.MTO_MTS_TYPE	= '0002'
		                        #elseif("$!{checked_domain}" == "EXMTO")
		                        	/* 수출 제품(MTO) */
		                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
		                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
		                            AND		IM.MTO_MTS_TYPE	= '0001'
		                        #end
                            		) IM
                            WHERE   PA.VERSION = '$!{plant_alloc_version}'
                            AND		PA.ITEM_ID	= IM.ITEM_ID
                           )   
            GROUP   BY DECODE(NO,1,RES_TP,2,RES_TP, NULL), DECODE(NO,1,ITEM_ID,2,'소계'), NO
            --ORDER	BY 4,3,1 
            ORDER   BY 3,4,1 --설비유형

      				  
	</query>
	
	<!-- 01. PLANT_ALLOC_ITEM_ADJ 테이블에 수정한 VERSION의 데이터 DELETE  -->	
	<query id="sc_01060_plantAllocationPlanResultAnalysis_list_save_01">
	
			DELETE  PLANT_ALLOC_ITEM_ADJ
			WHERE   VERSION = '$!{plant_alloc_version}'
		 #if("$!{checked_domain}" == "DO")
          	/* 내수 제품*/
          	AND		ITEM_ID IN (
          				SELECT 	ITEM_ID 
          				FROM 	ITEM_MST IM 
          				WHERE 	IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999'
          			)
         #elseif("$!{checked_domain}" == "EXMTS")
          	/* 수출 제품(MTS) */
          	AND		ITEM_ID	IN (
          				SELECT  ITEM_ID
          				FROM	ITEM_MST IM
          				WHERE   IM.MATERIAL_GROUP &gt;= '5K000'
            			AND     IM.MATERIAL_GROUP &lt;= '5S999'
            			AND		IM.MTO_MTS_TYPE	= '0002'
          			)
         #elseif("$!{checked_domain}" == "EXMTO")
          	/* 수출 제품(MTO) */
          	AND		ITEM_ID	IN (
          				SELECT  ITEM_ID
          				FROM	ITEM_MST IM
          				WHERE   IM.MATERIAL_GROUP &gt;= '5K000'
            			AND     IM.MATERIAL_GROUP &lt;= '5S999'
            			AND		IM.MTO_MTS_TYPE	= '0001'
          			)
         #end
			 	
	</query>
	
	<!-- 02. 수정된 데이터 PLANT_ALLOC_ITEM_ADJ 테이블에 INSERT( 생산 필요량이 0 이 아닌것 만 )  -->
	<query id="sc_01060_plantAllocationPlanResultAnalysis_list_save_02" fix="_user_id"  iterator="version item_id due_date nwk_lst_prodqty">
	
        INSERT  INTO PLANT_ALLOC_ITEM_ADJ(VERSION, ITEM_ID, DUE_DATE, LST_PRODQTY, MADE_TYPE, MADE_DTTM, MADE_BY)
        SELECT  '$!{version}'                       	AS VERSION,
                '$!{item_id}'                       	AS ITEM_ID,        
                TO_DATE('$!{due_date}','YYYY-MM-DD')	AS DUE_DATE,           
                REPLACE('$!{nwk_lst_prodqty}',',')  	AS LST_PRODQTY,
                'AD'                                	AS MADE_TYPE,
                SYSDATE                             	AS MADE_DTTM,
                '$!{_user_id}'                      	AS MADE_BY  
        FROM    DUAL
        WHERE   REPLACE('$!{nwk_lst_prodqty}',',') &gt; 0
            
	</query>			  
	
	<!-- 
	=======================
	   일간생산계획 분석(재구성)
	=======================
	-->
	
	<!-- 공장 리스트 -->
	<query id="daily_prod_analysis_new_plant_list">
	
			/* 공장 리스트 */
			SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			FROM    HRCHY HR
			WHERE   HR.LVL_TYPE = '공장'
			AND     HR.HID != '1300'
			ORDER   BY HR.HID
	
	</query>
	
	<!-- 공장별 버전 리스트 -->
	<query id="daily_prod_analysis_new_version_list">
	
			/* 공장별 버전 리스트(공장별 20개) */
			SELECT  EB.PLANT_ID, PV.VERSION, PV.SEQ, PV.STATUS  
	        FROM    PLAN_VERSION_LOG PV, ENGN_BAT_MST EB
	        WHERE   PV.MADE_TYPE != 'DE'
	        AND     EB.MADE_TYPE != 'DE'
	        AND     PV.PERIOD_TYPE = 'DAILY'
	        AND     PV.PERIOD_TYPE = EB.PERIOD_TYPE 
	        AND     PV.CAT_ID = EB.CAT_ID
	        AND     PV.SUB_CAT = EB.SUB_CAT
	        AND     PV.CAT_ID = 'PS'
	        AND  	PV.SEQ IS NOT NULL
	        ORDER  	BY EB.PLANT_ID, PV.VERSION DESC, PV.SEQ DESC
				
	</query>
	
	<!-- 물량에 대한 시간 정보(capa) -->
	<query id="capa_info_qty_per_hour">
	
			SELECT  DISTINCT 
			        SUBSTR(TO_CHAR(NUMTODSINTERVAL(
			                            REPLACE('$!{shift_qty}',',','')
			                                        /(QTY/(CAPA_MC/MC_QTY)),'HOUR')),9,11) AS H_QTY
			FROM    ITEM_CAPA
			WHERE   PLANT_ID = '$!{plant_id}'
			AND     PROC_ID = '$!{proc_id}'
			AND     ITEM_ID = '$!{item_id}'
			AND		MADE_TYPE != 'DE'
	
	</query>
	
	<!-- 작업장별, shift별 물량에 대한 시간 정보(capa) -->
	<query id="capa_info_proc_by_hour">
	
			SELECT  SUBSTR(TO_CHAR(NUMTODSINTERVAL(SUM(DECODE(H_QTY,NULL,0,H_QTY)),'HOUR')),9,11) AS H_QTY
			FROM    (        
			        SELECT  DISTINCT A.QTY/(B.QTY/(B.CAPA_MC/B.MC_QTY)) AS H_QTY        
			        FROM    (
			                $commonUtil.replaceAll("$!{item_qty_list}","''","'")
			                ) A,
			                ITEM_CAPA B
			        WHERE   B.PLANT_ID = '$!{plant_id}'
			        AND     B.PROC_ID = '$!{proc_id}'
			        AND		B.MADE_TYPE != 'DE'
			        AND     A.ITEM_ID = B.ITEM_ID
			        )			        
	
	</query>
	
	<!-- 라인 그룹 체크 -->
	<query id="prod_line_grp_check">
	
			/* 완제품 */
			SELECT  DS.PROC_ID||' '||DS.PROC_NAME
			FROM    (
			        SELECT  DISTINCT DS.PLANT_ID, DS.PROC_ID, VH.PROC_NAME
			        FROM    (			                
	                        SELECT  DISTINCT DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.PROC_ID, DS.ITEM_ID
	                        FROM    DAILY_SCH_PLAN_SHIFT DS
	                        WHERE   DS.CAT_ID = 'PS'   
	                        AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))			                       
			                ) DS, 
			                ITEM_MST IM,
			                (
			                SELECT  HTYPE PLANT_ID, HID PROC_ID, HID_NAME PROC_NAME, CAT
			                FROM    HRCHY
			                WHERE     MADE_TYPE != 'DE'
			                AND     LVL_TYPE = '작업장'
			                AND     CAT = '포장'
			                ) VH
			        WHERE   DS.PLANT_ID = VH.PLANT_ID
			        AND     DS.PROC_ID = VH.PROC_ID
			        AND     DS.ITEM_ID = IM.ITEM_ID
			        AND     IM.ITYPE = 'FERT'
			        ORDER   BY DS.PLANT_ID, DS.PROC_ID
			        ) DS,
			        (
			        SELECT  CAT02, CAT04
			        FROM    CODE_MST 
			        WHERE   CD_GRP = 'LINE_GRP'
			        ) CM
			WHERE   DS.PLANT_ID = CM.CAT02(+)
			AND     DS.PROC_ID = CM.CAT04(+)
			AND     CM.CAT04 IS NULL
	
	</query>
	
	<!-- 주차별 물량 검증 화면(popup)-->
	<query id="sc_11020_dailyProductionPlanAnalysisNewFaSchQtyChk_popup">
	
			SELECT  QTY_TYPE, SEQ, FA_W0, SC_W0, GAP_W0, FA_W1, SC_W1, GAP_W1, FA_W2, SC_W2, 
			        GAP_W2, FA_SUM, SC_SUM, GAP_SUM  
			FROM    V_FA_SCH_QTY_CHK
	
	</query>
	
	<!-- Excel Download -->
	<query id="sc_11020_dailyProductionPlanAnalysisNewExcelDown_popup">
	
            SELECT  DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL)                    PLANT_NAME ,    --1 공장           1  
                    DECODE(NO,1,TL.TEAM_NAME,2, NULL)                               TEAM_NAME,      --3 원가부문      2   
                    DECODE(NO,1,TL.PROC_ID, NULL)                                   PROC_ID,        --6 작업장 코드	3
                    DECODE(NO,1,TL.PROC_NAME, NULL)                                 PROC_NAME,      --7 작업장 명      4  
                    DECODE(NO,1,TL.ITEM_ID, NULL)                                   ITEM_ID,        --8 제품 코드       5 
                    DECODE(NO,1,TL.ITEM_NAME, NULL)                                 ITEM_NAME,      --9 제품 명         6 
                    DECODE(NO,1,TL.SPEC,NULL)                                       SPEC,           --10 규격           7  
                    DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL)                       LABOR_WOMAN,    --62 TO 여          8
                    DECODE(NO,1,TL.MTO_MTS_TYPE, NULL)                              MTO_MTS_TYPE,   --13 MTO/MTS        9         
                    DECODE(NO,1,TL.ORD_NO,NULL)                                     ORD_NO,         --14 수출(MTO) 오더 번호   10  
                    DECODE(NO,1,TL.ORD_ITEM_NO,NULL)                                ORD_ITEM_NO,    --14 오더 항목 번호   11
                    /* SHIFT별 수량 */                                                                                   
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01A,TL.D01A)),'999,999,999'))  D01A,           --15 월/조           12
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01B,TL.D01B)),'999,999,999'))  D01B,           --16 월/주           13
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01C,TL.D01C)),'999,999,999'))  D01C,           --17 월/야           14
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02A,TL.D02A)),'999,999,999'))  D02A,           --18 화/조           15
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02B,TL.D02B)),'999,999,999'))  D02B,           --19 화/주           16
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02C,TL.D02C)),'999,999,999'))  D02C,           --20 화/야           17
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03A,TL.D03A)),'999,999,999'))  D03A,           --21 수/조           18
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03B,TL.D03B)),'999,999,999'))  D03B,           --22 수/주           19
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03C,TL.D03C)),'999,999,999'))  D03C,           --23 수/야           20
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04A,TL.D04A)),'999,999,999'))  D04A,           --24 목/조           21
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04B,TL.D04B)),'999,999,999'))  D04B,           --25 목/주           22
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04C,TL.D04C)),'999,999,999'))  D04C,           --26 목/야           23
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05A,TL.D05A)),'999,999,999'))  D05A,           --27 금/조           24
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05B,TL.D05B)),'999,999,999'))  D05B,           --28 금/주           25
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05C,TL.D05C)),'999,999,999'))  D05C,           --29 금/야           26
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06A,TL.D06A)),'999,999,999'))  D06A,           --30 토/조           27
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06B,TL.D06B)),'999,999,999'))  D06B,           --31 토/주           28
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06C,TL.D06C)),'999,999,999'))  D06C,           --32 토/야           29
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07A,TL.D07A)),'999,999,999'))  D07A,           --33 일/조           30
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07B,TL.D07B)),'999,999,999'))  D07B,           --34 일/주           31
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07C,TL.D07C)),'999,999,999'))  D07C,           --35 일/야           32
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.TOT, TL.TOT)) ,'999,999,999'))  TOT,            --36 합계            33
                    DECODE(NO,1,TL.CAT04, NULL)                                     CAT04,          --59                 34
                    DECODE(NO,1,TL.RECIPE_TYPE, NULL)                               RECIPE_TYPE    --60                  35
            FROM    (
                    SELECT  DS.PLANT_ID, DS.PLANT_NAME, DS.TEAM_NAME, DS.PROC_ID, DS.PROC_NAME, 
                            DS.ITEM_ID, DS.ITEM_NAME, DS.SPEC, DS.LABOR_MAN, DS.LABOR_WOMAN, DS.VERSION, DS.SEQ, 
                            -- 0001 : MTO, 0002: MTS
                            DECODE(DS.MTO_MTS_TYPE, '0001','O', '0002', 'S') MTO_MTS_TYPE, DS.ORD_NO,
                            CASE WHEN DS.D01A = 0 THEN NULL ELSE DS.D01A END D01A, 
                            CASE WHEN DS.D01B = 0 THEN NULL ELSE DS.D01B END D01B,
                            CASE WHEN DS.D01C = 0 THEN NULL ELSE DS.D01C END D01C,
                            ------------------------------------------------
                            CASE WHEN DS.D02A = 0 THEN NULL ELSE DS.D02A END D02A, 
                            CASE WHEN DS.D02B = 0 THEN NULL ELSE DS.D02B END D02B,
                            CASE WHEN DS.D02C = 0 THEN NULL ELSE DS.D02C END D02C,
                            ------------------------------------------------
                            CASE WHEN DS.D03A = 0 THEN NULL ELSE DS.D03A END D03A, 
                            CASE WHEN DS.D03B = 0 THEN NULL ELSE DS.D03B END D03B,
                            CASE WHEN DS.D03C = 0 THEN NULL ELSE DS.D03C END D03C,
                            ------------------------------------------------
                            CASE WHEN DS.D04A = 0 THEN NULL ELSE DS.D04A END D04A, 
                            CASE WHEN DS.D04B = 0 THEN NULL ELSE DS.D04B END D04B,
                            CASE WHEN DS.D04C = 0 THEN NULL ELSE DS.D04C END D04C,
                            ------------------------------------------------
                            CASE WHEN DS.D05A = 0 THEN NULL ELSE DS.D05A END D05A, 
                            CASE WHEN DS.D05B = 0 THEN NULL ELSE DS.D05B END D05B,
                            CASE WHEN DS.D05C = 0 THEN NULL ELSE DS.D05C END D05C,
                            ------------------------------------------------
                            CASE WHEN DS.D06A = 0 THEN NULL ELSE DS.D06A END D06A, 
                            CASE WHEN DS.D06B = 0 THEN NULL ELSE DS.D06B END D06B,
                            CASE WHEN DS.D06C = 0 THEN NULL ELSE DS.D06C END D06C,
                            ------------------------------------------------
                            CASE WHEN DS.D07A = 0 THEN NULL ELSE DS.D07A END D07A, 
                            CASE WHEN DS.D07B = 0 THEN NULL ELSE DS.D07B END D07B,
                            CASE WHEN DS.D07C = 0 THEN NULL ELSE DS.D07C END D07C,
                            DS.TOT,                    
                            ------------------------------------------------
                            DS.TEAM_ID, NVL(DS.CAT04,DS.RECIPE_TYPE) CAT04, DS.RECIPE_TYPE, DS.ORD_ITEM_NO
                    FROM    (
                            SELECT  HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, HR.PROC_ID, HR.PROC_NAME, 
                                    DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, NE.LABOR_MAN, NE.LABOR_WOMAN, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, DS.ORD_NO                                                
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D01A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D01B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D01C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D02A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D02B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D02C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D03A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D03B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D03C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D04A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D04B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D04C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D05A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D05B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D05C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D06A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D06B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D06C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D07A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D07B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D07C                                                     
                                    ---------------------------------------------------------------------------------------------------------------------------
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)               
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) TOT
                                    ----------------------------------------------------------------------------------------------------------------------------
                                    , HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, DS.ORD_ITEM_NO
                            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                    ITEM_MST IM, 
                                    V_HRCHY_PROC HR,
                                    (
                                    -- DEFAULT : 차주, 차주 월요일
                                #if("$!{checked_weekly}" == "w0")
                                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                #elseif("$!{checked_weekly}" == "w2")
                                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                #else
                                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                #end                                  
                                    FROM   DUAL
                                    ) WK,
                                    (
                                    /* ITEM_CAPA 의 필요인원 정보 SELECT */
                                    SELECT  DISTINCT 
                                            PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                                    FROM    ITEM_CAPA
                                    WHERE   MADE_TYPE != 'DE'
                                    ORDER   BY PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                                    ) NE
                                #if( "$!{line_grp}" != "" )
                                    ,
                                    (
                                    SELECT  CM.CAT02 PLANT_ID, CM.CAT03 LINE_ID, CM.CAT04 PROC_ID
                                    FROM    CODE_MST CM
                                    WHERE   CM.CD_GRP = 'LINE_GRP'
                                    AND     CM.CAT01 IN ($commonUtil.replaceAll("${line_grp}","''","'"))
                                    ) CM  
                                #end 
                            WHERE   DS.CAT_ID = 'PS' 
                            AND     HR.CAT = '포장' 
                            AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
                            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                            AND     HR.PLANT_ID = DS.PLANT_ID
                            AND     DS.PROC_ID = HR.PROC_ID
                            AND     DS.ITEM_ID = IM.ITEM_ID
                            AND     IM.ITYPE = 'FERT'
                            AND     DS.PLANT_ID = NE.PLANT_ID(+)
                            AND     DS.ITEM_ID = NE.ITEM_ID(+)
                            AND     DS.PROC_ID = NE.PROC_ID(+)
                        #if( "$!{line_grp}" != "" )
                            AND     DS.PLANT_ID = CM.PLANT_ID
                            AND     DS.PROC_ID = CM.PROC_ID 
                        #end
                        #if("$!{domain}" == "DO")
                            /* 내수 제품*/
                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
                        #elseif("$!{domain}" == "EX")
                            /* 수출 제품*/
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                        #end 
                            GROUP   BY HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, HR.PROC_ID, HR.PROC_NAME, DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, 
                                    NE.LABOR_MAN, NE.LABOR_WOMAN, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, DS.ORD_NO, HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, 
                                    DS.ORD_ITEM_NO   
                            ) DS
                    ) TL,
                    (
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    ) SE               
              ----------------------------------------------------------------------------------------------------------------------------------
            GROUP   BY DECODE(NO,1,TL.PLANT_ID,2,NULL),    DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL), 
                       DECODE(NO,1,TL.TEAM_NAME,2, NULL),  DECODE(NO,1,TL.PROC_ID, NULL), 
                       DECODE(NO,1,TL.PROC_NAME, NULL),    DECODE(NO,1,TL.ITEM_ID, NULL),
                       DECODE(NO,1,TL.ITEM_NAME, NULL),    DECODE(NO,1,TL.SPEC,NULL),
                       DECODE(NO,1,TL.VERSION,NULL),       DECODE(NO,1,TL.SEQ,NULL),
                       DECODE(NO,1,TL.MTO_MTS_TYPE, NULL), DECODE(NO,1,TL.ORD_NO,NULL), 
                       NO, 								   DECODE(NO,1,TL.ORD_ITEM_NO,NULL),
                       DECODE(NO,1,TL.TEAM_ID, NULL),      DECODE(NO,1,TL.CAT04, NULL),
                       DECODE(NO,1,TL.RECIPE_TYPE, NULL),  DECODE(NO,1,TRUNC(TL.LABOR_MAN,1),NULL), 
                       DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL),
                       DECODE(NO,1,TL.ORD_ITEM_NO,NULL)
            ORDER   BY 1, 2, 3, 34, 35, 6
	
	</query>
	
	<!--  일간생산계획 분석(재구성) 조회 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list">
						
		#if("$!{plant_version}" == "")
			SELECT	PLANT_ID, VERSION
			FROM	DAILY_SCH_PLAN_SHIFT
			WHERE	1 = 0
		#else
            SELECT  SE.NO,                                                                          --0                  
                    DECODE(NO,1,TL.PLANT_ID,2,NULL)                                 PLANT_ID,       --1 공장코드         
                    DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL)                    PLANT_NAME ,    --2 공장             
                    DECODE(NO,1,TL.TEAM_NAME,2, NULL)                               TEAM_NAME,      --3 원가부문         
                    DECODE(NO,1,TL.PO_MAN,2, NULL)                                  PO_MAN,         --4 PO 남            
                    DECODE(NO,1,TL.PO_WOMAN,2, NULL)                                PO_WOMAN,       --5 PO 여            
                    DECODE(NO,1,TL.PROC_ID, NULL)                                   PROC_ID,        --6 작업장 코드      
                    DECODE(NO,1,TL.PROC_NAME, NULL)                                 PROC_NAME,      --7 작업장 명        
                    DECODE(NO,1,TL.ITEM_ID, NULL)                                   ITEM_ID,        --8 제품 코드        
                    DECODE(NO,1,TL.ITEM_NAME, NULL)                                 ITEM_NAME,      --9 제품 명          
                    DECODE(NO,1,TL.SPEC,NULL)                                       SPEC,           --10 규격             
                    DECODE(NO,1,TL.VERSION,NULL)                                    VERSION,        --11 버전            
                    DECODE(NO,1,TL.SEQ,NULL)                                        SEQ,            --12 SEQ             
                    DECODE(NO,1,TL.MTO_MTS_TYPE, NULL)                              MTO_MTS_TYPE,   --13 MTO/MTS         
                    DECODE(NO,1,TL.ORD_NO,NULL)                                     ORD_NO,         --14 수출(MTO) 오더 번호        
                    /* SHIFT별 수량 */                                                                                   
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01A,TL.D01A)),'999,999,999'))  D01A,           --15 월/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01B,TL.D01B)),'999,999,999'))  D01B,           --16 월/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01C,TL.D01C)),'999,999,999'))  D01C,           --17 월/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02A,TL.D02A)),'999,999,999'))  D02A,           --18 화/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02B,TL.D02B)),'999,999,999'))  D02B,           --19 화/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02C,TL.D02C)),'999,999,999'))  D02C,           --20 화/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03A,TL.D03A)),'999,999,999'))  D03A,           --21 수/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03B,TL.D03B)),'999,999,999'))  D03B,           --22 수/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03C,TL.D03C)),'999,999,999'))  D03C,           --23 수/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04A,TL.D04A)),'999,999,999'))  D04A,           --24 목/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04B,TL.D04B)),'999,999,999'))  D04B,           --25 목/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04C,TL.D04C)),'999,999,999'))  D04C,           --26 목/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05A,TL.D05A)),'999,999,999'))  D05A,           --27 금/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05B,TL.D05B)),'999,999,999'))  D05B,           --28 금/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05C,TL.D05C)),'999,999,999'))  D05C,           --29 금/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06A,TL.D06A)),'999,999,999'))  D06A,           --30 토/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06B,TL.D06B)),'999,999,999'))  D06B,           --31 토/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06C,TL.D06C)),'999,999,999'))  D06C,           --32 토/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07A,TL.D07A)),'999,999,999'))  D07A,           --33 일/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07B,TL.D07B)),'999,999,999'))  D07B,           --34 일/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07C,TL.D07C)),'999,999,999'))  D07C,           --35 일/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.TOT, TL.TOT)) ,'999,999,999'))  TOT,            --36 합계            
                    /* SHIFT별 연장 정보 */                                                                              
                    MAX(DECODE(NO,1,WD.BG01A, NULL))                                BG01A,          --37 월/조           
                    MAX(DECODE(NO,1,WD.BG01B, NULL))                                BG01B,          --38 월/주           
                    MAX(DECODE(NO,1,WD.BG01C, NULL))                                BG01C,          --39 월/야           
                    MAX(DECODE(NO,1,WD.BG02A, NULL))                                BG02A,          --40 화/조           
                    MAX(DECODE(NO,1,WD.BG02B, NULL))                                BG02B,          --41 화/주           
                    MAX(DECODE(NO,1,WD.BG02C, NULL))                                BG02C,          --42 화/야           
                    MAX(DECODE(NO,1,WD.BG03A, NULL))                                BG03A,          --43 수/조           
                    MAX(DECODE(NO,1,WD.BG03B, NULL))                                BG03B,          --44 수/주           
                    MAX(DECODE(NO,1,WD.BG03C, NULL))                                BG03C,          --45 수/야           
                    MAX(DECODE(NO,1,WD.BG04A, NULL))                                BG04A,          --46 목/조           
                    MAX(DECODE(NO,1,WD.BG04B, NULL))                                BG04B,          --47 목/주           
                    MAX(DECODE(NO,1,WD.BG04C, NULL))                                BG04C,          --48 목/야           
                    MAX(DECODE(NO,1,WD.BG05A, NULL))                                BG05A,          --49 금/조           
                    MAX(DECODE(NO,1,WD.BG05B, NULL))                                BG05B,          --50 금/주           
                    MAX(DECODE(NO,1,WD.BG05C, NULL))                                BG05C,          --51 금/야           
                    MAX(DECODE(NO,1,WD.BG06A, NULL))                                BG06A,          --52 토/조           
                    MAX(DECODE(NO,1,WD.BG06B, NULL))                                BG06B,          --53 토/주           
                    MAX(DECODE(NO,1,WD.BG06C, NULL))                                BG06C,          --54 토/야           
                    MAX(DECODE(NO,1,WD.BG07A, NULL))                                BG07A,          --55 일/조           
                    MAX(DECODE(NO,1,WD.BG07B, NULL))                                BG07B,          --56 일/주           
                    MAX(DECODE(NO,1,WD.BG07C, NULL))                                BG07C,          --57 일/야     
                    DECODE(NO,1,TL.TEAM_ID, NULL)                                   TEAM_ID,        --58
                    DECODE(NO,1,TL.CAT04, NULL)                                     CAT04,          --59
                    DECODE(NO,1,TL.RECIPE_TYPE, NULL)                               RECIPE_TYPE,    --60  
                    DECODE(NO,1,TRUNC(TL.LABOR_MAN,1),NULL)                         LABOR_MAN,      --61 TO 남
                    DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL)                       LABOR_WOMAN,    --62 TO 여
                    DECODE(NO,1,TL.ORD_ITEM_NO,NULL)								ORD_ITEM_NO,	--63
                    MAX(PO.SHIFT_1_PO)                   							SHIFT_1_PO,		--64 인원정보
                    MAX(PO.SHIFT_3_PO)                   							SHIFT_3_PO,		--65 인원정보
                    MAX(PO.SHIFT_5_PO)                   							SHIFT_5_PO,		--66 인원정보
                    MAX(TL.ITEM_ORDER)                                              ITEM_ORDER      --68 제품정렬순서
            FROM    (
                    SELECT  DS.PLANT_ID, DS.PLANT_NAME, DS.TEAM_NAME, DS.PO_MAN, DS.PO_WOMAN, DS.PROC_ID, DS.PROC_NAME, 
                            DS.ITEM_ID, DS.ITEM_NAME, DS.SPEC, DS.LABOR_MAN, DS.LABOR_WOMAN, DS.VERSION, DS.SEQ, 
                            -- 0001 : MTO, 0002: MTS
                            DECODE(DS.MTO_MTS_TYPE, '0001','O', '0002', 'S') MTO_MTS_TYPE, DS.ORD_NO,
                            CASE WHEN DS.D01A = 0 THEN NULL ELSE DS.D01A END D01A, 
                            CASE WHEN DS.D01B = 0 THEN NULL ELSE DS.D01B END D01B,
                            CASE WHEN DS.D01C = 0 THEN NULL ELSE DS.D01C END D01C,
                            ------------------------------------------------
                            CASE WHEN DS.D02A = 0 THEN NULL ELSE DS.D02A END D02A, 
                            CASE WHEN DS.D02B = 0 THEN NULL ELSE DS.D02B END D02B,
                            CASE WHEN DS.D02C = 0 THEN NULL ELSE DS.D02C END D02C,
                            ------------------------------------------------
                            CASE WHEN DS.D03A = 0 THEN NULL ELSE DS.D03A END D03A, 
                            CASE WHEN DS.D03B = 0 THEN NULL ELSE DS.D03B END D03B,
                            CASE WHEN DS.D03C = 0 THEN NULL ELSE DS.D03C END D03C,
                            ------------------------------------------------
                            CASE WHEN DS.D04A = 0 THEN NULL ELSE DS.D04A END D04A, 
                            CASE WHEN DS.D04B = 0 THEN NULL ELSE DS.D04B END D04B,
                            CASE WHEN DS.D04C = 0 THEN NULL ELSE DS.D04C END D04C,
                            ------------------------------------------------
                            CASE WHEN DS.D05A = 0 THEN NULL ELSE DS.D05A END D05A, 
                            CASE WHEN DS.D05B = 0 THEN NULL ELSE DS.D05B END D05B,
                            CASE WHEN DS.D05C = 0 THEN NULL ELSE DS.D05C END D05C,
                            ------------------------------------------------
                            CASE WHEN DS.D06A = 0 THEN NULL ELSE DS.D06A END D06A, 
                            CASE WHEN DS.D06B = 0 THEN NULL ELSE DS.D06B END D06B,
                            CASE WHEN DS.D06C = 0 THEN NULL ELSE DS.D06C END D06C,
                            ------------------------------------------------
                            CASE WHEN DS.D07A = 0 THEN NULL ELSE DS.D07A END D07A, 
                            CASE WHEN DS.D07B = 0 THEN NULL ELSE DS.D07B END D07B,
                            CASE WHEN DS.D07C = 0 THEN NULL ELSE DS.D07C END D07C,
                            DS.TOT,                    
                            ------------------------------------------------
                            DS.TEAM_ID, NVL(DS.CAT04,DS.RECIPE_TYPE) CAT04, DS.RECIPE_TYPE, DS.ORD_ITEM_NO, DS.ITEM_ORDER
                    FROM    (
                            SELECT  HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, CO.PO_MAN, CO.PO_WOMAN, HR.PROC_ID, HR.PROC_NAME, 
                                    DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, NE.LABOR_MAN, NE.LABOR_WOMAN, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, DS.ORD_NO                                                
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D01A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D01B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D01C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D02A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D02B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D02C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D03A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D03B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D03C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D04A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D04B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D04C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D05A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D05B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D05C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D06A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D06B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D06C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D07A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D07B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D07C                                                     
                                    ---------------------------------------------------------------------------------------------------------------------------
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)               
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) TOT
                                    ----------------------------------------------------------------------------------------------------------------------------
                                    , HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, DS.ORD_ITEM_NO, HR.ITEM_ORDER
                            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                    ITEM_MST IM, 
                                    SCH_ITEM_RANK HR,
                                    (
                                    -- DEFAULT : 차주, 차주 월요일
                                #if("$!{checked_weekly}" == "w0")
                                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                #elseif("$!{checked_weekly}" == "w2")
                                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                #else
                                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                #end                                  
                                    FROM   DUAL
                                    ) WK,
                                    (
                                    /* 
                                        원가부문 기준으로 인력제약정보 SELECT 
                                        수정
                                        --------------------------------------
                                        원가부문별 PO 인원 합계
                                    */
                                    SELECT  DD.PLANT_ID, DD.PLANT_NAME, DD.COST_ID, DD.COST_NAME, 
                                            --SUM(NVL(TO_MAN, 0)) TO_MAN, SUM(NVL(TO_WOMAN, 0)) TO_WOMAN
                                            SUM(PO_MAN) PO_MAN, SUM(PO_WOMAN) PO_WOMAN
                                    FROM    (
                                            /*
                                                작업장별 인원제약 맵핑
                                            */      
                                            SELECT  /*+ INDEX(LC LABOR_CONSTRAINT_PK) */
                                                    LC.PLANT_ID, CO.PLANT_NAME, 
                                                    CO.COST_ID, CO.COST_NAME, 
                                                    CO.LINE_ID, CO.LINE_NAME, 
                                                    LC.PROC_ID, CO.PROC_NAME, 
                                                    LC.TO_MAN, LC.TO_WOMAN, 
                                                    LC.PO_MAN, LC.PO_WOMAN
                                            FROM    LABOR_CONSTRAINT LC,
                                                    (
                                                    /*
                                                    공장, 원가부문, 라인, 작업장 리스트
                                                    */
                                                    SELECT  VH.PLANT_ID, VH.PLANT_NAME, 
                                                            VH.TEAM_ID      AS COST_ID, 
                                                            VH.TEAM_NAME    AS COST_NAME, 
                                                            VH.LINE_ID, VH.LINE_NAME,
                                                            VH.PROC_ID, VH.PROC_NAME
                                                    FROM    V_HRCHY_PROC VH
                                                    ORDER   BY VH.PLANT_ID, VH.TEAM_ID, VH.LINE_ID, VH.PROC_ID
                                                    ) CO
                                            WHERE   LC.PLANT_ID = CO.PLANT_ID
                                            AND     LC.PROC_ID  = CO.PROC_ID
                                            ORDER   BY LC.PLANT_ID, CO.LINE_ID, LC.PROC_ID
                                            ) DD
                                    GROUP   BY DD.PLANT_ID, DD.PLANT_NAME, DD.COST_ID, DD.COST_NAME
                                    ORDER   BY DD.PLANT_ID, DD.COST_ID
                                    ) CO,
                                    (
                                    /* ITEM_CAPA 의 필요인원 정보 SELECT */
                                    SELECT  DISTINCT 
                                            PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                                    FROM    ITEM_CAPA
                                    WHERE	MADE_TYPE != 'DE'
                                    ORDER   BY PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                                    ) NE
                                #if( "$!{line_grp}" != "" )
                                    ,
                                    (
                                    SELECT  CM.CAT02 PLANT_ID, CM.CAT03 LINE_ID, CM.CAT04 PROC_ID
                                    FROM    CODE_MST CM
                                    WHERE   CM.CD_GRP = 'LINE_GRP'
                                    AND     CM.CAT01 IN ($commonUtil.replaceAll("${line_grp}","''","'"))
                                    ) CM  
                                #end                          
                            WHERE   DS.CAT_ID = 'PS' 
                            AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
                            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                            AND     DS.CAT_ID   = HR.CAT_ID
                            AND     DS.PLANT_ID = HR.PLANT_ID
                            AND     DS.LINE_ID  = HR.LINE_ID
                            AND     DS.PROC_ID  = HR.PROC_ID
                            AND     DS.ITEM_ID  = HR.ITEM_ID
                            AND     DS.ITEM_ID  = IM.ITEM_ID
                        #if("$!{checked_multi}" == "visual")
                            AND     IM.MULTI_FLAG = 'V'
                        #elseif("$!{checked_multi}" == "multi")
                            AND     IM.MULTI_FLAG = 'M'
                        #elseif("$!{checked_multi}" == "normal")
                            AND     IM.MULTI_FLAG IS NULL
                        #end
                            AND     IM.ITYPE      = 'FERT'
                            AND     HR.PLANT_ID   = CO.PLANT_ID(+)
                            AND     HR.TEAM_ID    = CO.COST_ID(+)
                            AND     DS.PLANT_ID   = NE.PLANT_ID(+)
                            AND     DS.ITEM_ID    = NE.ITEM_ID(+)
                            AND     DS.PROC_ID    = NE.PROC_ID(+)
                        #if( "$!{line_grp}" != "" )
                            AND     DS.PLANT_ID   = CM.PLANT_ID
                            AND     DS.PROC_ID    = CM.PROC_ID 
                        #end
                        #if("$!{domain}" == "DO")
                            /* 내수 제품*/
                            AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
                        #elseif("$!{domain}" == "EX")
                            /* 수출 제품*/
                            AND     IM.MATERIAL_GROUP &gt;= '5K000'
                            AND     IM.MATERIAL_GROUP &lt;= '5S999'
                        #end               
                            GROUP   BY HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, CO.PO_MAN, CO.PO_WOMAN, HR.PROC_ID, HR.PROC_NAME, DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, 
                                    NE.LABOR_MAN, NE.LABOR_WOMAN, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, DS.ORD_NO, HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, 
                                    DS.ORD_ITEM_NO, HR.ITEM_ORDER      
                            ) DS                    
                    ) TL,
                    (
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    ) SE,
                    (
                    -- O : 연장 , N : 일반
                    SELECT  PLANT_ID, PROC_ID,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07C
                            -------------------------------------------------------------------------------------------------
                    FROM    WORK_DIARY WD,
                            (
                            -- DEFAULT : 차주, 차주 월요일
                        #if("$!{checked_weekly}" == "w0")
                            SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                        #elseif("$!{checked_weekly}" == "w2")
                            SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                        #else
                            SELECT NEXT_DAY(SYSDATE,2) MON --차주
                        #end 
                            FROM   DUAL
                            ) WK
                    WHERE   WD.DUTY_DATE &gt;= TO_CHAR(WK.MON,'YYYYMMDD')
                    AND     WD.DUTY_DATE &lt;= TO_CHAR(WK.MON+6,'YYYYMMDD')
                    GROUP   BY WD.PLANT_ID, WD.PROC_ID
                    ) WD,
                    (
                    -- DEFAULT : 차주, 차주 월요일
                #if("$!{checked_weekly}" == "w0")
                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                #elseif("$!{checked_weekly}" == "w2")
                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                #else
                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                #end 
                    FROM   DUAL
                    ) WK,
                    (
                    SELECT  WD.PLANT_ID, WD.PROC_ID, WD.DUTY_DATE,
                            MAX(CASE
                            WHEN SUBSTR(WD.SHIFT_ID,1,3) IN ('JOG','OTD','OTJ')
                            THEN    WD.DUTY_TEAM||'('||PA.PO_NUM||')'
                            ELSE NULL
                            END)     SHIFT_1_PO,
                            MAX(CASE
                            WHEN SUBSTR(WD.SHIFT_ID,1,3) = 'DAY'
                            THEN    WD.DUTY_TEAM||'('||PA.PO_NUM||')'
                            ELSE NULL
                            END)     SHIFT_3_PO,
                            MAX(CASE
                            WHEN SUBSTR(WD.SHIFT_ID,1,3) IN ('NIG','OTN')
                            THEN    WD.DUTY_TEAM||'('||PA.PO_NUM||')'
                            ELSE NULL
                            END)     SHIFT_5_PO
                    FROM    WORK_DIARY WD,
                            V_PROC_PO_ABC PA
                    WHERE   WD.PLANT_ID = PA.PLANT_ID
                    AND     WD.PROC_ID = PA.PROC_ID
                    AND     WD.DUTY_TEAM = PA.DUTY_TEAM 
                    GROUP   BY WD.PLANT_ID, WD.PROC_ID, WD.DUTY_DATE
                    ) PO
            WHERE   TL.PLANT_ID = WD.PLANT_ID
            AND     TL.PROC_ID = WD.PROC_ID 
            AND     TL.PLANT_ID = PO.PLANT_ID(+)
            AND     TL.TEAM_ID = PO.PROC_ID(+)
            AND     PO.DUTY_DATE = TO_CHAR(WK.MON,'YYYYMMDD')              
              ----------------------------------------------------------------------------------------------------------------------------------
            GROUP   BY DECODE(NO,1,TL.PLANT_ID,2,NULL),   DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL), 
                       DECODE(NO,1,TL.TEAM_NAME,2, NULL), DECODE(NO,1,TL.PO_MAN,2, NULL),
                       DECODE(NO,1,TL.PO_WOMAN,2, NULL),  DECODE(NO,1,TL.PROC_ID, NULL), 
                       DECODE(NO,1,TL.PROC_NAME, NULL),   DECODE(NO,1,TL.ITEM_ID, NULL),
                       DECODE(NO,1,TL.ITEM_NAME, NULL),   DECODE(NO,1,TL.SPEC,NULL),
                       DECODE(NO,1,TL.VERSION,NULL),      DECODE(NO,1,TL.SEQ,NULL),
                       DECODE(NO,1,TL.MTO_MTS_TYPE, NULL),DECODE(NO,1,TL.ORD_NO,NULL), NO,
                       DECODE(NO,1,TL.TEAM_ID, NULL),
                       DECODE(NO,1,TL.CAT04, NULL),
                       DECODE(NO,1,TL.RECIPE_TYPE, NULL),
                       DECODE(NO,1,TRUNC(TL.LABOR_MAN,1),NULL), DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL),
                       DECODE(NO,1,TL.ORD_ITEM_NO,NULL)
            --ORDER   BY 2, 60, 7, 58, 59, 10 	
            ORDER   BY 2, 59, 7, 68		
		#end
			
	</query>	
	
	<!-- -->
	<query id="weekly_3_start_end_date">
	
            /*
                W0_ : 당주 
                W1_ : 차주 
                W2_ : 차차주                 
                
                TRUNC(date, 'D') : date(DATE 형식)의 해당 주의 첫째날(일요일) 반환(DATE 형식)
                SYSDATE-1 : SYSDATE가 일요일인 경우 해당 일자가 그 주의 첫째날로 인식하므로
                            하루를 빼서 계산함. 
                            EX) 2008-11-23(일요일) = 2008-11-23(일요일) 반환 
                                원하는 결과 값은 2008-11-23(일요일) = 2008-11-17(월요일)
                TRUNC(SYSDATE-1,'D')+1 : +1를 하는 이유는 반환 요일이 일요일이라서 하루를 더해주어야 
                                         월요일이 됨.
                TRUNC(SYSDATE-1,'D')+1+(0*7)+6 : +6은 해당주의 마지막날(일요일)을 구하기 위해서
                (0*7) : 당주
                (1*7) : 차주
                (2*7) : 차차주                            
            */
            SELECT  TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+0, 'YYYY MM/DD(DY)')    AS W0_MON, --0
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+1, 'YYYY MM/DD(DY)')    AS W0_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+2, 'YYYY MM/DD(DY)')    AS W0_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+3, 'YYYY MM/DD(DY)')    AS W0_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+4, 'YYYY MM/DD(DY)')    AS W0_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+5, 'YYYY MM/DD(DY)')    AS W0_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+6, 'YYYY MM/DD(DY)')    AS W0_SUN, --6
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+0, 'YYYY MM/DD(DY)')    AS W1_MON, --7
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+1, 'YYYY MM/DD(DY)')    AS W1_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+2, 'YYYY MM/DD(DY)')    AS W1_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+3, 'YYYY MM/DD(DY)')    AS W1_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+4, 'YYYY MM/DD(DY)')    AS W1_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+5, 'YYYY MM/DD(DY)')    AS W1_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+6, 'YYYY MM/DD(DY)')    AS W1_SUN, --13
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+0, 'YYYY MM/DD(DY)')    AS W2_MON, --14
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+1, 'YYYY MM/DD(DY)')    AS W2_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+2, 'YYYY MM/DD(DY)')    AS W2_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+3, 'YYYY MM/DD(DY)')    AS W2_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+4, 'YYYY MM/DD(DY)')    AS W2_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+5, 'YYYY MM/DD(DY)')    AS W2_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+6, 'YYYY MM/DD(DY)')    AS W2_SUN,  --20
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+0, 'MM/DD(DY)')||'~'||TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+6, 'MM/DD(DY)') as W0,    --21
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+0, 'MM/DD(DY)')||'~'||TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+6, 'MM/DD(DY)') as W1,    --22
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+0, 'MM/DD(DY)')||'~'||TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+6, 'MM/DD(DY)') as W2     --23
            FROM    DUAL
	
	</query>
	
	<query id="weekly_3_start_end_date2">
	
		#if("$!{checked_weekly}" == "w0" )
            SELECT  TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+0, 'YYYY MM/DD(DY)')    AS W0_MON, --0
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+1, 'YYYY MM/DD(DY)')    AS W0_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+2, 'YYYY MM/DD(DY)')    AS W0_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+3, 'YYYY MM/DD(DY)')    AS W0_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+4, 'YYYY MM/DD(DY)')    AS W0_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+5, 'YYYY MM/DD(DY)')    AS W0_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(0*7)+6, 'YYYY MM/DD(DY)')    AS W0_SUN  --20
            FROM    DUAL
        #elseif("$!{checked_weekly}" == "w2" )
            SELECT  TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+0, 'YYYY MM/DD(DY)')    AS W2_MON, --14
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+1, 'YYYY MM/DD(DY)')    AS W2_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+2, 'YYYY MM/DD(DY)')    AS W2_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+3, 'YYYY MM/DD(DY)')    AS W2_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+4, 'YYYY MM/DD(DY)')    AS W2_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+5, 'YYYY MM/DD(DY)')    AS W2_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(2*7)+6, 'YYYY MM/DD(DY)')    AS W2_SUN  --20
            FROM    DUAL                        
        #else    
            SELECT  TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+0, 'YYYY MM/DD(DY)')    AS W1_MON, --7
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+1, 'YYYY MM/DD(DY)')    AS W1_TUE,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+2, 'YYYY MM/DD(DY)')    AS W1_WED,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+3, 'YYYY MM/DD(DY)')    AS W1_THU,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+4, 'YYYY MM/DD(DY)')    AS W1_FRI,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+5, 'YYYY MM/DD(DY)')    AS W1_SAT,
                    TO_CHAR(TRUNC(SYSDATE-1,'D')+1+(1*7)+6, 'YYYY MM/DD(DY)')    AS W1_SUN  --20
            FROM    DUAL
        #end	
	
	</query>
	
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_sp">
		call SP_11020_DailyProductionPlan('$!{_user_id}')	
	</query>

	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_temp_save" fix="_user_id" iterator="plant_id version proc_id item_id ord_no ord_item_no shift_1_mon_prod_dates shift_1_mon_shift_type shift_1_mon shift_3_mon_prod_dates shift_3_mon_shift_type shift_3_mon shift_5_mon_prod_dates shift_5_mon_shift_type shift_5_mon shift_1_tue_prod_dates shift_1_tue_shift_type shift_1_tue shift_3_tue_prod_dates shift_3_tue_shift_type shift_3_tue shift_5_tue_prod_dates shift_5_tue_shift_type shift_5_tue shift_1_wed_prod_dates shift_1_wed_shift_type shift_1_wed shift_3_wed_prod_dates shift_3_wed_shift_type shift_3_wed shift_5_wed_prod_dates shift_5_wed_shift_type shift_5_wed shift_1_thu_prod_dates shift_1_thu_shift_type shift_1_thu shift_3_thu_prod_dates shift_3_thu_shift_type shift_3_thu shift_5_thu_prod_dates shift_5_thu_shift_type shift_5_thu shift_1_fri_prod_dates shift_1_fri_shift_type shift_1_fri shift_3_fri_prod_dates shift_3_fri_shift_type shift_3_fri shift_5_fri_prod_dates shift_5_fri_shift_type shift_5_fri shift_1_sat_prod_dates shift_1_sat_shift_type shift_1_sat shift_3_sat_prod_dates shift_3_sat_shift_type shift_3_sat shift_5_sat_prod_dates shift_5_sat_shift_type shift_5_sat shift_1_sun_prod_dates shift_1_sun_shift_type shift_1_sun shift_3_sun_prod_dates shift_3_sun_shift_type shift_3_sun shift_5_sun_prod_dates shift_5_sun_shift_type shift_5_sun mon_shift1_check_flag tue_shift1_check_flag wed_shift1_check_flag thu_shift1_check_flag fri_shift1_check_flag sat_shift1_check_flag sun_shift1_check_flag mon_shift3_check_flag tue_shift3_check_flag wed_shift3_check_flag thu_shift3_check_flag fri_shift3_check_flag sat_shift3_check_flag sun_shift3_check_flag mon_shift5_check_flag tue_shift5_check_flag wed_shift5_check_flag thu_shift5_check_flag fri_shift5_check_flag sat_shift5_check_flag sun_shift5_check_flag">

        insert into DAILY_SCH_PLAN_MATRIX
                    (
                        PLANT_ID    
                       ,VERSION     
                       ,PROC_ID     
                       ,ITEM_ID     
                       ,PROD_DATES  
                       ,SHIFT_TYPE  
                       ,SHIFT_QTY   
                       ,ORD_NO      
                       ,ORD_ITEM_NO 
                       ,MADE_DTTM   
                       ,MADE_BY     
                    )
                    --월(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_mon_shift_type}' ,replace('$!{shift_1_mon}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_mon_shift_type}' ,replace('$!{shift_3_mon}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_mon_shift_type}' ,replace('$!{shift_5_mon}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --화(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_tue_shift_type}' ,replace('$!{shift_1_tue}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_tue_shift_type}' ,replace('$!{shift_3_tue}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_tue_shift_type}' ,replace('$!{shift_5_tue}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --수(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_wed_shift_type}' ,replace('$!{shift_1_wed}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_wed_shift_type}' ,replace('$!{shift_3_wed}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_wed_shift_type}' ,replace('$!{shift_5_wed}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --목(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_thu_shift_type}' ,replace('$!{shift_1_thu}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_thu_shift_type}' ,replace('$!{shift_3_thu}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_thu_shift_type}' ,replace('$!{shift_5_thu}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --금(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_fri_shift_type}' ,replace('$!{shift_1_fri}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_fri_shift_type}' ,replace('$!{shift_3_fri}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_fri_shift_type}' ,replace('$!{shift_5_fri}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --토(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_sat_shift_type}' ,replace('$!{shift_1_sat}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_sat_shift_type}' ,replace('$!{shift_3_sat}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_sat_shift_type}' ,replace('$!{shift_5_sat}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --일(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_sun_shift_type}' ,replace('$!{shift_1_sun}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_sun_shift_type}' ,replace('$!{shift_3_sun}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_sun_shift_type}' ,replace('$!{shift_5_sun}',',','') ,'${ord_no}'  ,'${ord_item_no}' ,SYSDATE ,'$!{_user_id}' from DUAL 
	</query>        
	
                    

	
	<!-- 수량 변경 -->
	<!-- 02.DAILY_SCH_PLAN_SHIFT 테이블에 변경된 수량 UPDATE -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_save_02" fix="_user_id" iterator="plant_id version proc_id item_id ord_no ord_item_no shift_1_mon_prod_dates shift_1_mon_shift_type shift_1_mon shift_3_mon_prod_dates shift_3_mon_shift_type shift_3_mon shift_5_mon_prod_dates shift_5_mon_shift_type shift_5_mon shift_1_tue_prod_dates shift_1_tue_shift_type shift_1_tue shift_3_tue_prod_dates shift_3_tue_shift_type shift_3_tue shift_5_tue_prod_dates shift_5_tue_shift_type shift_5_tue shift_1_wed_prod_dates shift_1_wed_shift_type shift_1_wed shift_3_wed_prod_dates shift_3_wed_shift_type shift_3_wed shift_5_wed_prod_dates shift_5_wed_shift_type shift_5_wed shift_1_thu_prod_dates shift_1_thu_shift_type shift_1_thu shift_3_thu_prod_dates shift_3_thu_shift_type shift_3_thu shift_5_thu_prod_dates shift_5_thu_shift_type shift_5_thu shift_1_fri_prod_dates shift_1_fri_shift_type shift_1_fri shift_3_fri_prod_dates shift_3_fri_shift_type shift_3_fri shift_5_fri_prod_dates shift_5_fri_shift_type shift_5_fri shift_1_sat_prod_dates shift_1_sat_shift_type shift_1_sat shift_3_sat_prod_dates shift_3_sat_shift_type shift_3_sat shift_5_sat_prod_dates shift_5_sat_shift_type shift_5_sat shift_1_sun_prod_dates shift_1_sun_shift_type shift_1_sun shift_3_sun_prod_dates shift_3_sun_shift_type shift_3_sun shift_5_sun_prod_dates shift_5_sun_shift_type shift_5_sun mon_shift1_check_flag tue_shift1_check_flag wed_shift1_check_flag thu_shift1_check_flag fri_shift1_check_flag sat_shift1_check_flag sun_shift1_check_flag mon_shift3_check_flag tue_shift3_check_flag wed_shift3_check_flag thu_shift3_check_flag fri_shift3_check_flag sat_shift3_check_flag sun_shift3_check_flag mon_shift5_check_flag tue_shift5_check_flag wed_shift5_check_flag thu_shift5_check_flag fri_shift5_check_flag sat_shift5_check_flag sun_shift5_check_flag">
	
            UPDATE  /*+ bypass_ujvc*/
                    (
                    SELECT  DT.SHIFT_QTY, ND.NEW_SHIFT_QTY,
                            DT.MADE_TYPE, ND.NEW_MADE_TYPE,
                            DT.MADE_DTTM, ND.NEW_MADE_DTTM,
                            DT.MADE_BY, ND.NEW_MADE_BY
                    FROM    (        
                            SELECT  DT.PLANT_ID, DT.VERSION, DT.PROC_ID, DT.ITEM_ID, DT.PROD_DATES, DT.SHIFT_TYPE, DT.SHIFT_QTY, DT.ORD_NO, DT.ORD_ITEM_NO,
                            		DT.MADE_TYPE, DT.MADE_DTTM, DT.MADE_BY
                            FROM    DAILY_SCH_PLAN_SHIFT DT
                            WHERE   CAT_ID = 'PS'
                            AND     PLANT_ID = '$!{plant_id}'
                            AND     VERSION = '$!{version}'
                            ) DT,
                            (
                            ----------------------------------------------------------------------------------
                            -- 월/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_1_mon_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_mon}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{mon_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 월/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_mon_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_mon}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{mon_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 월/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_mon_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_mon}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{mon_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------
                            -- 화/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_1_tue_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_tue}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{tue_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 화/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_tue_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_tue}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{tue_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 화/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_tue_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_tue}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{tue_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------
                            -- 수/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES,    
                                    '$!{shift_1_wed_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_wed}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{wed_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 수/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_wed_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_wed}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{wed_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 수/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_wed_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_wed}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{wed_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------
                            -- 목/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES,   
                                    '$!{shift_1_thu_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_thu}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{thu_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 목/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_thu_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_thu}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{thu_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 목/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_thu_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_thu}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{thu_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------
                            -- 금/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES,   
                                    '$!{shift_1_fri_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_fri}',',','') AS NEW_SHIFT_QTY, 
                                     'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{fri_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 금/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_fri_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_fri}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{fri_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 금/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_fri_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_fri}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{fri_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------
                            -- 토/조
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_1_sat_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_sat}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sat_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 토/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_sat_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_sat}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sat_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 토/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_sat_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_sat}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sat_shift5_check_flag}' = 'Y'
                            UNION   ALL
                            -----------------------------------------------------------------------------------                        
                            -- 일/조                                                                                                   
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,                    
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_1_sun_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_1_sun}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sun_shift1_check_flag}' = 'Y'
                            UNION   ALL
                            -- 일/주
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_3_sun_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_3_sun}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sun_shift3_check_flag}' = 'Y'
                            UNION   ALL
                            -- 일/야
                            SELECT  '$!{plant_id}' AS PLANT_ID, '$!{version}' AS VERSION, '$!{proc_id}' AS PROC_ID,
                                    '$!{item_id}' AS ITEM_ID, 
                                    TO_CHAR(TO_DATE('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES, 
                                    '$!{shift_5_sun_shift_type}' AS SHIFT_TYPE,
                                    REPLACE('$!{shift_5_sun}',',','') AS NEW_SHIFT_QTY, 
                                    'UP' AS NEW_MADE_TYPE,
                                    SYSDATE AS NEW_MADE_DTTM,
                                    '$!{_user_id}' AS NEW_MADE_BY
                            FROM    DUAL
                            WHERE   '$!{sun_shift5_check_flag}' = 'Y'
                            ) ND
                    WHERE   DT.PLANT_ID = ND.PLANT_ID
                    AND     DT.VERSION = ND.VERSION
                    AND     DT.PROC_ID = ND.PROC_ID
                    AND     DT.ITEM_ID = ND.ITEM_ID
                    AND     DT.PROD_DATES = ND.PROD_DATES
                    AND     DT.SHIFT_TYPE = ND.SHIFT_TYPE
                    [AND	DT.ORD_NO = '${ord_no}']
                    [AND	DT.ORD_ITEM_NO = '${ord_item_no}']
                    )
            SET     SHIFT_QTY = NEW_SHIFT_QTY,
                    MADE_TYPE = NEW_MADE_TYPE,
                    MADE_DTTM = NEW_MADE_DTTM,
                    MADE_BY = NEW_MADE_BY       
	
	</query>
	
	<!-- 02_1. DAILY_SCH_PLAN_SHIFT 테이블에 신규 수량 INSERT -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_save_02_1" fix="cat_id _user_id plant_version" iterator="plant_id version seq proc_id item_id ord_no ord_item_no shift_1_mon_prod_dates shift_1_mon_shift_type shift_1_mon shift_3_mon_prod_dates shift_3_mon_shift_type shift_3_mon shift_5_mon_prod_dates shift_5_mon_shift_type shift_5_mon shift_1_tue_prod_dates shift_1_tue_shift_type shift_1_tue shift_3_tue_prod_dates shift_3_tue_shift_type shift_3_tue shift_5_tue_prod_dates shift_5_tue_shift_type shift_5_tue shift_1_wed_prod_dates shift_1_wed_shift_type shift_1_wed shift_3_wed_prod_dates shift_3_wed_shift_type shift_3_wed shift_5_wed_prod_dates shift_5_wed_shift_type shift_5_wed shift_1_thu_prod_dates shift_1_thu_shift_type shift_1_thu shift_3_thu_prod_dates shift_3_thu_shift_type shift_3_thu shift_5_thu_prod_dates shift_5_thu_shift_type shift_5_thu shift_1_fri_prod_dates shift_1_fri_shift_type shift_1_fri shift_3_fri_prod_dates shift_3_fri_shift_type shift_3_fri shift_5_fri_prod_dates shift_5_fri_shift_type shift_5_fri shift_1_sat_prod_dates shift_1_sat_shift_type shift_1_sat shift_3_sat_prod_dates shift_3_sat_shift_type shift_3_sat shift_5_sat_prod_dates shift_5_sat_shift_type shift_5_sat shift_1_sun_prod_dates shift_1_sun_shift_type shift_1_sun shift_3_sun_prod_dates shift_3_sun_shift_type shift_3_sun shift_5_sun_prod_dates shift_5_sun_shift_type shift_5_sun mon_shift1_check_flag tue_shift1_check_flag wed_shift1_check_flag thu_shift1_check_flag fri_shift1_check_flag sat_shift1_check_flag sun_shift1_check_flag mon_shift3_check_flag tue_shift3_check_flag wed_shift3_check_flag thu_shift3_check_flag fri_shift3_check_flag sat_shift3_check_flag sun_shift3_check_flag mon_shift5_check_flag tue_shift5_check_flag wed_shift5_check_flag thu_shift5_check_flag fri_shift5_check_flag sat_shift5_check_flag sun_shift5_check_flag">
	
            INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
                    PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, PRIORITY, ORD_NO, ORD_ITEM_NO, 
                    PROJECT_CD, GRP_WO_ID, PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, 
                    RESOURCESET_ID, WO_END)
            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, 
                    DS.WO_ID||LPAD(MX.MX_SEQ + RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION 
                                                           ORDER BY DS.ITEM_ID, DS.WO_ID)
                                  ,8,'0') AS WO_ID, 
                    DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DS.PROD_DATES,
                    DS.SHIFT_TYPE,
                    DS.START_DTTM,
                    DS.END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD,
                    DS.GRP_WO_ID||LPAD(MX.MX_SEQ + RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION 
                                                               ORDER BY DS.ITEM_ID, DS.WO_ID)
                                      ,8,'0') AS GRP_WO_ID, 
                    DS.PROD_VER,
                    DS.MADE_TYPE,
                    DS.MADE_DTTM,
                    DS.MADE_BY,
                    DS.SCH_TYPE,
                    DS.ROUTE_ID,
                    DS.RESOURCESET_ID,
                    DS.WO_END
            FROM    (
        		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
        		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
        		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
        		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
        		                    CASE
        		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
        		                    THEN    
        		                            DS.END_TIME
        		                    ELSE
        		                            WD.END_TIME
        		                    END                                                         AS END_DTTM,
        		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
        		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
        		                    'AD'                                                        AS MADE_TYPE,
        		                    SYSDATE                                                     AS MADE_DTTM,
        		                    '$!{_user_id}'                                              AS MADE_BY,
        		                    ''                                                          AS SCH_TYPE,
        		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
        		                    ''                                                          AS RESOURCESET_ID,
                            		DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
        		            FROM    (
            		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
            		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
            		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
            		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                                B.OPER_ID
            		                    FROM    (
            		                                ----------------------------------------------------------------------------------------------------------------------------------------------------
            		                                --월요일 
                                		            --조
                		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
                		                                    '$!{plant_id}'                              AS PLANT_ID,
                		                                    '$!{version}'                               AS VERSION,
                		                                    '$!{seq}'                                   AS SEQ,
                		                                    /* WO_ID 생성 */
                		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_mon_shift_type}_' AS WO_ID,
                		                                    '$!{item_id}'                               AS ITEM_ID,
                		                                    TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') AS PROD_DATES,
                		                                    '$!{shift_1_mon_shift_type}'                AS SHIFT_TYPE,
                		                                    REPLACE('$!{shift_1_mon}',',','')           AS SHIFT_QTY,
                		                                    ''											AS QTY_UOM,
                		                                    '1'                                         AS PRIORITY,
                		                                    '$!{ord_no}'                                AS ORD_NO,
                		                                    '$!{ord_item_no}'                           AS ORD_ITEM_NO
                		                            FROM    (
                    		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
                    		                                    FROM    ITEM_MST IM
                    		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
                		                                    ) IM
                		                            union all
                                		            --주
                		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
                		                                    '$!{plant_id}'                              AS PLANT_ID,
                		                                    '$!{version}'                               AS VERSION,
                		                                    '$!{seq}'                                   AS SEQ,
                		                                    /* WO_ID 생성 */
                		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_mon_shift_type}_'
                		                                         	                                      AS WO_ID,
                		                                    '$!{item_id}'                               AS ITEM_ID,
                		                                    TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
                		                                                                                AS PROD_DATES,
                		                                    '$!{shift_3_mon_shift_type}'                AS SHIFT_TYPE,
                		                                    REPLACE('$!{shift_3_mon}',',','')           AS SHIFT_QTY,
                		                                    ''                  						            AS QTY_UOM,
                		                                    '1'                                         AS PRIORITY,
                		                                    '$!{ord_no}'                                AS ORD_NO,
                		                                    '$!{ord_item_no}'                           AS ORD_ITEM_NO
                		                            FROM    (
                    		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
                    		                                    FROM    ITEM_MST IM
                    		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
                		                                    ) IM		                
                		                            union all 
                                		            --야
                		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
                		                                    '$!{plant_id}'                              AS PLANT_ID,
                		                                    '$!{version}'                               AS VERSION,
                		                                    '$!{seq}'                                   AS SEQ,
                		                                    /* WO_ID 생성 */
                		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_mon_shift_type}_'
                		                                         	                                    AS WO_ID,
                		                                    '$!{item_id}'                               AS ITEM_ID,
                		                                    TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
                		                                                                                AS PROD_DATES,
                		                                    '$!{shift_5_mon_shift_type}'                AS SHIFT_TYPE,
                		                                    REPLACE('$!{shift_5_mon}',',','')           AS SHIFT_QTY,
                		                                    ''                  						AS QTY_UOM,
                		                                    '1'                                         AS PRIORITY,
                		                                    '$!{ord_no}'                                AS ORD_NO,
                		                                    '$!{ord_item_no}'                           AS ORD_ITEM_NO
                		                            FROM    (
                    		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
                    		                                    FROM    ITEM_MST IM
                    		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
                		                                    ) IM    		                                                
            		                            ) A, 
            		                            (
                		                            SELECT  DISTINCT 
                		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                                            OPER_ID
                		                            FROM    ITEM_CAPA IC
                		                            WHERE   IC.MADE_TYPE != 'DE'
                		                            AND     IC.PLANT_ID = '$!{plant_id}'
                		                            AND     IC.ITEM_ID = '$!{item_id}'
                		                            AND     IC.PROD_VER = (
                		                                                    SELECT  DISTINCT PROD_VER
                		                                                    FROM    ITEM_CAPA
                		                                                    WHERE   MADE_TYPE != 'DE'
                		                                                    AND     PLANT_ID = '$!{plant_id}'
                		                                                    AND     ITEM_ID = '$!{item_id}'
                		                                                    AND     PROC_ID = '$!{proc_id}'
                		                                                  )
                		                            ORDER   BY IC.PROC_ID        
            		                            ) B,
            		                            /* 포장단 전 공정 SHIFT위치 정보 */
            		                            V_POST_PRE_PROC PP,
            		                            (
                		                            /* 조운영 캘린더 인덱스 정보 */
                		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                		                            FROM    V_WORK_DIARY_IDX
                		                            WHERE   PLANT_ID = '$!{plant_id}'
            		                            ) WI
            		                    WHERE   A.PLANT_ID = B.PLANT_ID
            		                    AND     A.ITEM_ID = B.ITEM_ID
            		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
            		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
            		                    AND     B.PROD_VER = PP.PROD_VER(+)
            		                    AND     B.PROC_ID = PP.PROC_ID(+)
            		                    AND     B.PLANT_ID = WI.PLANT_ID
            		                    AND     B.PROC_ID = WI.PROC_ID
            		                    AND     A.PROD_DATES = WI.DUTY_DATE
            		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
        		                    ) DS,
        		                    (
            		                    /* 조운영 캘린더 인덱스 정보 */
            		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
            		                    FROM    V_WORK_DIARY_IDX
            		                    WHERE   PLANT_ID = '$!{plant_id}'
        		                    ) WD,
                                    (
                                        SELECT  MAX(OPER_ID) AS OPER_ID
                                        FROM    ITEM_CAPA IC
                                        WHERE   IC.MADE_TYPE != 'DE'
                                        AND     IC.PLANT_ID = '$!{plant_id}'
                                        AND     IC.ITEM_ID = '$!{item_id}'
                                        AND     IC.PROD_VER = (
                                                                   SELECT  DISTINCT PROD_VER
                                                                   FROM    ITEM_CAPA
                                                                   WHERE   MADE_TYPE != 'DE'
                                                                   AND     PLANT_ID = '$!{plant_id}'
                                                                   AND     ITEM_ID = '$!{item_id}'
                                                                   AND     PROC_ID = '$!{proc_id}'
                                                              )
                                        ORDER   BY IC.PROC_ID        
                                    ) MX
        		            WHERE   DS.PLANT_ID = WD.PLANT_ID
        		            AND     DS.PROC_ID = WD.PROC_ID
        		            AND     DS.SHIFT_DIFF = WD.IDX
        		            AND     NOT EXISTS (
            		                                SELECT  'xx'
            		                                FROM    DAILY_SCH_PLAN_SHIFT XX
            		                                WHERE   XX.CAT_ID       = DS.CAT_ID                                                                                           
            		                                AND     XX.PLANT_ID     = DS.PLANT_ID                                                                                         
            		                                AND     XX.VERSION      = DS.VERSION                                                                                          
            		                                AND     XX.ITEM_ID      = DS.ITEM_ID                                                                                          
            		                                AND     XX.PROC_ID      = DS.PROC_ID                                                                                          
            		                                AND     XX.PROD_DATES   = DS.PROD_DATES                                                                                       
            		                                AND     XX.SHIFT_TYPE   = DS.SHIFT_TYPE                                                                                       
            		                                AND	    nvl(XX.ORD_NO     ,'XX')  = nvl(DS.ORD_NO      ,'XX')                                                  
            		                                AND	    nvl(XX.ORD_ITEM_NO,'XX')  = nvl(DS.ORD_ITEM_NO ,'XX')                                      		                                
        		                               )
        		            AND     '$!{mon_shift1_check_flag}' = 'Y'
        		            --------------------------------------------------------------------------------------------------                   
                    ) DS,
                    (
                        SELECT  DS.PLANT_ID, DS.VERSION, MAX(TO_NUMBER(SUBSTR(DS.WO_ID,23,8))) AS MX_SEQ
                        FROM    DAILY_SCH_PLAN_SHIFT DS
                        WHERE	($commonUtil.replaceAll("$!{plant_version}","''","'"))
                        GROUP   BY DS.PLANT_ID, DS.VERSION
                    ) MX
            WHERE   DS.PLANT_ID = MX.PLANT_ID(+)
            AND     DS.VERSION = MX.VERSION(+)		                             
	
	</query>
	
		
	<!-- 03.수량이 0인 WO_ID 삭제 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_save_03">
	
			DELETE  DAILY_SCH_PLAN_SHIFT DS
			WHERE   DS.CAT_ID = 'PS'
			AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			AND     DS.WO_ID IN (
			                    SELECT  DS.WO_ID
			                    FROM    DAILY_SCH_PLAN_SHIFT DS
			                    WHERE   DS.CAT_ID = 'PS'
			                    AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			                    AND     DS.SHIFT_QTY = 0
			                    )
	
	</query>
	
	<!-- 04.WO_ID 시퀀스 UPDATE -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_save_04">
	
			UPDATE  /*+BYPASS_UJVC*/
			        (
			        SELECT  DS.WO_ID, DS.GRP_WO_ID, ND.NEW_WO_ID
			        FROM    (
			                SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, DS.PROD_DATES, 
			                        DS.SHIFT_TYPE, DS.START_DTTM, DS.GRP_WO_ID 
			                FROM    DAILY_SCH_PLAN_SHIFT DS
			                WHERE   DS.CAT_ID = 'PS'
			                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			                ) DS,
			                (
			                SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, 
			                        DS.PROC_ID, DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM,DS. GRP_WO_ID, 
			                        RANK() OVER (PARTITION BY DS.CAT_ID, DS.PLANT_ID, VERSION 
			                                     ORDER BY DS.ITEM_ID, TO_NUMBER(SUBSTR(DS.WO_ID,6,5)), TO_NUMBER(SUBSTR(DS.WO_ID,12,8)), TO_NUMBER(SUBSTR(DS.WO_ID,21,1))
			                                    ) AS RK,
			                        SUBSTR(DS.WO_ID,1,22)||LPAD(
			                                            RANK() OVER (PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION 
			                                                         ORDER BY DS.ITEM_ID, TO_NUMBER(SUBSTR(DS.WO_ID,6,5)), TO_NUMBER(SUBSTR(DS.WO_ID,12,8)), TO_NUMBER(SUBSTR(DS.WO_ID,21,1))
			                                                        ),8,'0') AS NEW_WO_ID
			                FROM    DAILY_SCH_PLAN_SHIFT DS, ITEM_MST IM
			                WHERE   DS.CAT_ID = 'PS'
			                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			                AND     DS.ITEM_ID = IM.ITEM_ID
                			AND     IM.ITYPE = 'FERT'
			                --ORDER   BY TO_NUMBER(SUBSTR(DS.WO_ID,23,8))
			                ) ND
			        WHERE   DS.CAT_ID = ND.CAT_ID
			        AND     DS.PLANT_ID = ND.PLANT_ID
			        AND     DS.VERSION = ND.VERSION
			        AND     DS.SEQ = ND.SEQ
			        AND     DS.WO_ID = ND.WO_ID
			        AND     DS.ITEM_ID = ND.ITEM_ID
			        AND     DS.LINE_ID = ND.LINE_ID
			        AND     DS.PROC_ID = ND.PROC_ID
			        AND     DS.PROD_DATES = ND.PROD_DATES
			        AND     DS.SHIFT_TYPE = ND.SHIFT_TYPE
			        AND     DS.START_DTTM = ND.START_DTTM      
			        )
			SET     WO_ID = NEW_WO_ID,
			        GRP_WO_ID = NEW_WO_ID
	
	</query>

	
	<!-- 재고, PO, WIP 정보 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_popup_01">
	
			SELECT  DS.ITEM_ID, IM.ITEM_NAME, 
                    TO_CHAR(TO_DATE(DS.PROD_DATES,'YYYYMMDD'),'YYYY-MM-DD') AS PROD_DATES, 
                    TO_CHAR(ES.IF_DTTM,'YYYY-MM-DD')                        AS STOCK_IF_DTTM, 
                    ES.QTY                                                  AS STOCK_QTY, 
                    TO_CHAR(ES.USABLE_DATE,'YYYY-MM-DD')                    AS USABLE_DATE, 
                    DS.WO_ID, 
                    DECODE(DS.SHIFT_TYPE,'1','조','3','주','5','야')        AS SHIFT_TYPE,  
                    DS.SHIFT_QTY,
                    DS.QTY_UOM, 
                    TO_CHAR(EP.IF_DTTM,'YYYY-MM-DD')                        AS PO_IF_DTTM, 
                    EP.PO_ID, EP.PO_QTY, 
                    EP.COMPL_QTY                                            AS PO_COMPL_QTY, 
                    EP.EP_STATUS, 
                    TO_CHAR(EW.IF_DTTM,'YYYY-MM-DD')                        AS WIP_IF_DTTM, 
                    EW.PO_QTY                                               AS WIP_QTY, 
                    EW.COMPL_QTY                                            AS WIP_COMPL_QTY, 
                    EW.EW_STATUS       
            FROM    (/*
                        계획 정보
                        조건 : VERSION, PLANT_ID, ITEM_ID(ITEM을 더블 클릭 했을 때)
                                + PROD_DATE, SHIFT_TYPE(SHIFT별 수량을 더블 클릭 했을 때)
                    */
                    SELECT  DISTINCT 
                            DS.PLANT_ID, DS.WO_ID, DS.ITEM_ID, DS.PROD_DATES, DS.SHIFT_TYPE, 
                            DS.SHIFT_QTY, DS.QTY_UOM, DS.PROC_ID
                    FROM    DAILY_SCH_PLAN_SHIFT DS
                    WHERE   DS.CAT_ID = '$!{cat_id}'
                    AND     VERSION = '$!{version}'
                    AND     DS.PLANT_ID = '$!{plant_id}'
                    AND     DS.ITEM_ID = '$!{item_id}'
                    AND		DS.PROC_ID = '$!{proc_id}'
                   [AND     DS.PROD_DATES = TO_CHAR(TO_DATE('${prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')]
                   [AND     DS.SHIFT_TYPE = '${shift_type}']
                    ORDER   BY DS.WO_ID
                    ) DS,
                    (/*
                        재고 정보
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  ES.IF_DTTM, ES.ITEM_ID, ES.USABLE_DATE, ES.QTY
                    FROM    ERP_STOCK ES
                    WHERE   ES.ITEM_ID = '$!{item_id}'
                    AND     ES.LOC_TYPE = 'PLANT'
                    AND     ES.LOC_ID = '$!{plant_id}'
                    AND     ES.IF_DTTM = (  SELECT  MAX(IF_DTTM) IF_DTTM
                                            FROM    ERP_STOCK
                                         )
                    ) ES,
                    (/*
                        PO 정보
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  EP.IF_DTTM, EP.PO_ID, EP.PO_QTY, EP.COMPL_QTY, 
                            DECODE(EP.STATUS,'CRTD','PO생성','GMCO','출고발생','DLV','완료','REL','실행중','PCNF',
                                        '부분실적','DLFL','삭제','MDLV','MES 완료처리','TECO','중도종결') EP_STATUS, 
                            EP.WO_ID
                    FROM    ERP_PO EP
                    WHERE   EP.ITEM_ID = '$!{item_id}'
                    AND     EP.PLANT_ID = '$!{plant_id}'
                    AND     EP.IF_DTTM = (  SELECT  MAX(IF_DTTM) IF_DTTM
                                            FROM    ERP_PO
                                            WHERE   ITEM_ID = '$!{item_id}'
                                            AND     PLANT_ID = '$!{plant_id}'
                                         )      
                    ) EP,
                    (/*
                        WIP(제공) 정보
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  EW.IF_DTTM, EW.LINE_ID, EW.PROC_ID, 
                    		DECODE(EW.STATUS ,'PRE','준비','PRO','진행중','NGP','착수불가','COM','완료','TECO','강제중단') EW_STATUS,
                            EW.PO_QTY, EW.COMPL_QTY, EW.WO_ID, EW.PO_ID                   
                    FROM    ERP_WIP EW
                    WHERE   EW.ITEM_ID = '$!{item_id}'
                    AND     EW.PLANT_ID = '$!{plant_id}'
                    AND     EW.IF_DTTM = (  SELECT  MAX(IF_DTTM) IF_DTTM
                                            FROM    ERP_WIP
                                            WHERE   EW.ITEM_ID = '$!{item_id}'
                                            AND     EW.PLANT_ID = '$!{plant_id}'
                                         )                      
                    ) EW,
                    ITEM_MST IM        
            WHERE   DS.ITEM_ID = ES.ITEM_ID(+)
            AND     TO_DATE(DS.PROD_DATES,'YYYYMMDD') = ES.USABLE_DATE(+)
            AND     DS.WO_ID = EP.WO_ID(+)
            AND     DS.WO_ID = EW.WO_ID(+)
            AND		DS.PROC_ID = EW.PROC_ID(+)
            AND     DS.ITEM_ID = IM.ITEM_ID(+)
            ORDER   BY DS.PROD_DATES, DS.SHIFT_TYPE
	
	</query>
	
	<!-- 반제품 이고 계획, 자재 입고 계획 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_popup_02">
			
			SELECT  SL.ITEM_ID, IM.ITEM_NAME, 
                    TO_CHAR(ES.IF_DTTM,'YYYY-MM-DD')    AS STO_IF_DTTM, 
                    HR.PLANT_NAME                       AS PROD_PLANT,
                    TO_CHAR(ES.TRANS_DATE,'YYYY-MM-DD') AS TRANS_DATE, 
                    ES.QTY                              AS STO_QTY, 
                    ES.QTY_UOM, 
                    TO_CHAR(MS.IF_DTTM,'YYYY-MM-DD')    AS MS_IF_DTTM, 
                    MS.LOC_ID, 
                    TO_CHAR(MS.AVAIL_DATE,'YYYY-MM-DD') AS AVAIL_DATE, 
                    MS.QTY                              AS MS_QTY, 
                    MS.QTY_UOM, MS.PO_PR_GUBN
            FROM    (/*
                        해당 ITEM 생산에 필요한 반제품 ITEM_ID 리스트
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  DISTINCT
                            MB.CONS_ITEM_ID ITEM_ID
                    FROM    MBOM MB
                    WHERE   MB.PROD_ITEM_ID = '$!{item_id}'
                    AND     MB.PLANT_ID = '$!{plant_id}'
                    AND     MB.CONS_ITEM_TYPE = 'HALB'
                    ORDER   BY MB.CONS_ITEM_ID        
                    ) SL,
                    (/*
                        해당 ITEM 생산에 필요한 반제품 이고 계획 정보
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  ES.IF_DTTM, ES.PLANT_ID, ES.ITEM_ID, ES.TRANS_DATE, ES.QTY, ES.QTY_UOM
                    FROM    ERP_STO ES
                    WHERE   ES.TGT_PLANT = '$!{plant_id}'
                    AND     ES.ITEM_ID IN ( SELECT  DISTINCT
                                                    CONS_ITEM_ID
                                            FROM    MBOM 
                                            WHERE   PROD_ITEM_ID = '$!{item_id}'
                                            AND     PLANT_ID = '$!{plant_id}'
                                            AND     CONS_ITEM_TYPE = 'HALB'
                                          )
                    AND     ES.IF_DTTM IN ( SELECT  MAX(IF_DTTM) IF_DTTM 
                                            FROM    ERP_STO
                                            WHERE   TGT_PLANT = '$!{plant_id}'                                     
                                         )
                   [AND     ES.TRANS_DATE &lt;= TO_DATE('${prod_dates}','YYYY MM/DD(DY)')] -- 일자별 클릭시 해당 일자를 넘지 않는 것  
                    ) ES,
                    (/*
                        해당 ITEM 생산에 필요한 자재 입고 계획 정보(반제품 만)
                        해당 ITEM의 가장 최근 인터페이스된 정보
                    */
                    SELECT  MS.IF_DTTM, MS.LOC_ID, MS.AVAIL_DATE, MS.ITEM_ID, MS.QTY, MS.QTY_UOM, 
                            DECODE(PO_PR_GUBN,'F','PO','B','PR') PO_PR_GUBN
                    FROM    MAT_STORE_PLAN MS
                    WHERE   MS.PLANT_ID = '$!{plant_id}'
                    AND     MS.ITEM_ID IN ( SELECT  DISTINCT
                                                    CONS_ITEM_ID
                                            FROM    MBOM 
                                            WHERE   PROD_ITEM_ID = '$!{item_id}'
                                            AND     PLANT_ID = '$!{plant_id}'
                                            AND     CONS_ITEM_TYPE = 'HALB'
                                          )
                    AND     MS.IF_DTTM IN ( SELECT  MAX(IF_DTTM) IF_DTTM
                                            FROM    MAT_STORE_PLAN
                                            WHERE   PLANT_ID = '$!{plant_id}'                                
                                          )
                   [AND     MS.AVAIL_DATE &lt;= TO_DATE('${prod_dates}','YYYY MM/DD(DY)')] -- 일자별 클릭시 해당 일자를 넘지 않는 것                                                  
                    ) MS,
                    ITEM_MST IM,
                    (
                    SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
                    FROM    HRCHY HR
                    WHERE   HR.LVL_TYPE = '공장'
                    ) HR
            WHERE   SL.ITEM_ID = ES.ITEM_ID(+)
            AND     SL.ITEM_ID = MS.ITEM_ID(+)
            AND     SL.ITEM_ID = IM.ITEM_ID(+)
            AND     ES.PLANT_ID = HR.PLANT_ID(+)
            ORDER   BY SL.ITEM_ID 
			
	</query>
	
	<!-- POPUP : 수정-->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_popup">
	
            SELECT  DS.PLANT_ID, HR.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID
                    , IM.ITEM_NAME, DS.LINE_ID, DS.PROC_ID, HR.PROC_NAME
                    , TO_CHAR(TO_DATE(DS.PROD_DATES,'YYYYMMDD'),'YYYY-MM-DD') PROD_DATES, DS.SHIFT_TYPE
                    , TO_CHAR(DS.START_DTTM,'YYYYMMDD') AS START_DTTM_DATE
                    , TO_CHAR(DS.START_DTTM,'HH24MISS') AS START_DTTM_TIME
                    , DS.END_DTTM, DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD, DS.GRP_WO_ID
                    , IC.CAPA_MC, IC.QTY, IC.QTY_UOM, DS.PROD_VER, IC.MC_QTY
              FROM  DAILY_SCH_PLAN_SHIFT DS, ITEM_MST IM
                    , (     SELECT  HR.PLANT_ID, HR.PLANT_NAME, HR.PROC_ID, HR.PROC_NAME
                              FROM  V_HRCHY_PROC HR
                             WHERE  HR.CAT = '포장' ) HR
                    , (     SELECT  DISTINCT
                                    IC.PLANT_ID, IC.ITEM_ID, IC.LINE_ID, IC.PROC_ID, IC.CAPA_MC, IC.QTY, IC.QTY_UOM, IC.PROD_VER, IC.MC_QTY
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND		IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROC_ID = '$!{proc_id}' ) IC
             WHERE  DS.CAT_ID = 'PS'
               AND  DS.PLANT_ID = '$!{plant_id}'
               AND  DS.PROC_ID = '$!{proc_id}'
               AND  DS.ITEM_ID = '$!{item_id}'
               AND  DS.VERSION = '$!{version}'
               AND  DS.PROD_DATES = TO_CHAR(TO_DATE('$!{prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') 
               AND  DS.SHIFT_TYPE = '$!{shift_type}' 
              [AND  DS.ORD_NO = '${ord_no}']
               AND  DS.PLANT_ID = HR.PLANT_ID(+)
               AND  DS.PROC_ID = HR.PROC_ID(+)
               AND  DS.ITEM_ID = IM.ITEM_ID(+)
               AND  DS.ITEM_ID = IC.ITEM_ID(+)
               AND  DS.LINE_ID = IC.LINE_ID(+)
               AND	DS.PROD_VER = IC.PROD_VER(+)
    
	</query>
	
	<!-- 제품 생산 가능 공자 리스트 -->
	<query id="daily_prod_analysis_new_popup_plant_list">
	
			SELECT  DISTINCT IC.PLANT_ID, HR.PLANT_NAME
			FROM    ITEM_CAPA IC,
			        (
			        SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			        FROM    HRCHY HR
			        WHERE   LVL_TYPE = '공장'
			        ) HR         
			WHERE   IC.MADE_TYPE != 'DE'
			AND		IC.ITEM_ID = '$!{item_id}'
			AND     IC.PLANT_ID = HR.PLANT_ID     
			ORDER   BY IC.PLANT_ID
				
	</query>
	
	<!-- 제품 생산 가능 작업장(포장) 리스트 -->
	<query id="daily_prod_analysis_new_popup_proc_list">
	
			SELECT  DISTINCT IC.PROC_ID, HR.PROC_NAME
			FROM    ITEM_CAPA IC,
			        V_HRCHY_PROC HR
			WHERE   IC.MADE_TYPE != 'DE'
			AND 	IC.ITEM_ID = '$!{item_id}'
			AND		IC.PLANT_ID = '$!{plant_id}'
			AND     IC.PLANT_ID = HR.PLANT_ID
			AND     IC.PROC_ID = HR.PROC_ID
			AND     HR.CAT = '포장'
			ORDER   BY IC.PROC_ID
	
	</query>
	
	<!-- 근무조 체크 -->
	<query id="work_diary_check">
	
			SELECT  WD.WORKTY_ID, WD.SHIFT_ID
			FROM    WORK_DIARY WD
			WHERE   WD.PLANT_ID  = '$!{plant_id}'
			AND     WD.PROC_ID   = '$!{proc_id}'
			AND     WD.DUTY_DATE = '$!{input_prod_dates}'
			AND     DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '$!{input_shift_type}'
			
	</query>
	
	<!-- 이동할 SHIFT에 수량이 있는지 체크-->
	<query id="move_target_check">
			
			SELECT  DS.PLANT_ID, DS.VERSION
			FROM    DAILY_SCH_PLAN_SHIFT DS            
			WHERE   DS.CAT_ID     = '$!{cat_id}'
			AND     DS.PLANT_ID   = '$!{plant_id}'
			AND     DS.VERSION    = '$!{version}'
			AND     DS.SEQ        = '$!{seq}'
			AND     DS.ITEM_ID    = '$!{item_id}'
			AND     DS.PROC_ID    = '$!{input_proc_id}'
			AND     DS.PROD_DATES = '$!{input_prod_dates}'
			AND     DS.SHIFT_TYPE = '$!{input_shift_type}'
		   [AND		ORD_NO        = '${input_ord_no}']
		   [AND		ORD_ITEM_NO   = '${input_ord_item_no}']
	
	</query>
	
	<!-- POPUP 저장-->
	<!-- 01. 이동처리(이동 할 곳에 물량이 없을 경우) -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_popup_save01">
	
        UPDATE  /*+ bypass_ujvc*/
                (                
                SELECT  DT.PROD_DATES, DT.SHIFT_TYPE, DT.SHIFT_QTY, DT.START_DTTM, DT.END_DTTM, DT.GRP_WO_ID, DT.LINE_ID, DT.PROC_ID,
                        ND.NEW_PROD_DATES, ND.NEW_SHIFT_TYPE, ND.NEW_SHIFT_QTY, ND.NEW_START_DTTM, ND.NEW_END_DTTM, 
                        NVL(ND.NEW_LINE_ID, ND.LINE_ID) AS NEW_LINE_ID, 
                        NVL(ND.NEW_PROC_ID, ND.PROC_ID) AS NEW_PROC_ID,
                        DT.PROD_VER, ND.NEW_PROD_VER,
                        DT.MADE_TYPE, ND.NEW_MADE_TYPE,
                        DT.MADE_DTTM, ND.NEW_MADE_DTTM,
                        DT.MADE_BY, ND.NEW_MADE_BY
                FROM    (
                        /* UPDATE할 대상*/
                         SELECT TM.PLANT_ID, TM.VERSION, TM.WO_ID, TM.ITEM_ID, TM.LINE_ID, TM.PROC_ID, 
                                TM.PROD_DATES, TM.SHIFT_TYPE, TM.START_DTTM, TM.END_DTTM, 
                                TM.SHIFT_QTY, TM.QTY_UOM, TM.GRP_WO_ID, TM.PROD_VER,
                                TM.MADE_TYPE, TM.MADE_DTTM, TM.MADE_BY
                         FROM   DAILY_SCH_PLAN_SHIFT TM
                         WHERE  TM.CAT_ID = 'PS'
                         AND    TM.PLANT_ID = '$!{plant_id}'
                         AND    TM.VERSION = '$!{version}'
                         AND    TM.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                        ) DT,   
                        (
                        SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                DS.SHIFT_QTY, DS.QTY_UOM, DS.NEW_PROD_DATES,
                                /*
                                    변경된 START_DTTM에 맞게 SHIFT_TYPE를 다시 구함
                                */
                                CASE                         
                                WHEN WD.STARTTIME &lt;= TO_NUMBER(DS.NEW_STARTTIME) AND 
                                     TO_NUMBER(DS.NEW_STARTTIME) &lt; WD.ENDTIME
                                THEN 
                                        DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5')
                                ELSE    
                                        '9'
                                END     NEW_SHIFT_TYPE,
                                DS.NEW_START_DTTM, DS.NEW_END_DTTM,
                                /*
                                    포장단 수량만 변경
                                */
                                CASE
                                WHEN VH.CAT = '포장'
                                THEN
                                        $!{qty}
                                ELSE    
                                        DS.SHIFT_QTY
                                END     NEW_SHIFT_QTY,
                                PL.LINE_ID AS NEW_LINE_ID, PL.PROC_ID AS NEW_PROC_ID,
                                PL.PROD_VER AS NEW_PROD_VER,
                                'UP' AS NEW_MADE_TYPE,
                                SYSDATE AS NEW_MADE_DTTM,
                                '$!{_user_id}' AS NEW_MADE_BY             
                        FROM    (        
                                SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                        DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                        DS.SHIFT_QTY, DS.QTY_UOM,
                                        TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS') AS NEW_START_DTTM,
                                        /*
                                           변경된 START_DTTM에 맞게 PROD_DATES를 다시 계산 
                                           0600 기준으로 날짜 지정  
                                       */ 
                                        CASE
                                        WHEN  TO_NUMBER(SUBSTR('$!{input_start_dttm_date}$!{input_start_dttm_time}',9,6)) &lt; 060000
                                        THEN    
                                                TO_CHAR(TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS')-1,'YYYYMMDD')
                                        ELSE    
                                                SUBSTR('$!{input_start_dttm_date}$!{input_start_dttm_time}',1,8)
                                        END     NEW_PROD_DATES,
                                        /*
                                            입력된 NEW_START_DTTM에 맞게 END_DTTM을 수정
                                        */
                                        CASE
                                        WHEN DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS') &lt; 0
                                        THEN
                                                DS.END_DTTM + ABS(DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS'))
                                        ELSE    
                                                DS.END_DTTM - (DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS'))
                                        END     NEW_END_DTTM,
                                        '$!{input_start_dttm_date}$!{input_start_dttm_time}' AS    NEW_STARTTIME
                                FROM    DAILY_SCH_PLAN_SHIFT DS
                                WHERE   DS.CAT_ID = 'PS'
                                AND     DS.PLANT_ID = '$!{plant_id}'
                                AND     DS.VERSION = '$!{version}'
                                AND     DS.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                                ) DS,
                                (   
                                /*
                                    일자별 SHIFT 추출 
                                    일별, 라인별, SHIFT 코드 기준의 시작시간 종료시간 
                                */
                                SELECT  
                                        /*+INDEX(A WORK_DIARY_PK) */
                                        PLANT_ID, DUTY_DATE, PROC_ID, SHIFT_ID, 
                                        DUTY_DATE||START_TIME   STARTTIME, 
                                        CASE
                                        WHEN SUBSTR(SHIFT_ID,1,3) IN ('NIG','OTN') THEN
                                                TO_CHAR(TO_DATE(DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||END_TIME
                                        ELSE
                                                DUTY_DATE||END_TIME   
                                        END     ENDTIME 
                                FROM    WORK_DIARY A
                                WHERE   PLANT_ID = '$!{plant_id}'
                                ) WD,
                                V_HRCHY_PROC VH,
                                (
                                /* 변경될 라인, 작업장 리스트 */
                                SELECT  DISTINCT IC.PLANT_ID, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER
                                FROM    ITEM_CAPA IC
                                WHERE   IC.MADE_TYPE != 'DE'
                                AND		IC.PLANT_ID = '$!{plant_id}'
                                AND     IC.ITEM_ID = '$!{item_id}'
                                --AND     IC.LINE_ID = SUBSTR('$!{input_proc_id}',1,4)||'0'
                                AND		IC.PROD_VER = (
			                                            SELECT  DISTINCT PROD_VER
			                                            FROM    ITEM_CAPA
			                                            WHERE   MADE_TYPE != 'DE'
			                                            AND     PLANT_ID = '$!{plant_id}'
			                                            AND     ITEM_ID = '$!{item_id}'
			                                            AND     PROC_ID = '$!{input_proc_id}'
			                                          )
                                ) PL
                        WHERE   DS.PROC_ID          = WD.PROC_ID (+)
                        AND     DS.NEW_PROD_DATES   = WD.DUTY_DATE (+)        
                        AND     DS.NEW_STARTTIME    &gt;= WD.STARTTIME (+) 
                        AND     DS.NEW_STARTTIME    &lt;  WD.ENDTIME (+)
                        AND     DS.PLANT_ID         = VH.PLANT_ID(+)
                        AND     DS.PROC_ID          = VH.PROC_ID(+)
                        AND     DS.PLANT_ID         = PL.PLANT_ID(+)
                        AND     SUBSTR(DS.PROC_ID,5,1) = SUBSTR(PL.PROC_ID,5,1)
                        ) ND
                WHERE   DT.PLANT_ID = ND.PLANT_ID
                AND     DT.VERSION = ND.VERSION
                AND     DT.WO_ID = ND.WO_ID    
                AND     DT.ITEM_ID = ND.ITEM_ID
                AND     DT.LINE_ID = ND.LINE_ID  
                AND     DT.PROC_ID = ND.PROC_ID                
                ) 
        SET     PROD_DATES = NEW_PROD_DATES,
                SHIFT_TYPE = NEW_SHIFT_TYPE,
                START_DTTM = NEW_START_DTTM,
                END_DTTM = NEW_END_DTTM,
                SHIFT_QTY = NEW_SHIFT_QTY,
                LINE_ID = NEW_LINE_ID,
                PROC_ID = NEW_PROC_ID,
                PROD_VER = NEW_PROD_VER,
                MADE_TYPE = NEW_MADE_TYPE,
                MADE_DTTM = NEW_MADE_DTTM, 
                MADE_BY = NEW_MADE_BY
        WHERE   '$!{checkModify}' = 'Y'
	
	</query>
	
	<!-- 수량통합처리(이동 할 곳에 물량이 있을 경우)  -->	
	<query id="sc_11020_dailyProductionPlanAnalysisNew_popup_save02">
	
        UPDATE  /*+ bypass_ujvc*/
                (    
                SELECT  DT.SHIFT_QTY,
                        ND.NEW_SHIFT_QTY + DT.SHIFT_QTY AS NEW_SHIFT_QTY, 
                        DT.MADE_TYPE, ND.NEW_MADE_TYPE,
                        DT.MADE_DTTM, ND.NEW_MADE_DTTM,
                        DT.MADE_BY, ND.NEW_MADE_BY
                FROM    (
                        /* UPDATE할 대상(TARGET) */
                         SELECT TM.PLANT_ID, TM.VERSION, TM.WO_ID, TM.ITEM_ID, TM.LINE_ID, TM.PROC_ID, 
                                TM.PROD_DATES, TM.SHIFT_TYPE, TM.START_DTTM, TM.END_DTTM, 
                                TM.SHIFT_QTY, TM.QTY_UOM, TM.GRP_WO_ID,
                                TM.MADE_TYPE, TM.MADE_DTTM, TM.MADE_BY
                         FROM   DAILY_SCH_PLAN_SHIFT TM
                         WHERE  TM.CAT_ID = 'PS'
                         AND    TM.PLANT_ID = '$!{plant_id}'
                         AND    TM.VERSION = '$!{version}'
                         AND    TM.ITEM_ID = '$!{item_id}'
                         AND    TM.PROD_DATES = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
			                                            TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
                         AND    TM.SHIFT_TYPE =  (
                                                    /* SHIFT_TYPE  */
                                                    SELECT  DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') SHIFT_TYPE
                                                    FROM    WORK_DIARY WD
                                                    WHERE   WD.PLANT_ID = '$!{plant_id}'
                                                    AND     WD.PROC_ID = '$!{input_proc_id}'--INPUT_PROC_ID
                                                    AND     WD.DUTY_DATE = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
                                                                            TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
                                                    AND     WD.DUTY_DATE||WD.START_TIME &lt;= '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
                                                    AND     DECODE(SUBSTR(WD.SHIFT_ID,1,3),'NIG', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
                                                                                           'OTN', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
                                                                                           WD.DUTY_DATE||WD.END_TIME) &gt;= '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
                                                 )                                                        
                        ) DT,   
                        (
                        SELECT  DS.PLANT_ID, DS.VERSION, DS.ITEM_ID, DS.PROC_ID,
                                /*
                                    포장단 수량만 변경
                                */
                                CASE
                                WHEN VH.CAT = '포장'
                                THEN
                                        $!{qty}
                                ELSE    
                                        DS.SHIFT_QTY
                                END     NEW_SHIFT_QTY,
                                'UP' AS NEW_MADE_TYPE,
                                SYSDATE AS NEW_MADE_DTTM,
                                '$!{_user_id}' AS NEW_MADE_BY   
                        FROM    (        
                                SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                        DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                        DS.SHIFT_QTY, DS.QTY_UOM
                                FROM    DAILY_SCH_PLAN_SHIFT DS
                                WHERE   DS.CAT_ID = 'PS'
                                AND     DS.PLANT_ID = '$!{plant_id}'
                                AND     DS.VERSION = '$!{version}'
                                AND     DS.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                                ) DS,
                                V_HRCHY_PROC VH
                        WHERE   DS.PLANT_ID         = VH.PLANT_ID(+)
                        AND     DS.PROC_ID          = VH.PROC_ID(+)
                        ) ND
                WHERE   DT.PLANT_ID = ND.PLANT_ID
                AND     DT.VERSION = ND.VERSION
                AND     DT.ITEM_ID = ND.ITEM_ID
                AND     SUBSTR(DT.PROC_ID,5,1) = SUBSTR(ND.PROC_ID,5,1)    
                ) 
        SET     SHIFT_QTY = NEW_SHIFT_QTY,
                MADE_TYPE = NEW_MADE_TYPE,
                MADE_DTTM = NEW_MADE_DTTM, 
                MADE_BY = NEW_MADE_BY
        WHERE   '$!{checkModify}' = 'Y'
	
	</query>
	
	<!-- wo_id 삭제 -->
	<query id="delete_wo_id">
	
			/* 이동한 WO_ID 삭제 */        
			DELETE  DAILY_SCH_PLAN_SHIFT
			WHERE   CAT_ID = 'PS'
			AND     PLANT_ID = '$!{plant_id}'
			AND     VERSION = '$!{version}'
			AND     WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
	
	</query>
		
	<!-- 등록 POPUP(alt + click) 조회  -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_reg">
		
		#if( "$!{flag}" == "M" )
            SELECT  DS.CAT_ID, DS.PLANT_ID, VH.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, 
                    DS.ITEM_ID, IM.ITEM_NAME, DS.LINE_ID, VH.LINE_NAME, DS.PROC_ID,
                    VH.PROC_NAME, DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM,
                    DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    DS.PROD_VER, DS.GRP_WO_ID,
                    TO_CHAR(DS.START_DTTM,'YYYYMMDD') START_DATE,
                    TO_CHAR(DS.START_DTTM,'HH24MISS') START_TIME,
                    TO_CHAR(DS.END_DTTM,'YYYYMMDD') END_DATE,
                    TO_CHAR(DS.END_DTTM,'HH24MISS') END_TIME,
                    SUBSTR(DS.PROC_ID,5,1)
            FROM    DAILY_SCH_PLAN_SHIFT DS,
                    V_HRCHY_PROC VH,
                    ITEM_MST IM
            WHERE   DS.CAT_ID = 'PS'
            AND		DS.PLANT_ID = '$!{plant_id}'
            AND     DS.VERSION = '$!{version}'
            AND     DS.SEQ = '$!{seq}'
            AND     DS.ITEM_ID = '$!{item_id}'
            AND     DS.WO_ID = (
                                SELECT  WO_ID
                                FROM    DAILY_SCH_PLAN_SHIFT
                                WHERE   CAT_ID = DS.CAT_ID
                                AND     PLANT_ID = DS.PLANT_ID
                                AND     VERSION = DS.VERSION
                                AND     SEQ = DS.SEQ
                                AND     ITEM_ID = DS.ITEM_ID
                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
                                AND     SHIFT_TYPE = '$!{shift_type}'
                                AND     PROC_ID = '$!{proc_id}'
                               [AND		ORD_NO = '${ord_no}']
                               )
            AND     DS.PLANT_ID = VH.PLANT_ID
            AND     DS.PROC_ID = VH.PROC_ID
            AND     DS.ITEM_ID = IM.ITEM_ID
            AND     DS.PROD_VER = (
                                    SELECT  DISTINCT PROD_VER
                                    FROM    ITEM_CAPA
                                    WHERE   PLANT_ID = DS.PLANT_ID
                                    AND     ITEM_ID = DS.ITEM_ID
                                    AND     PROC_ID = '$!{proc_id}'
                                    AND		MADE_TYPE != 'DE'
                                  )
			ORDER   BY 28, 11                                  		                              
		#else
            SELECT  DS.CAT_ID, DS.PLANT_ID, VH.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.ITEM_NAME, 
                    DS.LINE_ID, VH.LINE_NAME, DS.PROC_ID, VH.PROC_NAME,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
                    CASE
                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
                    THEN    
                            DS.END_TIME
                    ELSE
                            WD.END_TIME
                    END                                                         AS END_DTTM,
                    DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    DS.PROD_VER, DS.WO_ID AS GRP_WO_ID,
                    '' START_DATE,
                    '' START_TIME,
                    '' END_DATE,
                    '' END_TIME
            FROM    (
                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, A.ITEM_NAME, B.LINE_ID, B.PROC_ID, 
                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME
                    FROM    (
                            SELECT  'PS'                AS CAT_ID,
                                    '$!{plant_id}'      AS PLANT_ID,
                                    '$!{version}'        AS VERSION,
                                    '$!{seq}' AS SEQ,
                                    /* WO_ID 생성 */
                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')||'_$!{shift_type}_'||
                                        TRIM(
                                            TO_CHAR(
                                                    (
                                                    SELECT  MAX(TO_NUMBER(SUBSTR(WO_ID,23,8)))
                                                    FROM    DAILY_SCH_PLAN_SHIFT
                                                    WHERE   CAT_ID = 'PS' 
                                                    AND     PLANT_ID = '$!{plant_id}' 
                                                    AND     VERSION = '$!{version}' 
                                                    )+1
                                                    ,'00000000')
                                            )           AS WO_ID,
                                    '$!{item_id}'       AS ITEM_ID,
                                    IM.ITEM_NAME        AS ITEM_NAME,
                                    TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
                                                        AS PROD_DATES,
                                    '$!{shift_type}'    AS SHIFT_TYPE,
                                    ''                  AS START_DTTM,
                                    ''                  AS END_DTTM,
                                    ''                  AS SHIFT_QTY,
                                    ''                  AS QTY_UOM,
                                    '1'                 AS PRIORITY,
                                    '$!{ord_no}'        AS ORD_NO,
			                		'$!{ord_item_no}'   AS ORD_ITEM_NO,
                                    ''                  AS PROJECT_CD,
                                    ''                  AS GRP_WO_ID,
                                    ''                  AS PROD_VER,
                                    'AD'                AS MADE_TYPE,
                                    SYSDATE             AS MADE_DTTM,
                                    'admin'      AS MADE_BY                    
                            FROM    (
                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME, IM.SALES_CAT01
                                    FROM    ITEM_MST IM
                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
                                    ) IM
                            ) A, 
                            (
                            SELECT  DISTINCT 
                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROC_ID = '$!{proc_id}'
                            /*AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID*/       
                            ) B,
                            /* 포장단 전 공정 SHIFT위치 정보 */
                            V_POST_PRE_PROC PP,
                            (
                            /* 조운영 캘린더 인덱스 정보 */
                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                            FROM    V_WORK_DIARY_IDX
                            WHERE   PLANT_ID = '$!{plant_id}'
                            ) WI
                    WHERE   A.PLANT_ID = B.PLANT_ID
                    AND     A.ITEM_ID = B.ITEM_ID
                    AND     B.PLANT_ID = PP.PLANT_ID(+)
                    AND     B.ITEM_ID = PP.ITEM_ID(+)
                    AND     B.PROD_VER = PP.PROD_VER(+)
                    AND     B.PROC_ID = PP.PROC_ID(+)
                    AND     B.PLANT_ID = WI.PLANT_ID
                    AND     B.PROC_ID = WI.PROC_ID
                    AND     A.PROD_DATES = WI.DUTY_DATE
                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
                    ) DS,
                    (
                    /* 조운영 캘린더 인덱스 정보 */
                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                    FROM    V_WORK_DIARY_IDX
                    WHERE   PLANT_ID = '$!{plant_id}'
                    ) WD,
                    V_HRCHY_PROC VH
            WHERE   DS.PLANT_ID = WD.PLANT_ID
            AND     DS.PROC_ID = WD.PROC_ID
            AND     DS.SHIFT_DIFF = WD.IDX
            AND     DS.PLANT_ID = VH.PLANT_ID(+)
            AND     DS.PROC_ID = VH.PROC_ID(+)
		#end            
	
	</query>
	
	<!-- 등록 popup(alt + click) 수량 있을 시 update -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_reg_save01" fix="_user_id proc_id" iterator="input_cat_id input_plant_id input_version input_seq input_wo_id input_item_id input_line_id input_proc_id input_prod_dates input_shift_type input_start_date input_start_time input_end_date input_end_time input_shift_qty input_qty_uom input_priority input_ord_no input_ord_item_no input_grp_wo_id input_prod_ver">
		
		    UPDATE  DAILY_SCH_PLAN_SHIFT
            SET     START_DTTM = TO_DATE('$!{input_start_date} $!{input_start_time}','YYYYMMDD HH24MISS'),
                    END_DTTM = TO_DATE('$!{input_end_date} $!{input_end_time}','YYYYMMDD HH24MISS'),
                    SHIFT_QTY = '$!{input_shift_qty}',
                    QTY_UOM = '$!{input_qty_uom}',
                    ORD_NO = '$!{input_ord_no}',
                    ORD_ITEM_NO = '$!{input_ord_item_no}',
                    MADE_TYPE = 'UP',
                    MADE_DTTM = SYSDATE,
                    MADE_BY = '$!{_user_id}'
            WHERE   CAT_ID = '$!{input_cat_id}'
            AND     PLANT_ID = '$!{input_plant_id}'
            AND     VERSION = '$!{input_version}'
            AND     SEQ = '$!{input_seq}'
            AND     WO_ID = '$!{input_wo_id}'
            AND     ITEM_ID = '$!{input_item_id}' 
            AND     LINE_ID = '$!{input_line_id}'
            AND     PROC_ID = '$!{input_proc_id}'
            AND     PROD_DATES = '$!{input_prod_dates}'
            AND     SHIFT_TYPE = '$!{input_shift_type}'
            [AND     ORD_NO = '${input_ord_no}']		
			
	</query>
	
	<!-- 등록 popup(alt + click) 수량 없을 시 insert -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_reg_save02" >
		
			INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
			                PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, 
			                PRIORITY, ORD_NO, ORD_ITEM_NO, PROJECT_CD, GRP_WO_ID, 
			                PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, RESOURCESET_ID, WO_END )
            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
                    CASE
                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
                    THEN    
                            DS.END_TIME
                    ELSE
                            WD.END_TIME
                    END                                                         AS END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
                    'AD'                                                        AS MADE_TYPE,
                    SYSDATE                                                     AS MADE_DTTM,
                    '$!{_user_id}'                                              AS MADE_BY,
                    ''                                                          AS SCH_TYPE,
                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
                    ''                                                          AS RESOURCESET_ID,
                    DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
            FROM    (
                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, A.START_DTTM AS START_TIME, A.END_DTTM AS END_TIME,
                            B.OPER_ID
                    FROM    (
                            SELECT  '$!{input_cat_id}'                                AS CAT_ID,
                                    '$!{input_plant_id}'                              AS PLANT_ID,
                                    '$!{input_version}'                               AS VERSION,
                                    '$!{input_seq}'                                   AS SEQ,
                                    /* WO_ID 생성 */
                                    '$!{input_plant_id}_$!{input_proc_id}_'||'$!{input_prod_dates}'||'_$!{input_shift_type}_'||
                                        TRIM(
                                            TO_CHAR(
                                                    (
                                                    SELECT  MAX(TO_NUMBER(SUBSTR(WO_ID,23,8)))
                                                    FROM    DAILY_SCH_PLAN_SHIFT
                                                    WHERE   CAT_ID = '$!{input_cat_id}' 
                                                    AND     PLANT_ID = '$!{input_plant_id}' 
                                                    AND     VERSION = '$!{input_version}' 
                                                    )+1
                                                    ,'00000000')
                                            )                                   AS WO_ID,
                                    '$!{input_item_id}'                         AS ITEM_ID,
                                    '$!{input_prod_dates}'                      AS PROD_DATES,
                                    '$!{input_shift_type}'                      AS SHIFT_TYPE,
                                    TO_DATE('$!{input_start_date} $!{input_start_time}','YYYYMMDD HH24MISS') AS START_DTTM,
                                    TO_DATE('$!{input_end_date} $!{input_end_time}','YYYYMMDD HH24MISS') AS END_DTTM,
                                    REPLACE('$!{input_shift_qty}',',','')       AS SHIFT_QTY,
                                    ''                  						AS QTY_UOM,
                                    '1'                                         AS PRIORITY,
                                    '$!{input_ord_no}'                                AS ORD_NO,
                                    '$!{input_ord_item_no}'                           AS ORD_ITEM_NO
                            FROM    (
                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
                                    FROM    ITEM_MST IM
                                    WHERE   IM.ITEM_ID = '$!{input_item_id}'  
                                    ) IM
                            ) A, 
                            (
                            SELECT  DISTINCT 
                                	IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                    IC.OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{input_plant_id}'
                            AND     IC.ITEM_ID = '$!{input_item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{input_plant_id}'
                                                    AND     ITEM_ID = '$!{input_item_id}'
                                                    AND     PROC_ID = '$!{input_proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) B,
                            /* 포장단 전 공정 SHIFT위치 정보 */
                            V_POST_PRE_PROC PP,
                            (
                            /* 조운영 캘린더 인덱스 정보 */
                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                            FROM    V_WORK_DIARY_IDX
                            WHERE   PLANT_ID = '$!{input_plant_id}'
                            ) WI
                    WHERE   A.PLANT_ID = B.PLANT_ID
                    AND     A.ITEM_ID = B.ITEM_ID
                    AND     B.PLANT_ID = PP.PLANT_ID(+)
                    AND     B.ITEM_ID = PP.ITEM_ID(+)
                    AND     B.PROD_VER = PP.PROD_VER(+)
                    AND     B.PROC_ID = PP.PROC_ID(+)
                    AND     B.PLANT_ID = WI.PLANT_ID
                    AND     B.PROC_ID = WI.PROC_ID
                    AND     A.PROD_DATES = WI.DUTY_DATE
                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
                    ) DS,
                    (
                    /* 조운영 캘린더 인덱스 정보 */
                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                    FROM    V_WORK_DIARY_IDX
                    WHERE   PLANT_ID = '$!{input_plant_id}'
                    ) WD,
                    (
                    SELECT  MAX(OPER_ID) AS OPER_ID
                    FROM    ITEM_CAPA IC
                    WHERE   IC.MADE_TYPE != 'DE'
                    AND     IC.PLANT_ID = '$!{input_plant_id}'
                    AND     IC.ITEM_ID = '$!{input_item_id}'
                    AND     IC.PROD_VER = (
                                            SELECT  DISTINCT PROD_VER
                                            FROM    ITEM_CAPA
                                            WHERE   MADE_TYPE != 'DE'
                                            AND     PLANT_ID = '$!{input_plant_id}'
                                            AND     ITEM_ID = '$!{input_item_id}'
                                            AND     PROC_ID = '$!{input_proc_id}'
                                          )
                    ORDER   BY IC.PROC_ID        
                    ) MX
            WHERE   DS.PLANT_ID = WD.PLANT_ID
            AND     DS.PROC_ID = WD.PROC_ID
            AND     DS.SHIFT_DIFF = WD.IDX
            AND     NOT EXISTS (
                                SELECT  VERSION
                                FROM    DAILY_SCH_PLAN_SHIFT
                                WHERE   CAT_ID = '$!{input_cat_id}'
                                AND     PLANT_ID = '$!{input_plant_id}'
                                AND     VERSION = '$!{input_version}'
                                AND     ITEM_ID = '$!{input_item_id}'
                                AND     PROC_ID = '$!{input_proc_id}'
                                AND     PROD_DATES = '$!{input_prod_dates}'
                                AND     SHIFT_TYPE = '$!{input_shift_type}'
                                [AND		ORD_NO = '${input_ord_no}']                                
                                [AND		ORD_ITEM_NO = '${input_ord_item_no}']                           
                               )			                
			
	</query>

	<!-- 완제품 등록 버튼 저장 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNewItem_reg_save" fix="_user_id" iterator="input_plant_id input_version input_proc_id input_prod_dates input_shift_type input_item_id input_shift_qty input_ord_no input_ord_item_no">
		
			INSERT  INTO DAILY_SCH_PLAN_MATRIX (
			            PLANT_ID, VERSION, PROC_ID, ITEM_ID, PROD_DATES, SHIFT_TYPE, SHIFT_QTY, 
			            ORD_NO, ORD_ITEM_NO, CRUD, MADE_DTTM, MADE_BY)
			SELECT  '$!{input_plant_id}' ,'$!{input_version}' ,'$!{input_proc_id}' ,'$!{input_item_id}' , '$!{input_prod_dates}', '$!{input_shift_type}' ,REPLACE('$!{input_shift_qty}',',','') ,'${input_ord_no}'  ,'${input_ord_item_no}', 'C' ,SYSDATE ,'$!{_user_id}' FROM DUAL			                
			
	</query>

	<!-- WO_ID 등록(생산계획에 없는 제품)화면 공장 리스트 -->
	<query id="new_item_reg_plant_list">
		
		#if("$!{plant_list}" == "")
			SELECT	HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			FROM	HRCHY HR
			WHERE	1 = 0
		#else
			SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			FROM    HRCHY HR
			WHERE   HR.LVL_TYPE = '공장'
			AND     HR.HID IN ($commonUtil.replaceAll("$!{plant_list}","''","'"))
			ORDER   BY HR.HID
		#end
	
	</query> 
	
	<!-- 제품 등록화면(등록 버튼 클릭) 생산 가능 제품 리스트 -->
	<query id="input_plant_proc_of_item_list">
	
			/*
                조건(공장,작업장)의 생산 가능 제품 리스트
            */
            SELECT  IC.ITEM_ID, IC.ITEM_ID||'_'||IM.ITEM_NAME||'('||IM.SPEC||')' ITEM_NAME
            FROM    (
                    SELECT  DISTINCT IC.ITEM_ID
                    FROM    ITEM_CAPA IC
                    WHERE   IC.MADE_TYPE != 'DE'
                    AND		IC.PLANT_ID = '$!{plant_id}'
                    AND     IC.PROC_ID = '$!{selected_proc}'
                    -- 생산계획 미 반영 작업장 제외
					AND (PLANT_ID, LINE_ID, ITEM_ID) NOT IN
								(
								SELECT	PLANT_ID, LINE_ID, ITEM_ID
								FROM	ITEM_PLANT_LINE_CTL
								WHERE	USE_FLAG	= 'N'
								)
                    ) IC,
                    ITEM_MST IM
            WHERE   IC.ITEM_ID = IM.ITEM_ID
            ORDER   BY IC.ITEM_ID	
	
	</query>
		
	<!-- 공장할당 물량 대비 생산계획 물량 조회 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNewFaVsPs_popup">
	
			SELECT  B.NO,
			        DECODE(NO,1,A.CD,2,CD,3,NULL) CD,
                    DECODE(NO,1,A.CD_NAME,2,CD_NAME||'합계',3,'전체합계') CAT01,
                    DECODE(NO,1,A.ITEM_ID,2,NULL,NULL) ITEM_ID,
                    DECODE(NO,1,A.ITEM_NAME,2,NULL,NULL) ITEM_NAME,
                    DECODE(NO,1,A.MTO_MTS_TYPE,NULL) MTO_MTS_TYPE,
                    SUM(DECODE(NO,1,A.FA_QTY,2,A.FA_QTY,3,A.FA_QTY)) FA_QTY,
                    SUM(DECODE(NO,1,A.EXPORT_PLAN,2,A.EXPORT_PLAN,3,A.EXPORT_PLAN)) EXPORT_PLAN,
                    SUM(DECODE(NO,1,A.PS_QTY,2,A.PS_QTY,3,A.PS_QTY)) PS_QTY,
                    SUM(DECODE(NO,1,A.DIFF,2,A.DIFF,3,A.DIFF)) DIFF,
                    SUM(DECODE(NO,1,A.ETC_QTY,2,A.ETC_QTY,3,A.ETC_QTY)) ETC_QTY      
			FROM    (        
			        SELECT  IL.ITEM_ID, IM.ITEM_NAME, 
                            DECODE(IM.MTO_MTS_TYPE,'0001','O','0002','S',NULL) AS MTO_MTS_TYPE, 
                            FA.FA_QTY, PS.PS_QTY, ET.ETC_QTY, NVL(EX.EXPORT_PLAN,0)	EXPORT_PLAN, 
                            (NVL(PS.PS_QTY,0) - NVL(FA.FA_QTY,0)) AS DIFF, CM.CD, CM.CD_NAME
			        FROM    (
			        		/* 제품 리스트(공장할당 제품 union 생산계획 제품) */
                            --공장 할당 제품
			                SELECT  PA.ITEM_ID
			                FROM    PLANT_ALLOC_PLAN PA,
			                        (
			                        SELECT  PVL.VERSION, PVL.SEQ
			                        FROM    (
			                                SELECT  PV.VERSION, PV.SEQ
			                                FROM    PLAN_VERSION_LOG PV
			                                WHERE   PV.PERIOD_TYPE = 'DAILY'
			                                AND     PV.CAT_ID = 'FA'
			                                AND     PV.VERSION IS NOT NULL
			                                AND     PV.SEQ IS NOT NULL
			                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
			                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
			                                ) PVL
			                        WHERE   ROWNUM = 1       
			                        ) MX,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK,
			                        ITEM_MST IM
			                WHERE   PA.VERSION = MX.VERSION
			                AND     PA.SEQ = MX.SEQ
			                AND		PA.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
			                GROUP   BY PA.ITEM_ID                           
			                UNION   
			                --생산 계획 제품
			                SELECT  DS.ITEM_ID
			                FROM    DAILY_SCH_PLAN_SHIFT DS,
			                        V_HRCHY_PROC VH,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK,
			                        ITEM_MST IM
			                WHERE   DS.CAT_ID = 'PS'
			                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			                AND     DS.PLANT_ID = VH.PLANT_ID
			                AND     DS.PROC_ID = VH.PROC_ID
			                AND     VH.CAT = '포장'
			                AND     DS.ITEM_ID = IM.ITEM_ID
			                AND     IM.ITYPE = 'FERT'
			                AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD')
			                GROUP   BY DS.ITEM_ID
			                ) IL,
			                (
			                /* 공장할당량 */
			                SELECT  PA.ITEM_ID, SUM(PA.QTY) FA_QTY
			                FROM    PLANT_ALLOC_PLAN PA,
			                        (
			                        SELECT  PVL.VERSION, PVL.SEQ
			                        FROM    (
			                                SELECT  PV.VERSION, PV.SEQ
			                                FROM    PLAN_VERSION_LOG PV
			                                WHERE   PV.PERIOD_TYPE = 'DAILY'
			                                AND     PV.CAT_ID = 'FA'
			                                AND     PV.VERSION IS NOT NULL
			                                AND     PV.SEQ IS NOT NULL
			                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
			                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
			                                ) PVL
			                        WHERE   ROWNUM = 1       
			                        ) MX,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK
			                WHERE   PA.VERSION = MX.VERSION
			                AND     PA.SEQ = MX.SEQ
			                AND		PA.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
			                GROUP   BY PA.ITEM_ID
			                ) FA,
			                (
			                /* 생산계획량 */
			                SELECT  DS.ITEM_ID, SUM(DS.SHIFT_QTY) PS_QTY
			                FROM    DAILY_SCH_PLAN_SHIFT DS,
			                        V_HRCHY_PROC VH,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK
			                WHERE   DS.CAT_ID = 'PS'
			                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			                AND     DS.PLANT_ID = VH.PLANT_ID
			                AND     DS.PROC_ID = VH.PROC_ID
			                AND     VH.CAT = '포장'
			                AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD')
			                GROUP   BY DS.ITEM_ID
			                ) PS,
                            (
                            /* 유통가공품량 */
                            SELECT  EI.C_ITEM_ID ITEM_ID, SUM(EI.ETC_QTY) ETC_QTY
                            FROM    ETC_INFO_DTL EI,
                                    (
			                        SELECT  PVL.VERSION, PVL.SEQ
			                        FROM    (
			                                SELECT  PV.VERSION, PV.SEQ
			                                FROM    PLAN_VERSION_LOG PV
			                                WHERE   PV.PERIOD_TYPE = 'DAILY'
			                                AND     PV.CAT_ID = 'FA'
			                                AND     PV.VERSION IS NOT NULL
			                                AND     PV.SEQ IS NOT NULL
			                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
			                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
			                                ) PVL
			                        WHERE   ROWNUM = 1       
			                        ) MX,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK
                            WHERE   EI.VERSION = MX.VERSION
                            AND     EI.SEQ = MX.SEQ
                            AND     EI.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
                            GROUP   BY C_ITEM_ID
                            ) ET,
                            (
                            /* 수출판매계획 */
                            SELECT  EX.ITEM_ID, SUM(EX.EXPORT_PLAN) EXPORT_PLAN
                            FROM    PLANT_ALLOC_ITEM_ADJ EX,
                                    (
	                                SELECT  MAX(PV.VERSION)	VERSION
	                                FROM    PLAN_VERSION_LOG PV
	                                WHERE   PV.PERIOD_TYPE = 'DAILY'
	                                AND     PV.CAT_ID = 'FA'
	                                AND     PV.VERSION IS NOT NULL
	                                AND     PV.SEQ IS NOT NULL
	                                AND     SEQ	= '2' 
			                        ) MX,
			                        (
			                        -- DEFAULT : 차주, 차주 월요일
			                    #if("$!{checked_weekly}" == "w0")
			                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
			                    #elseif("$!{checked_weekly}" == "w2")
			                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
			                    #else
			                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
			                    #end                                  
			                        FROM   DUAL
			                        ) WK
                            WHERE   EX.VERSION = MX.VERSION
                            AND     EX.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
                            GROUP   BY EX.ITEM_ID
                            ) EX,
			                ITEM_MST IM,
			                (
			                /* 구분(제품 분류) */
			                SELECT  CD, CD_NAME
			                FROM    CODE_MST
			                WHERE   CD_GRP = 'SALES_CAT1'
			                ) CM
			        WHERE   IL.ITEM_ID = FA.ITEM_ID(+)
			        AND     IL.ITEM_ID = PS.ITEM_ID(+)
			        AND     IL.ITEM_ID = ET.ITEM_ID(+)
			        AND     IL.ITEM_ID = EX.ITEM_ID(+)
			        AND     IL.ITEM_ID = IM.ITEM_ID(+)  
			        AND     IM.SALES_CAT01 = CM.CD(+) 
			    #if("$!{checked_domain}" == "DO")
			        /* 내수 제품*/
			        AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
			    #elseif("$!{checked_domain}" == "EX")
			        /* 수출 제품*/
			        AND     IM.MATERIAL_GROUP &gt;= '5K000'
			        AND     IM.MATERIAL_GROUP &lt;= '5S999'
			    #end   
			        ORDER   BY IL.ITEM_ID
			        ) A,
			        (
			        SELECT  '1' AS NO FROM DUAL
                    UNION   ALL
                    SELECT  '2' AS NO FROM DUAL
                    UNION   ALL
                    SELECT  '3' AS NO FROM DUAL
			        ) B
			GROUP   BY DECODE(NO,1,A.CD,2,A.CD,3,NULL),
                       DECODE(NO,1,A.CD_NAME,2,CD_NAME||'합계',3,'전체합계'),
                       DECODE(NO,1,A.ITEM_ID,2,NULL,NULL),
                       DECODE(NO,1,A.ITEM_NAME,2,NULL,NULL),
                       DECODE(NO,1,A.MTO_MTS_TYPE,NULL),
                       NO
			--ORDER   BY 2, 3, 4
			UNION	ALL
			/* 면, 스낵 합계  */
			SELECT  '2','1011','면,스낵 합계','','','',SUM(FA.FA_QTY), SUM(EX.EXPORT_PLAN), SUM(PS.PS_QTY), 
                            SUM((NVL(PS.PS_QTY,0) - NVL(FA.FA_QTY,0))) AS DIFF, SUM(ET.ETC_QTY)
	        FROM    (
	        		/* 제품 리스트(공장할당 제품 union 생산계획 제품) */
                    --공장 할당 제품
	                SELECT  PA.ITEM_ID
	                FROM    PLANT_ALLOC_PLAN PA,
	                        (
	                        SELECT  PVL.VERSION, PVL.SEQ
	                        FROM    (
	                                SELECT  PV.VERSION, PV.SEQ
	                                FROM    PLAN_VERSION_LOG PV
	                                WHERE   PV.PERIOD_TYPE = 'DAILY'
	                                AND     PV.CAT_ID = 'FA'
	                                AND     PV.VERSION IS NOT NULL
	                                AND     PV.SEQ IS NOT NULL
	                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
	                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
	                                ) PVL
	                        WHERE   ROWNUM = 1       
	                        ) MX,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK,
	                        ITEM_MST IM
	                WHERE   PA.VERSION = MX.VERSION
	                AND     PA.SEQ = MX.SEQ
	                AND		PA.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
	                GROUP   BY PA.ITEM_ID                           
	                UNION 
	                --생산 계획 제품  
	                SELECT  DS.ITEM_ID
	                FROM    DAILY_SCH_PLAN_SHIFT DS,
	                        V_HRCHY_PROC VH,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK,
	                        ITEM_MST IM
	                WHERE   DS.CAT_ID = 'PS'
	                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
	                AND     DS.PLANT_ID = VH.PLANT_ID
	                AND     DS.PROC_ID = VH.PROC_ID
	                AND     VH.CAT = '포장'
	                AND     DS.ITEM_ID = IM.ITEM_ID
	                AND     IM.ITYPE = 'FERT'
	                AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD')
	                GROUP   BY DS.ITEM_ID
	                ) IL,
	                (
	                /* 공장할당량 */
	                SELECT  PA.ITEM_ID, SUM(PA.QTY) FA_QTY
	                FROM    PLANT_ALLOC_PLAN PA,
	                        (
	                        SELECT  PVL.VERSION, PVL.SEQ
	                        FROM    (
	                                SELECT  PV.VERSION, PV.SEQ
	                                FROM    PLAN_VERSION_LOG PV
	                                WHERE   PV.PERIOD_TYPE = 'DAILY'
	                                AND     PV.CAT_ID = 'FA'
	                                AND     PV.VERSION IS NOT NULL
	                                AND     PV.SEQ IS NOT NULL
	                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
	                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
	                                ) PVL
	                        WHERE   ROWNUM = 1       
	                        ) MX,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK
	                WHERE   PA.VERSION = MX.VERSION
	                AND     PA.SEQ = MX.SEQ
	                AND		PA.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
	                GROUP   BY PA.ITEM_ID
	                ) FA,
	                (
	                /* 생산계획량 */ 
	                SELECT  DS.ITEM_ID, SUM(DS.SHIFT_QTY) PS_QTY
	                FROM    DAILY_SCH_PLAN_SHIFT DS,
	                        V_HRCHY_PROC VH,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK
	                WHERE   DS.CAT_ID = 'PS'
	                AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
	                AND     DS.PLANT_ID = VH.PLANT_ID
	                AND     DS.PROC_ID = VH.PROC_ID
	                AND     VH.CAT = '포장'
	                AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD')
	                GROUP   BY DS.ITEM_ID
	                ) PS,
                    (
                    /* 유통가공품량 */
                    SELECT  EI.C_ITEM_ID ITEM_ID, SUM(EI.ETC_QTY) ETC_QTY
                    FROM    ETC_INFO_DTL EI,
                            (
	                        SELECT  PVL.VERSION, PVL.SEQ
	                        FROM    (
	                                SELECT  PV.VERSION, PV.SEQ
	                                FROM    PLAN_VERSION_LOG PV
	                                WHERE   PV.PERIOD_TYPE = 'DAILY'
	                                AND     PV.CAT_ID = 'FA'
	                                AND     PV.VERSION IS NOT NULL
	                                AND     PV.SEQ IS NOT NULL
	                                AND     TO_NUMBER(PV.STATUS) &gt; '22' 
	                                ORDER   BY PV.VERSION DESC, PV.SEQ DESC    
	                                ) PVL
	                        WHERE   ROWNUM = 1       
	                        ) MX,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK
                    WHERE   EI.VERSION = MX.VERSION
                    AND     EI.SEQ = MX.SEQ
                    AND     EI.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
                    GROUP   BY C_ITEM_ID
                    ) ET,
                    (
                    /* 수출판매계획 */
                    SELECT  EX.ITEM_ID, SUM(EX.EXPORT_PLAN) EXPORT_PLAN
                    FROM    PLANT_ALLOC_ITEM_ADJ EX,
                            (
                            SELECT  MAX(PV.VERSION)	VERSION
                            FROM    PLAN_VERSION_LOG PV
                            WHERE   PV.PERIOD_TYPE = 'DAILY'
                            AND     PV.CAT_ID = 'FA'
                            AND     PV.VERSION IS NOT NULL
                            AND     PV.SEQ IS NOT NULL
                            AND     SEQ	= '2' 
	                        ) MX,
	                        (
	                        -- DEFAULT : 차주, 차주 월요일
	                    #if("$!{checked_weekly}" == "w0")
	                        SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
	                    #elseif("$!{checked_weekly}" == "w2")
	                        SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
	                    #else
	                        SELECT NEXT_DAY(SYSDATE,2) MON --차주
	                    #end                                  
	                        FROM   DUAL
	                        ) WK
                    WHERE   EX.VERSION = MX.VERSION
                    AND     EX.DUE_DATE BETWEEN TO_DATE(TO_CHAR(WK.MON,'YYYYMMDD'),'YYYYMMDD') AND TO_DATE(TO_CHAR(WK.MON+6,'YYYYMMDD'),'YYYYMMDD')
                    GROUP   BY EX.ITEM_ID
                    ) EX,
	                ITEM_MST IM,
	                (
	                /* 구분(제품 분류) */
	                SELECT  CD, CD_NAME
	                FROM    CODE_MST
	                WHERE   CD_GRP = 'SALES_CAT1'
	                ) CM
	        WHERE   IL.ITEM_ID = FA.ITEM_ID(+)
	        AND     IL.ITEM_ID = PS.ITEM_ID(+)
	        AND     IL.ITEM_ID = ET.ITEM_ID(+)
	        AND     IL.ITEM_ID = EX.ITEM_ID(+)
	        AND     IL.ITEM_ID = IM.ITEM_ID(+)    
	        AND     IM.SALES_CAT01 = CM.CD(+) 
	    #if("$!{checked_domain}" == "DO")
	        /* 내수 제품*/
	        AND     (IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999')
	    #elseif("$!{checked_domain}" == "EX")
	        /* 수출 제품*/
	        AND     IM.MATERIAL_GROUP &gt;= '5K000'
	        AND     IM.MATERIAL_GROUP &lt;= '5S999'
	    #end
	    	AND     IM.SALES_CAT01 IN ('100','101') 
            ORDER   BY 2, 3, 4
	
	</query>
	
	<!-- 공장 및 버전 리스트 -->
	<query id="plant_and_version_list">
	
		#if("$!{plant_version}" == "")
			SELECT	PLANT_ID, VERSION
			FROM	DAILY_SCH_PLAN_SHIFT
			WHERE	1 = 0	
		#else
			SELECT  DISTINCT HR.HID_NAME PLANT_NAME, DS.VERSION, DS.PLANT_ID
			FROM    DAILY_SCH_PLAN_SHIFT DS, HRCHY HR
			WHERE   DS.CAT_ID = 'PS'
			AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
			AND     HR.LVL_TYPE = '공장'
			AND     DS.PLANT_ID = HR.HID
			ORDER   BY DS.PLANT_ID
		#end
	
	</query>
	
	<!-- 
	===============================
	   생산계획 분석(재구성) 공통 쿼리
	===============================
	-->
	
	<!-- 인터페이스 일자 -->
	<query id="if_dttm_list">
	
			SELECT  (
                    SELECT  TO_CHAR(MAX(IF_DTTM),'YYYY-MM-DD') STOCK_IF_DTTM
                    FROM    ERP_STOCK
                    ) STOCK_IF_DTTM, 
                    (
                    SELECT  TO_CHAR(MAX(IF_DTTM),'YYYY-MM-DD') PO_IF_DTTM
                    FROM    ERP_PO        
                    ) PO_IF_DTTM,
                    (
                    SELECT  TO_CHAR(MAX(IF_DTTM),'YYYY-MM-DD') WIP_IF_DTTM
                    FROM    ERP_WIP
                    ) WIP_IF_DTTM,
                    (
                    SELECT  TO_CHAR(MAX(IF_DTTM),'YYYY-MM-DD') STO_IF_DTTM
                    FROM    ERP_STO
                    ) STO_IF_DTTM,
                    (
                    SELECT  TO_CHAR(MAX(IF_DTTM),'YYYY-MM-DD') MSP_IF_DTTM
                    FROM    MAT_STORE_PLAN
                    ) MSP_IF_DTTM
            FROM    DUAL   
	
	</query>
	
	<!-- V_POST_PRE_PROC 테이블 삭제 -->
	<query id="V_POST_PRE_PROC_DELETE">
	
			DELETE  V_POST_PRE_PROC
	
	</query>
	
	<!-- V_POST_PRE_PROC 테이블에 V_POST_PRE_PROC_TMP VIEW 데이터 INSERT -->
	<query id="V_POST_PRE_PROC_INSERT">
	
			INSERT  INTO V_POST_PRE_PROC
			SELECT  PLANT_ID, ITEM_ID, PROC_ID, PROD_VER, SHIFT_INDEX, END_SYNC_FLAG 
			FROM    V_POST_PRE_PROC_TMP
	
	</query>
	
	
	<!-- 
	===============================
	   일간 반제품 생산계획 분석(재구성)
	===============================
	-->
	
	<!-- 물량에 대한 시간 정보(capa) -->
	<query id="semi_capa_info_qty_per_hour">
	
			SELECT  DISTINCT 
			        ROUND(IC.CONV_QTY/IC.QTY)||' '||IC.CONV_UOM AS MIN_QTY 
			FROM    ITEM_CAPA IC
			WHERE   IC.PLANT_ID = '$!{plant_id}'
			AND     IC.ITEM_ID = '$!{item_id}'
			AND     IC.OPER_ID = '0010'
			AND		IC.MADE_TYPE != 'DE'
			AND     IC.PROD_VER = (
			                        SELECT  DISTINCT PROD_VER
			                        FROM    ITEM_CAPA
			                        WHERE   PLANT_ID = IC.PLANT_ID
			                        AND     ITEM_ID = IC.ITEM_ID
			                        AND     PROC_ID = '$!{proc_id}'
			                        AND		MADE_TYPE != 'DE'
			                      )
	
	</query>
	
	<!-- EXCEL DOWNLOAD -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNewExcelDown_popup">
	
            SELECT  DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL)                    PLANT_NAME ,    --2 공장       1       
                    DECODE(NO,1,TL.TEAM_NAME,2, NULL)                               TEAM_NAME,      --3 원가부문    2 
                    DECODE(NO,1,TL.PROC_ID, NULL)                                   PROC_ID,        --6 작업장 코드	3      
                    DECODE(NO,1,TL.PROC_NAME, NULL)                                 PROC_NAME,      --7 작업장 명   4    
                    DECODE(NO,1,TL.ITEM_ID, NULL)                                   ITEM_ID,        --8 제품 코드    5    
                    DECODE(NO,1,TL.ITEM_NAME, NULL)                                 ITEM_NAME,      --9 제품 명      6    
                    DECODE(NO,1,TL.SPEC,NULL)                                       SPEC,           --10 규격        7     
                    ''                       										LABOR_WOMAN,    --62 TO 여          8
                    ''                              								MTO_MTS_TYPE,   --13 MTO/MTS        9         
                    ''                                     							ORD_NO,			--   ORD_NO		10
                    ''                                     							ORD_ITEM_NO,	--   ORD_ITEM_NO		11
                    /* SHIFT별 수량 */                                                                                   
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01A,TL.D01A)),'999,999,999'))  D01A,           --14 월/조        12   
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01B,TL.D01B)),'999,999,999'))  D01B,           --15 월/주         13  
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01C,TL.D01C)),'999,999,999'))  D01C,           --16 월/야          14 
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02A,TL.D02A)),'999,999,999'))  D02A,           --17 화/조           15
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02B,TL.D02B)),'999,999,999'))  D02B,           --18 화/주           16
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02C,TL.D02C)),'999,999,999'))  D02C,           --19 화/야           17
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03A,TL.D03A)),'999,999,999'))  D03A,           --20 수/조           18
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03B,TL.D03B)),'999,999,999'))  D03B,           --21 수/주           19
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03C,TL.D03C)),'999,999,999'))  D03C,           --22 수/야           20
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04A,TL.D04A)),'999,999,999'))  D04A,           --23 목/조           21
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04B,TL.D04B)),'999,999,999'))  D04B,           --24 목/주           22
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04C,TL.D04C)),'999,999,999'))  D04C,           --25 목/야           23
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05A,TL.D05A)),'999,999,999'))  D05A,           --26 금/조           24
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05B,TL.D05B)),'999,999,999'))  D05B,           --27 금/주           25
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05C,TL.D05C)),'999,999,999'))  D05C,           --28 금/야           26
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06A,TL.D06A)),'999,999,999'))  D06A,           --29 토/조           27
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06B,TL.D06B)),'999,999,999'))  D06B,           --30 토/주           28
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06C,TL.D06C)),'999,999,999'))  D06C,           --31 토/야           29
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07A,TL.D07A)),'999,999,999'))  D07A,           --32 일/조           30
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07B,TL.D07B)),'999,999,999'))  D07B,           --33 일/주           31
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07C,TL.D07C)),'999,999,999'))  D07C,           --34 일/야           32
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.TOT, TL.TOT)) ,'999,999,999'))  TOT,            --35 합계            33
                    DECODE(NO,1,TL.CAT04, NULL)                                     CAT04,          --58                34
                    DECODE(NO,1,TL.RECIPE_TYPE, NULL)                               RECIPE_TYPE    --59                 35
            FROM    (
                    SELECT  DS.PLANT_ID, DS.PLANT_NAME, DS.TEAM_NAME, DS.PROC_ID, DS.PROC_NAME, 
                            DS.ITEM_ID, DS.ITEM_NAME, DS.SPEC, DS.VERSION, DS.SEQ, 
                            -- 0001 : MTO, 0002: MTS
                            DECODE(DS.MTO_MTS_TYPE, '0001','O', '0002', 'S') MTO_MTS_TYPE,
                            CASE WHEN DS.D01A = 0 THEN NULL ELSE DS.D01A END D01A, 
                            CASE WHEN DS.D01B = 0 THEN NULL ELSE DS.D01B END D01B,
                            CASE WHEN DS.D01C = 0 THEN NULL ELSE DS.D01C END D01C,
                            ------------------------------------------------
                            CASE WHEN DS.D02A = 0 THEN NULL ELSE DS.D02A END D02A, 
                            CASE WHEN DS.D02B = 0 THEN NULL ELSE DS.D02B END D02B,
                            CASE WHEN DS.D02C = 0 THEN NULL ELSE DS.D02C END D02C,
                            ------------------------------------------------
                            CASE WHEN DS.D03A = 0 THEN NULL ELSE DS.D03A END D03A, 
                            CASE WHEN DS.D03B = 0 THEN NULL ELSE DS.D03B END D03B,
                            CASE WHEN DS.D03C = 0 THEN NULL ELSE DS.D03C END D03C,
                            ------------------------------------------------
                            CASE WHEN DS.D04A = 0 THEN NULL ELSE DS.D04A END D04A, 
                            CASE WHEN DS.D04B = 0 THEN NULL ELSE DS.D04B END D04B,
                            CASE WHEN DS.D04C = 0 THEN NULL ELSE DS.D04C END D04C,
                            ------------------------------------------------
                            CASE WHEN DS.D05A = 0 THEN NULL ELSE DS.D05A END D05A, 
                            CASE WHEN DS.D05B = 0 THEN NULL ELSE DS.D05B END D05B,
                            CASE WHEN DS.D05C = 0 THEN NULL ELSE DS.D05C END D05C,
                            ------------------------------------------------
                            CASE WHEN DS.D06A = 0 THEN NULL ELSE DS.D06A END D06A, 
                            CASE WHEN DS.D06B = 0 THEN NULL ELSE DS.D06B END D06B,
                            CASE WHEN DS.D06C = 0 THEN NULL ELSE DS.D06C END D06C,
                            ------------------------------------------------
                            CASE WHEN DS.D07A = 0 THEN NULL ELSE DS.D07A END D07A, 
                            CASE WHEN DS.D07B = 0 THEN NULL ELSE DS.D07B END D07B,
                            CASE WHEN DS.D07C = 0 THEN NULL ELSE DS.D07C END D07C,
                            DS.TOT,                    
                            ------------------------------------------------
                            DS.TEAM_ID, NVL(DS.CAT04,DS.RECIPE_TYPE) CAT04, DS.RECIPE_TYPE, DS.CAT_ID
                    FROM    (
                            SELECT  HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, HR.PROC_ID, HR.PROC_NAME, 
                                    DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE                                                
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D01A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D01B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D01C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D02A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D02B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D02C   
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D03A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D03B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D03C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D04A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D04B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D04C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D05A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D05B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D05C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D06A  
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D06B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D06C 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END) D07A 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END) D07B 
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) D07C                                                     
                                    ---------------------------------------------------------------------------------------------------------------------------
                                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)               
                                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) TOT
                                    ----------------------------------------------------------------------------------------------------------------------------
                                    , HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, DS.CAT_ID
                            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                    ITEM_MST IM, 
                                    V_LAST_PROC_LIST HR,
                                    (
                                    -- DEFAULT : 차주, 차주 월요일
                                #if("$!{checked_weekly}" == "w0")
                                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                #elseif("$!{checked_weekly}" == "w2")
                                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                #else
                                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                #end                                  
                                    FROM   DUAL
                                    ) WK
                                #if( "$!{line_grp}" != "" )
                                    ,
                                    (
                                    SELECT  CM.CAT02 PLANT_ID, CM.CAT03 LINE_ID, CM.CAT04 PROC_ID
                                    FROM    CODE_MST CM
                                    WHERE   CM.CD_GRP = 'HALB_LINE_GRP'
                                    AND     CM.CAT01 IN ($commonUtil.replaceAll("${line_grp}","''","'"))
                                    ) CM 
                                #end
                            WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' )
                            			[OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                            		)
                            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                            AND     HR.PLANT_ID = DS.PLANT_ID
                            AND     DS.PROC_ID = HR.PROC_ID
                            AND     DS.ITEM_ID = IM.ITEM_ID
                            AND     IM.ITYPE != 'FERT'
                        #if( "$!{line_grp}" != "" )
                            AND     DS.PLANT_ID = CM.PLANT_ID
                            AND     DS.PROC_ID = CM.PROC_ID 
                        #end
                            GROUP   BY HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, HR.PROC_ID, HR.PROC_NAME, DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, 
                                    DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, DS.CAT_ID   
                            ) DS
                    ) TL,
                    (
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    ) SE   
              ----------------------------------------------------------------------------------------------------------------------------------
            GROUP   BY DECODE(NO,1,TL.PLANT_ID,2,NULL),   DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL), 
                       DECODE(NO,1,TL.TEAM_NAME,2, NULL), DECODE(NO,1,TL.PROC_ID, NULL), 
                       DECODE(NO,1,TL.PROC_NAME, NULL),   DECODE(NO,1,TL.ITEM_ID, NULL),
                       DECODE(NO,1,TL.ITEM_NAME, NULL),   DECODE(NO,1,TL.SPEC,NULL),
                       DECODE(NO,1,TL.VERSION,NULL),      DECODE(NO,1,TL.SEQ,NULL),
                       NO,
                       DECODE(NO,1,TL.TEAM_ID, NULL),
                       DECODE(NO,1,TL.CAT04, NULL),
                       DECODE(NO,1,TL.RECIPE_TYPE, NULL)
            ORDER   BY 1, 2, 3, 5
	
	</query>
	
	<!--  일간 반제품 생산계획 분석(재구성) 조회 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list">
						
		#if("$!{semi_version}" == "")
			SELECT	PLANT_ID, VERSION
			FROM	DAILY_SCH_PLAN_SHIFT
			WHERE	1 = 0
		#else
            SELECT  
                    SE.NO,                                                                          --0                  
                    DECODE(NO,1,TL.PLANT_ID,2,NULL)                                 PLANT_ID,       --1 공장코드         
                    DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL)                    PLANT_NAME ,    --2 공장             
                    DECODE(NO,1,TL.TEAM_NAME,2, NULL)                               TEAM_NAME,      --3 원가부문         
                    DECODE(NO,1,TL.PO_MAN,2, NULL)                                  PO_MAN,         --4 PO 남            
                    DECODE(NO,1,TL.PO_WOMAN,2, NULL)                                PO_WOMAN,       --5 PO 여            
                    DECODE(NO,1,TL.PROC_ID, NULL)                                   PROC_ID,        --6 작업장 코드      
                    DECODE(NO,1,TL.PROC_NAME, NULL)                                 PROC_NAME,      --7 작업장 명        
                    DECODE(NO,1,TL.ITEM_ID, NULL)                                   ITEM_ID,        --8 제품 코드        
                    DECODE(NO,1,TL.ITEM_NAME, NULL)                                 ITEM_NAME,      --9 제품 명          
                    DECODE(NO,1,TL.SPEC,NULL)                                       SPEC,           --10 규격             
                    DECODE(NO,1,TL.VERSION,NULL)                                    VERSION,        --11 버전            
                    DECODE(NO,1,TL.SEQ,NULL)                                        SEQ,            --12 SEQ             
                    DECODE(NO,1,TL.MTO_MTS_TYPE, NULL)                              MTO_MTS_TYPE,   --13 MTO/MTS         
                    /* SHIFT별 수량 */                                                                                   
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01A,TL.D01A)),'999,999,999'))  D01A,           --14 월/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01B,TL.D01B)),'999,999,999'))  D01B,           --15 월/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D01C,TL.D01C)),'999,999,999'))  D01C,           --16 월/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02A,TL.D02A)),'999,999,999'))  D02A,           --17 화/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02B,TL.D02B)),'999,999,999'))  D02B,           --18 화/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D02C,TL.D02C)),'999,999,999'))  D02C,           --19 화/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03A,TL.D03A)),'999,999,999'))  D03A,           --20 수/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03B,TL.D03B)),'999,999,999'))  D03B,           --21 수/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D03C,TL.D03C)),'999,999,999'))  D03C,           --22 수/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04A,TL.D04A)),'999,999,999'))  D04A,           --23 목/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04B,TL.D04B)),'999,999,999'))  D04B,           --24 목/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D04C,TL.D04C)),'999,999,999'))  D04C,           --25 목/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05A,TL.D05A)),'999,999,999'))  D05A,           --26 금/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05B,TL.D05B)),'999,999,999'))  D05B,           --27 금/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D05C,TL.D05C)),'999,999,999'))  D05C,           --28 금/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06A,TL.D06A)),'999,999,999'))  D06A,           --29 토/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06B,TL.D06B)),'999,999,999'))  D06B,           --30 토/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D06C,TL.D06C)),'999,999,999'))  D06C,           --31 토/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07A,TL.D07A)),'999,999,999'))  D07A,           --32 일/조           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07B,TL.D07B)),'999,999,999'))  D07B,           --33 일/주           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.D07C,TL.D07C)),'999,999,999'))  D07C,           --34 일/야           
                    TRIM(TO_CHAR(SUM(DECODE(NO,1,TL.TOT, TL.TOT)) ,'999,999,999'))  TOT,            --35 합계            
                    /* SHIFT별 연장 정보 */                                                                              
                    MAX(DECODE(NO,1,WD.BG01A, NULL))                                BG01A,          --36 월/조           
                    MAX(DECODE(NO,1,WD.BG01B, NULL))                                BG01B,          --37 월/주           
                    MAX(DECODE(NO,1,WD.BG01C, NULL))                                BG01C,          --38 월/야           
                    MAX(DECODE(NO,1,WD.BG02A, NULL))                                BG02A,          --39 화/조           
                    MAX(DECODE(NO,1,WD.BG02B, NULL))                                BG02B,          --40 화/주           
                    MAX(DECODE(NO,1,WD.BG02C, NULL))                                BG02C,          --41 화/야           
                    MAX(DECODE(NO,1,WD.BG03A, NULL))                                BG03A,          --42 수/조           
                    MAX(DECODE(NO,1,WD.BG03B, NULL))                                BG03B,          --43 수/주           
                    MAX(DECODE(NO,1,WD.BG03C, NULL))                                BG03C,          --44 수/야           
                    MAX(DECODE(NO,1,WD.BG04A, NULL))                                BG04A,          --45 목/조           
                    MAX(DECODE(NO,1,WD.BG04B, NULL))                                BG04B,          --46 목/주           
                    MAX(DECODE(NO,1,WD.BG04C, NULL))                                BG04C,          --47 목/야           
                    MAX(DECODE(NO,1,WD.BG05A, NULL))                                BG05A,          --48 금/조           
                    MAX(DECODE(NO,1,WD.BG05B, NULL))                                BG05B,          --49 금/주           
                    MAX(DECODE(NO,1,WD.BG05C, NULL))                                BG05C,          --50 금/야           
                    MAX(DECODE(NO,1,WD.BG06A, NULL))                                BG06A,          --51 토/조           
                    MAX(DECODE(NO,1,WD.BG06B, NULL))                                BG06B,          --52 토/주           
                    MAX(DECODE(NO,1,WD.BG06C, NULL))                                BG06C,          --53 토/야           
                    MAX(DECODE(NO,1,WD.BG07A, NULL))                                BG07A,          --54 일/조           
                    MAX(DECODE(NO,1,WD.BG07B, NULL))                                BG07B,          --55 일/주           
                    MAX(DECODE(NO,1,WD.BG07C, NULL))                                BG07C,          --56 일/야     
            		DECODE(NO,1,TL.TEAM_ID, NULL)                                   TEAM_ID,        --57 원가부문 코드
                    DECODE(NO,1,TL.CAT04, NULL)                                     CAT04,          --58 레시피 그룹
                    DECODE(NO,1,TL.RECIPE_TYPE, NULL)                               RECIPE_TYPE,    --59 처방 유형
                    DECODE(NO,1,TRUNC(TL.LABOR_MAN,1),NULL)                         LABOR_MAN,      --60 TO 남
                    DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL)                       LABOR_WOMAN,    --61 TO 여
                    DECODE(NO,1,TL.CAT_ID,NULL)										CAT_ID			--62 계획 구분
            FROM    (
                    SELECT  
                            DS.PLANT_ID,    DS.PLANT_NAME,  DS.TEAM_NAME,   DS.PO_MAN,      DS.PO_WOMAN, 
                            DS.PROC_ID,     DS.PROC_NAME,   DS.ITEM_ID,     DS.ITEM_NAME,   DS.SPEC, 
                            DS.LABOR_MAN,   DS.LABOR_WOMAN, DS.VERSION,     DS.SEQ, 
                            DECODE(DS.MTO_MTS_TYPE, '0001','O', '0002', 'S') MTO_MTS_TYPE, -- 0001 : MTO, 0002: MTS
                            /* 수량이 0이면 화면에서 빈칸으로 표시 */
                            CASE WHEN DS.D01A = 0 THEN NULL ELSE DS.D01A END D01A, 
                            CASE WHEN DS.D01B = 0 THEN NULL ELSE DS.D01B END D01B,
                            CASE WHEN DS.D01C = 0 THEN NULL ELSE DS.D01C END D01C,
                            ------------------------------------------------
                            CASE WHEN DS.D02A = 0 THEN NULL ELSE DS.D02A END D02A, 
                            CASE WHEN DS.D02B = 0 THEN NULL ELSE DS.D02B END D02B,
                            CASE WHEN DS.D02C = 0 THEN NULL ELSE DS.D02C END D02C,
                            ------------------------------------------------
                            CASE WHEN DS.D03A = 0 THEN NULL ELSE DS.D03A END D03A, 
                            CASE WHEN DS.D03B = 0 THEN NULL ELSE DS.D03B END D03B,
                            CASE WHEN DS.D03C = 0 THEN NULL ELSE DS.D03C END D03C,
                            ------------------------------------------------
                            CASE WHEN DS.D04A = 0 THEN NULL ELSE DS.D04A END D04A, 
                            CASE WHEN DS.D04B = 0 THEN NULL ELSE DS.D04B END D04B,
                            CASE WHEN DS.D04C = 0 THEN NULL ELSE DS.D04C END D04C,
                            ------------------------------------------------
                            CASE WHEN DS.D05A = 0 THEN NULL ELSE DS.D05A END D05A, 
                            CASE WHEN DS.D05B = 0 THEN NULL ELSE DS.D05B END D05B,
                            CASE WHEN DS.D05C = 0 THEN NULL ELSE DS.D05C END D05C,
                            ------------------------------------------------
                            CASE WHEN DS.D06A = 0 THEN NULL ELSE DS.D06A END D06A, 
                            CASE WHEN DS.D06B = 0 THEN NULL ELSE DS.D06B END D06B,
                            CASE WHEN DS.D06C = 0 THEN NULL ELSE DS.D06C END D06C,
                            ------------------------------------------------
                            CASE WHEN DS.D07A = 0 THEN NULL ELSE DS.D07A END D07A, 
                            CASE WHEN DS.D07B = 0 THEN NULL ELSE DS.D07B END D07B,
                            CASE WHEN DS.D07C = 0 THEN NULL ELSE DS.D07C END D07C,
                            DS.TOT,                    
                            ------------------------------------------------
                            DS.TEAM_ID, NVL(DS.CAT04,DS.RECIPE_TYPE) CAT04, DS.RECIPE_TYPE, DS.CAT_ID
                    FROM    (
                            SELECT  
                                    A.PLANT_ID,     A.PLANT_NAME,   A.TEAM_NAME,    '' PO_MAN,      '' PO_WOMAN, 
                                    A.PROC_ID,      A.PROC_NAME,    A.ITEM_ID,      A.ITEM_NAME,    A.SPEC, 
                                    '' LABOR_MAN,   '' LABOR_WOMAN, A.VERSION,      A.SEQ,          '' MTO_MTS_TYPE,                                                
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D01A,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D01B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D01C,    
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D02A,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D02B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D02C,    
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D03A,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D03B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D03C,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D04A,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D04B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D04C,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D05A,   
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D05B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D05C,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D06A,   
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D06B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D06C,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D07A,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D07B,  
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D07C,                                                      
                                    ---------------------------------------------------------------------------------------------------------------------------
                                    SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)               
                                    + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) TOT,
                                    ----------------------------------------------------------------------------------------------------------------------------
                                    A.TEAM_ID, '' CAT04, '' RECIPE_TYPE, A.CAT_ID
                             FROM   (
                                    SELECT    
                                            HR.PLANT_ID,    HR.PLANT_NAME,  HR.TEAM_NAME,   HR.PROC_ID, HR.PROC_NAME, 
                                            DS.ITEM_ID,     IM.ITEM_NAME,   IM.SPEC,        DS.VERSION, DS.SEQ, 
                                            HR.TEAM_ID,     DS.CAT_ID,      DS.PROD_DATES,  WK.MON,     DS.SHIFT_TYPE, 
                                            DS.SHIFT_QTY
                                    FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                            ITEM_MST IM, 
                                            V_LAST_PROC_LIST HR, -- 마지막 작업장 리스트
                                            (
                                            -- DEFAULT : 차주, 차주 월요일
                                        #if("$!{checked_weekly}" == "w0")
                                            SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                        #elseif("$!{checked_weekly}" == "w2")
                                            SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                        #else
                                            SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                        #end                                  
                                            FROM   DUAL
                                            ) WK
                                        #if( "$!{line_grp}" != "" )
                                            ,
                                            (
                                            /* 라인 그룹 */
                                            SELECT  
                                                    CM.CAT02 PLANT_ID, CM.CAT03 LINE_ID, CM.CAT04 PROC_ID
                                            FROM    CODE_MST CM
                                            WHERE   CM.CD_GRP = 'HALB_LINE_GRP'
                                            AND     CM.CAT01  IN ($commonUtil.replaceAll("${line_grp}","''","'"))
                                            ) CM 
                                        #end                        
                                    WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' [$commonUtil.replaceAll("${semi_plant}","''","'")] )
                                                [OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                                            )
                                    AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                                    AND     HR.PLANT_ID = DS.PLANT_ID
                                    AND     DS.PROC_ID  = HR.PROC_ID
                                    AND     DS.ITEM_ID  NOT LIKE '72%'
                                    AND     DS.ITEM_ID  = IM.ITEM_ID
                                    AND     IM.ITYPE   != 'FERT'                            
                                #if( "$!{line_grp}" != "" )
                                    AND     DS.PLANT_ID = CM.PLANT_ID
                                    AND     DS.PROC_ID  = CM.PROC_ID 
                                #end
                                    UNION ALL
                                    SELECT  
                                            HR.PLANT_ID,    HR.PLANT_NAME,  HR.TEAM_NAME,   HR.PROC_ID,     HR.PROC_NAME,   
                                            DS.ITEM_ID,     IM.ITEM_NAME,   IM.SPEC,        DS.VERSION,     DS.SEQ, 
                                            HR.TEAM_ID,     DS.CAT_ID,      DS.PROD_DATES,  WK.MON,         DS.SHIFT_TYPE, 
                                            DS.SHIFT_QTY
                                    FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                            ITEM_MST IM, 
                                            V_HRCHY_PROC HR, -- 작업장 리스트
                                            (
                                            -- DEFAULT : 차주, 차주 월요일
                                        #if("$!{checked_weekly}" == "w0")
                                            SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                        #elseif("$!{checked_weekly}" == "w2")
                                            SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                        #else
                                            SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                        #end                                  
                                            FROM   DUAL
                                            ) WK,
                                            (
                                            /* 기지류의 첫공정(투입공정) 추출 */
                                            SELECT  
                                                    PLANT_ID, ITEM_ID, PROD_VER, LINE_ID, PROC_ID
                                            FROM    SCH_OPER_RANK_SEMI
                                            WHERE   ITEM_ID   LIKE '72%'
                                            AND     OPER_RANK = 1
                                            ) OP
                                        #if( "$!{line_grp}" != "" )
                                            ,
                                            (
                                            /* 라인 그룹 */
                                            SELECT  
                                                    CM.CAT02 PLANT_ID, CM.CAT03 LINE_ID, CM.CAT04 PROC_ID
                                            FROM    CODE_MST CM
                                            WHERE   CM.CD_GRP = 'HALB_LINE_GRP'
                                            AND     CM.CAT01  IN ($commonUtil.replaceAll("${line_grp}","''","'"))
                                            ) CM 
                                        #end                        
                                    WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' [$commonUtil.replaceAll("${semi_plant}","''","'")] )
                                                [OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                                            ) 
                                    AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                                    AND     HR.PLANT_ID = DS.PLANT_ID
                                    AND     DS.ITEM_ID  LIKE '72%'
                                    AND     HR.PROC_ID  = DS.PROC_ID
                                    AND     DS.PLANT_ID = OP.PLANT_ID 
                                    AND     DS.ITEM_ID  = OP.ITEM_ID 
                                    AND     DS.PROD_VER = OP.PROD_VER 
                                    AND     DS.LINE_ID  = OP.LINE_ID 
                                    AND     DS.PROC_ID  = OP.PROC_ID
                                    AND     DS.ITEM_ID  = IM.ITEM_ID
                                    AND     IM.ITYPE   != 'FERT'                            
                                #if( "$!{line_grp}" != "" )
                                    AND     DS.PLANT_ID = CM.PLANT_ID
                                    AND     DS.PROC_ID  = CM.PROC_ID 
                                #end
                                    ) A
                            GROUP   BY A.PLANT_ID,  A.PLANT_NAME,   A.TEAM_NAME,    A.PROC_ID,  A.PROC_NAME, 
                                       A.ITEM_ID,   A.ITEM_NAME,    A.SPEC,         A.VERSION,  A.SEQ, 
                                       A.TEAM_ID,   A.CAT_ID     
                            ) DS
                    ) TL,
                    (
                    /*
                   * 1: 제품별 수량   2: shift별 총 합계
                   */
                    SELECT  1 NO FROM DUAL
                    UNION   ALL
                    SELECT  2 NO FROM DUAL       
                    ) SE,
                    (
                    /* 작업장별  연장 정보 */
                    -- O : 연장 , N : 일반
                    SELECT  PLANT_ID, PROC_ID,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+0,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG01C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+1,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG02C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+2,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG03C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+3,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG04C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+4,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG05C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+5,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG06C,
                            -------------------------------------------------------------------------------------------------
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '1'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07A,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '3'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07B,
                            MAX(CASE
                            WHEN WD.DUTY_DATE = TO_CHAR(WK.MON+6,'YYYYMMDD')
                                    AND DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') = '5'
                            THEN 
                                 SUBSTR(WORKTY_ID,2,1) 
                            ELSE NULL
                            END) BG07C
                            -------------------------------------------------------------------------------------------------
                    FROM    WORK_DIARY WD,
                            (
                            -- DEFAULT : 차주, 차주 월요일
                        #if("$!{checked_weekly}" == "w0")
                            SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                        #elseif("$!{checked_weekly}" == "w2")
                            SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                        #else
                            SELECT NEXT_DAY(SYSDATE,2) MON --차주
                        #end 
                            FROM   DUAL
                            ) WK
                    WHERE   WD.DUTY_DATE &gt;= TO_CHAR(WK.MON,'YYYYMMDD')
                    AND     WD.DUTY_DATE &lt;= TO_CHAR(WK.MON+6,'YYYYMMDD')
                    GROUP   BY WD.PLANT_ID, WD.PROC_ID
                    ) WD   
            WHERE   TL.PLANT_ID = WD.PLANT_ID
            AND     TL.PROC_ID  = WD.PROC_ID               
              ----------------------------------------------------------------------------------------------------------------------------------
            GROUP   BY DECODE(NO,1,TL.PLANT_ID,2,NULL),             DECODE(NO,1,TL.PLANT_NAME,2,'전체합계',NULL), 
                       DECODE(NO,1,TL.TEAM_NAME,2, NULL),           DECODE(NO,1,TL.PO_MAN,2, NULL),
                       DECODE(NO,1,TL.PO_WOMAN,2, NULL),            DECODE(NO,1,TL.PROC_ID, NULL), 
                       DECODE(NO,1,TL.PROC_NAME, NULL),             DECODE(NO,1,TL.ITEM_ID, NULL),
                       DECODE(NO,1,TL.ITEM_NAME, NULL),             DECODE(NO,1,TL.SPEC,NULL),
                       DECODE(NO,1,TL.VERSION,NULL),                DECODE(NO,1,TL.SEQ,NULL),
                       DECODE(NO,1,TL.MTO_MTS_TYPE, NULL),          NO,
                       DECODE(NO,1,TL.TEAM_ID, NULL),               DECODE(NO,1,TL.CAT04, NULL),
                       DECODE(NO,1,TL.RECIPE_TYPE, NULL),           DECODE(NO,1,TRUNC(TL.LABOR_MAN,1),NULL), 
                       DECODE(NO,1,TRUNC(TL.LABOR_WOMAN,1),NULL),   DECODE(NO,1,TL.CAT_ID,NULL)
            ORDER   BY 2, 58, 7, 9         
        #end
        		
	</query>
	
	<!-- 반제품 버전 및 완제품 공장 & 버전 리스트 -->
	<query id="semi_plant_and_version_list">
	
		#if("$!{semi_version}" == "")
			SELECT	PLANT_ID, VERSION
			FROM	DAILY_SCH_PLAN_SHIFT
			WHERE	1 = 0	
		#elseif("$!{plant_version}" == "")
            SELECT  '반제품' PLANT_NAME, '$!{semi_version}' VERSION, '0' PLANT_ID
            FROM    DUAL
            ORDER   BY 3
        #else
        	SELECT  DISTINCT HR.HID_NAME PLANT_NAME, DS.VERSION, DS.PLANT_ID
            FROM    DAILY_SCH_PLAN_SHIFT DS, HRCHY HR
            WHERE   DS.CAT_ID = 'PS'
            AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
            AND     HR.LVL_TYPE = '공장'
            AND     DS.PLANT_ID = HR.HID
            UNION   ALL
            SELECT  '반제품' PLANT_NAME, '$!{semi_version}' VERSION, '0' PLANT_ID
            FROM    DUAL
            ORDER   BY 3
		#end	
	
	</query>
	
	<!-- 반제품 생산계획 앞 공정 생성 SP-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_sp">
		
		call sp_12020_dailySemifinished('$!{_user_id}')	
		
	</query>
	
	<!-- 반제품 등록 버튼 저장-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNewItem_reg_save" fix="_user_id" iterator="input_plant_id input_version input_proc_id input_prod_dates input_shift_type input_item_id input_shift_qty">
	
		INSERT  INTO DAILY_SCH_PLAN_MATRIX_SEMI (
		            PLANT_ID, VERSION, PROC_ID, ITEM_ID, PROD_DATES, SHIFT_TYPE, SHIFT_QTY, CRUD,
		            MADE_DTTM, MADE_BY)
		SELECT  '$!{input_plant_id}' ,'$!{input_version}' ,'$!{input_proc_id}' ,'$!{input_item_id}' , '$!{input_prod_dates}', '$!{input_shift_type}' ,REPLACE('$!{input_shift_qty}',',',''),'C' ,SYSDATE ,'$!{_user_id}' FROM DUAL			                
	
	</query>
	
	<!-- 반제품 저장 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_temp_save" fix="_user_id" iterator="plant_id version proc_id item_id shift_1_mon_prod_dates shift_1_mon_shift_type shift_1_mon shift_3_mon_prod_dates shift_3_mon_shift_type shift_3_mon shift_5_mon_prod_dates shift_5_mon_shift_type shift_5_mon shift_1_tue_prod_dates shift_1_tue_shift_type shift_1_tue shift_3_tue_prod_dates shift_3_tue_shift_type shift_3_tue shift_5_tue_prod_dates shift_5_tue_shift_type shift_5_tue shift_1_wed_prod_dates shift_1_wed_shift_type shift_1_wed shift_3_wed_prod_dates shift_3_wed_shift_type shift_3_wed shift_5_wed_prod_dates shift_5_wed_shift_type shift_5_wed shift_1_thu_prod_dates shift_1_thu_shift_type shift_1_thu shift_3_thu_prod_dates shift_3_thu_shift_type shift_3_thu shift_5_thu_prod_dates shift_5_thu_shift_type shift_5_thu shift_1_fri_prod_dates shift_1_fri_shift_type shift_1_fri shift_3_fri_prod_dates shift_3_fri_shift_type shift_3_fri shift_5_fri_prod_dates shift_5_fri_shift_type shift_5_fri shift_1_sat_prod_dates shift_1_sat_shift_type shift_1_sat shift_3_sat_prod_dates shift_3_sat_shift_type shift_3_sat shift_5_sat_prod_dates shift_5_sat_shift_type shift_5_sat shift_1_sun_prod_dates shift_1_sun_shift_type shift_1_sun shift_3_sun_prod_dates shift_3_sun_shift_type shift_3_sun shift_5_sun_prod_dates shift_5_sun_shift_type shift_5_sun mon_shift1_check_flag tue_shift1_check_flag wed_shift1_check_flag thu_shift1_check_flag fri_shift1_check_flag sat_shift1_check_flag sun_shift1_check_flag mon_shift3_check_flag tue_shift3_check_flag wed_shift3_check_flag thu_shift3_check_flag fri_shift3_check_flag sat_shift3_check_flag sun_shift3_check_flag mon_shift5_check_flag tue_shift5_check_flag wed_shift5_check_flag thu_shift5_check_flag fri_shift5_check_flag sat_shift5_check_flag sun_shift5_check_flag">

        insert into DAILY_SCH_PLAN_MATRIX_SEMI
                    (
                        PLANT_ID    
                       ,VERSION     
                       ,PROC_ID     
                       ,ITEM_ID     
                       ,PROD_DATES  
                       ,SHIFT_TYPE  
                       ,SHIFT_QTY   
                       ,MADE_DTTM   
                       ,MADE_BY     
                    )
                    --월(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_mon_shift_type}' ,replace('$!{shift_1_mon}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_mon_shift_type}' ,replace('$!{shift_3_mon}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_mon_shift_type}' ,replace('$!{shift_5_mon}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --화(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_tue_shift_type}' ,replace('$!{shift_1_tue}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_tue_shift_type}' ,replace('$!{shift_3_tue}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_tue_shift_type}' ,replace('$!{shift_5_tue}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --수(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_wed_shift_type}' ,replace('$!{shift_1_wed}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_wed_shift_type}' ,replace('$!{shift_3_wed}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_wed_shift_type}' ,replace('$!{shift_5_wed}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --목(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_thu_shift_type}' ,replace('$!{shift_1_thu}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_thu_shift_type}' ,replace('$!{shift_3_thu}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_thu_shift_type}' ,replace('$!{shift_5_thu}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --금(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_fri_shift_type}' ,replace('$!{shift_1_fri}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_fri_shift_type}' ,replace('$!{shift_3_fri}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_fri_shift_type}' ,replace('$!{shift_5_fri}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --토(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_sat_shift_type}' ,replace('$!{shift_1_sat}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_sat_shift_type}' ,replace('$!{shift_3_sat}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_sat_shift_type}' ,replace('$!{shift_5_sat}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    --일(조/주/야)------------------------------------------------------------------------------------------------------------------
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_1_sun_shift_type}' ,replace('$!{shift_1_sun}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all 
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_3_sun_shift_type}' ,replace('$!{shift_3_sun}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL union all
                    select '$!{plant_id}' ,'$!{version}' ,'$!{proc_id}' ,'$!{item_id}' ,to_char(to_date('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') ,'$!{shift_5_sun_shift_type}' ,replace('$!{shift_5_sun}',',','') ,SYSDATE ,'$!{_user_id}' from DUAL 
	</query>

	
	
	<!-- 제품 생산 가능 작업장(마지막공정) 리스트 -->
	<query id="daily_semi_analysis_new_popup_proc_list">
	
			SELECT  DISTINCT IC.PROC_ID, HR.PROC_NAME
			FROM    ITEM_CAPA IC,
			        V_LAST_PROC_LIST HR
			WHERE   IC.MADE_TYPE != 'DE'
			AND 	IC.ITEM_ID = '$!{item_id}'
			AND		IC.PLANT_ID = '$!{plant_id}'
			AND     IC.PLANT_ID = HR.PLANT_ID
			AND     IC.PROC_ID = HR.PROC_ID
			ORDER   BY IC.PROC_ID
	
	</query>
	
	<!-- 수정 POPUP : 조회 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_popup">
	
            SELECT  DS.PLANT_ID, HR.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID
                    , IM.ITEM_NAME, DS.LINE_ID, DS.PROC_ID, HR.PROC_NAME
                    , TO_CHAR(TO_DATE(DS.PROD_DATES,'YYYYMMDD'),'YYYY-MM-DD') PROD_DATES, DS.SHIFT_TYPE
                    , TO_CHAR(DS.START_DTTM,'YYYYMMDD') AS START_DTTM_DATE
                    , TO_CHAR(DS.START_DTTM,'HH24MISS') AS START_DTTM_TIME
                    , DS.END_DTTM, DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD, DS.GRP_WO_ID
                    , IC.CAPA_MC, IC.QTY, IC.QTY_UOM, DS.PROD_VER, IC.MC_QTY
              FROM  DAILY_SCH_PLAN_SHIFT DS, ITEM_MST IM
                    , V_LAST_PROC_LIST HR
                    , (     SELECT  DISTINCT
                                    IC.PLANT_ID, IC.ITEM_ID, IC.LINE_ID, IC.PROC_ID, IC.CAPA_MC, IC.QTY, IC.QTY_UOM, IC.PROD_VER, IC.MC_QTY
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND		IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROC_ID = '$!{proc_id}' ) IC
             WHERE  DS.CAT_ID = '$!{cat_id}'
               AND  DS.PLANT_ID = '$!{plant_id}'
               AND  DS.PROC_ID = '$!{proc_id}'
               AND  DS.ITEM_ID = '$!{item_id}'
               AND  DS.VERSION = '$!{version}'
               AND  DS.PROD_DATES = TO_CHAR(TO_DATE('$!{prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD') 
               AND  DS.SHIFT_TYPE = '$!{shift_type}' 
               AND  DS.PLANT_ID = HR.PLANT_ID(+)
               AND  DS.PROC_ID = HR.PROC_ID(+)
               AND  DS.ITEM_ID = IM.ITEM_ID(+)
               AND  DS.ITEM_ID = IC.ITEM_ID(+)
               AND  DS.LINE_ID = IC.LINE_ID(+)
               AND  DS.PROD_VER = IC.PROD_VER(+)
    
	</query>
	
	<!-- 등록 POPUP : 조회 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_reg">

        #if( "$!{flag}" == "M" )
            SELECT  DS.CAT_ID, DS.PLANT_ID, VH.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, 
                    DS.ITEM_ID, IM.ITEM_NAME, DS.LINE_ID, VH.LINE_NAME, DS.PROC_ID,
                    VH.PROC_NAME, DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM,
                    DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    DS.PROD_VER, DS.GRP_WO_ID,
                    TO_CHAR(DS.START_DTTM,'YYYYMMDD') START_DATE,
                    TO_CHAR(DS.START_DTTM,'HH24MISS') START_TIME,
                    TO_CHAR(DS.END_DTTM,'YYYYMMDD') END_DATE,
                    TO_CHAR(DS.END_DTTM,'HH24MISS') END_TIME,
                    IC.OPER_ID
            FROM    DAILY_SCH_PLAN_SHIFT DS,
                    V_HRCHY_PROC VH,
                    ITEM_MST IM,
                    (
                    SELECT  DISTINCT PLANT_ID, ITEM_ID , PROC_ID, PROD_VER, OPER_ID
                    FROM    ITEM_CAPA 
                    )IC
            WHERE   DS.CAT_ID = '$!{cat_id}'
        #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS") 
		    AND		DS.PLANT_ID = '$!{semi_plant_id}'
		    AND		DS.VERSION = '$!{semi_version}'
		#else
            AND     DS.PLANT_ID = '$!{plant_id}'
            AND     DS.VERSION = '$!{version}'
        #end
            AND     DS.SEQ = '$!{seq}'
            AND     DS.ITEM_ID = '$!{item_id}'
            AND     DS.WO_ID = (
                                SELECT  WO_ID
                                FROM    DAILY_SCH_PLAN_SHIFT
                                WHERE   CAT_ID = DS.CAT_ID
                                AND     PLANT_ID = DS.PLANT_ID
                                AND     VERSION = DS.VERSION
                                AND     SEQ = DS.SEQ
                                AND     ITEM_ID = DS.ITEM_ID
                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
                                AND     SHIFT_TYPE = '$!{shift_type}'
                                AND     PROC_ID = '$!{proc_id}'
                               )
            AND     DS.PLANT_ID = VH.PLANT_ID
            AND     DS.PROC_ID = VH.PROC_ID
            AND     DS.ITEM_ID = IM.ITEM_ID
            AND     DS.PROD_VER = (
                                    SELECT  DISTINCT PROD_VER
	                                FROM    DAILY_SCH_PLAN_SHIFT
	                                WHERE   CAT_ID = DS.CAT_ID
	                                AND     PLANT_ID = DS.PLANT_ID
	                                AND     VERSION = DS.VERSION
	                                AND     SEQ = DS.SEQ
	                                AND     ITEM_ID = DS.ITEM_ID
	                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
	                                AND     SHIFT_TYPE = '$!{shift_type}'
	                                AND     PROC_ID = '$!{proc_id}'
                                  )
            AND     DS.PLANT_ID = IC.PLANT_ID
            AND     DS.ITEM_ID = IC.ITEM_ID
            AND     DS.PROC_ID = IC.PROC_ID
            AND     DS.PROD_VER = IC.PROD_VER                                       
            ORDER   BY 28, 13, 14, 15                                                                   
        #else	
            SELECT  DS.CAT_ID, DS.PLANT_ID, VH.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.ITEM_NAME, 
                    DS.LINE_ID, VH.LINE_NAME, DS.PROC_ID, VH.PROC_NAME,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
                    CASE
                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
                    THEN    
                            DS.END_TIME
                    ELSE
                            WD.END_TIME
                    END                                                         AS END_DTTM,
                    DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    DS.PROD_VER, DS.WO_ID AS GRP_WO_ID,
                    '' START_DATE,
                    '' START_TIME,
                    '' END_DATE,
                    '' END_TIME
            FROM    (
                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, A.ITEM_NAME, B.LINE_ID, B.PROC_ID, 
                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME
                    FROM    (
                            SELECT  '$!{cat_id}'                AS CAT_ID,
                                #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS") 
                                    '$!{semi_plant_id}'     AS PLANT_ID,
                                    '$!{semi_version}'    	AS VERSION,
                                #else
                                    '$!{plant_id}'      AS PLANT_ID,
                                    '$!{version}'    	AS VERSION,
                                #end
                                    '$!{seq}' AS SEQ,
                                    /* WO_ID 생성 */
                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')||'_$!{shift_type}_'||
                                        TRIM(
                                            TO_CHAR(
                                                    (
                                                    SELECT  MAX(TO_NUMBER(SUBSTR(WO_ID,23,8)))
                                                    FROM    DAILY_SCH_PLAN_SHIFT
                                                    WHERE   CAT_ID = '$!{cat_id}' 
                                                #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
                                                    AND     PLANT_ID = '$!{semi_plant_id}' 
                                                    AND     VERSION = '$!{semi_version}' 
                                                #else
                                                    AND     PLANT_ID = '$!{plant_id}' 
                                                    AND     VERSION = '$!{version}' 
                                                #end
                                                    )+1
                                                    ,'00000000')
                                            )           AS WO_ID,
                                    '$!{item_id}'       AS ITEM_ID,
                                    IM.ITEM_NAME        AS ITEM_NAME,
                                    TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
                                                        AS PROD_DATES,
                                    '$!{shift_type}'    AS SHIFT_TYPE,
                                    ''                  AS START_DTTM,
                                    ''                  AS END_DTTM,
                                    ''                  AS SHIFT_QTY,
                                    ''                  AS QTY_UOM,
                                    '1'                 AS PRIORITY,
                                    '$!{ord_no}'        AS ORD_NO,
                                    '$!{ord_item_no}'   AS ORD_ITEM_NO,
                                    ''                  AS PROJECT_CD,
                                    ''                  AS GRP_WO_ID,
                                    ''                  AS PROD_VER,
                                    'AD'                AS MADE_TYPE,
                                    SYSDATE             AS MADE_DTTM,
                                    'admin'      AS MADE_BY                    
                            FROM    (
                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME, IM.SALES_CAT01
                                    FROM    ITEM_MST IM
                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
                                    ) IM
                            ) A, 
                            (
                            SELECT  DISTINCT 
                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.OPER_ID, IC.CONV_UOM
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                        #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
                            AND		IC.PLANT_ID = '$!{semi_plant_id}'
                        #else
                            AND		IC.PLANT_ID = '$!{plant_id}'
                        #end
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROC_ID = '$!{proc_id}'
                            /*AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
                                                    AND		IC.PLANT_ID = '$!{semi_plant_id}'
                                                #else
                                                    AND		IC.PLANT_ID = '$!{plant_id}'
                                                #end
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.OPER_ID*/       
                            ) B,
                            /* 포장단 전 공정 SHIFT위치 정보 */
                            V_POST_PRE_PROC PP,
                            (
                            /* 조운영 캘린더 인덱스 정보 */
                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                            FROM    V_WORK_DIARY_IDX
                            --WHERE   PLANT_ID = '$!{plant_id}'
                            ) WI
                    WHERE   A.PLANT_ID = B.PLANT_ID
                    AND     A.ITEM_ID = B.ITEM_ID
                    AND     B.PLANT_ID = PP.PLANT_ID(+)
                    AND     B.ITEM_ID = PP.ITEM_ID(+)
                    AND     B.PROD_VER = PP.PROD_VER(+)
                    AND     B.PROC_ID = PP.PROC_ID(+)
                    AND     B.PLANT_ID = WI.PLANT_ID
                    AND     B.PROC_ID = WI.PROC_ID
                    AND     A.PROD_DATES = WI.DUTY_DATE
                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
                    ) DS,
                    (
                    /* 조운영 캘린더 인덱스 정보 */
                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                    FROM    V_WORK_DIARY_IDX
                    --WHERE   PLANT_ID = '$!{plant_id}'
                    ) WD,
                    V_HRCHY_PROC VH
            WHERE   DS.PLANT_ID = WD.PLANT_ID
            AND     DS.PROC_ID = WD.PROC_ID
            AND     DS.SHIFT_DIFF = WD.IDX
            AND     DS.PLANT_ID = VH.PLANT_ID(+)
            AND     DS.PROC_ID = VH.PROC_ID(+)
            
		#end
	
	</query>
	
	<!-- WO_ID 등록(생산계획에 없는 제품)화면 공장 리스트 -->
	<query id="semi_new_item_reg_plant_list">
	
			SELECT  DS.PLANT_ID, HR.PLANT_NAME
			FROM    (
			        SELECT  DISTINCT DS.PLANT_ID
			        FROM    DAILY_SCH_PLAN_SHIFT DS
			        WHERE   DS.CAT_ID = 'SS'
			        AND     DS.VERSION = '$!{semi_version}'
			        ) DS,
			        (
			        SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			        FROM    HRCHY HR
			        WHERE   HR.LVL_TYPE = '공장'
			        ) HR
			WHERE   DS.PLANT_ID = HR.PLANT_ID
			ORDER   BY DS.PLANT_ID  
	
	</query>

	<!-- 반제품을 생산할 수 있는 plant -->
	<query id="semi_all_plant_list">
	
			SELECT  DS.PLANT_ID, HR.PLANT_NAME
			FROM    (
			        SELECT	DISTINCT	PLANT_ID
					FROM	ITEM_CAPA
					WHERE	ITEM_TYPE	= 'HALB'
			        ) DS,
			        (
			        SELECT  HR.HID PLANT_ID, HR.HID_NAME PLANT_NAME
			        FROM    HRCHY HR
			        WHERE   HR.LVL_TYPE = '공장'
			        ) HR
			WHERE   DS.PLANT_ID = HR.PLANT_ID
			ORDER   BY DS.PLANT_ID  
	
	</query>
		
	<!-- 등록 popup(alt + click) 수량 없을 시 insert -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_reg_save02" >
		
			INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
			                PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, 
			                PRIORITY, ORD_NO, ORD_ITEM_NO, PROJECT_CD, GRP_WO_ID, 
			                PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, RESOURCESET_ID, WO_END )
            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
                    CASE
                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
                    THEN    
                            DS.END_TIME
                    ELSE
                            WD.END_TIME
                    END                                                         AS END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
                    'AD'                                                        AS MADE_TYPE,
                    SYSDATE                                                     AS MADE_DTTM,
                    '$!{_user_id}'                                              AS MADE_BY,
                    ''                                                          AS SCH_TYPE,
                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
                    ''                                                          AS RESOURCESET_ID,
                    DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
            FROM    (
                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, A.START_DTTM AS START_TIME, A.END_DTTM AS END_TIME,
                            B.OPER_ID
                    FROM    (
                            SELECT  '$!{input_cat_id}'                                AS CAT_ID,
                                    '$!{input_plant_id}'                              AS PLANT_ID,
                                    '$!{input_version}'                               AS VERSION,
                                    '$!{input_seq}'                                   AS SEQ,
                                    /* WO_ID 생성 */
                                    '$!{input_plant_id}_$!{input_proc_id}_'||'$!{input_prod_dates}'||'_$!{input_shift_type}_'||
                                        TRIM(
                                            TO_CHAR(
                                                    (
                                                    SELECT  MAX(TO_NUMBER(SUBSTR(WO_ID,23,8)))
                                                    FROM    DAILY_SCH_PLAN_SHIFT
                                                    WHERE   CAT_ID = '$!{input_cat_id}'
                                                   	AND     VERSION = '$!{input_version}' 
                                                    )+1
                                                    ,'00000000')
                                            )                                   AS WO_ID,
                                    '$!{input_item_id}'                         AS ITEM_ID,
                                    '$!{input_prod_dates}'                      AS PROD_DATES,
                                    '$!{input_shift_type}'                      AS SHIFT_TYPE,
                                    TO_DATE('$!{input_start_date} $!{input_start_time}','YYYYMMDD HH24MISS') AS START_DTTM,
                                    TO_DATE('$!{input_end_date} $!{input_end_time}','YYYYMMDD HH24MISS') AS END_DTTM,
                                    REPLACE('$!{input_shift_qty}',',','')       AS SHIFT_QTY,
                                    ''                  						AS QTY_UOM,
                                    '1'                                         AS PRIORITY,
                                    '$!{input_ord_no}'                                AS ORD_NO,
                                    '$!{input_ord_item_no}'                           AS ORD_ITEM_NO
                            FROM    (
                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
                                    FROM    ITEM_MST IM
                                    WHERE   IM.ITEM_ID = '$!{input_item_id}'  
                                    ) IM
                            ) A, 
                            (
                            SELECT  DISTINCT 
                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                    IC.OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{input_plant_id}'
                            AND     IC.ITEM_ID = '$!{input_item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{input_plant_id}'
                                                    AND     ITEM_ID = '$!{input_item_id}'
                                                    AND     PROC_ID = '$!{input_proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) B,
                            /* 포장단 전 공정 SHIFT위치 정보 */
                            V_POST_PRE_PROC PP,
                            (
                            /* 조운영 캘린더 인덱스 정보 */
                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                            FROM    V_WORK_DIARY_IDX
                            WHERE   PLANT_ID = '$!{input_plant_id}'
                            ) WI
                    WHERE   A.PLANT_ID = B.PLANT_ID
                    AND     A.ITEM_ID = B.ITEM_ID
                    AND     B.PLANT_ID = PP.PLANT_ID(+)
                    AND     B.ITEM_ID = PP.ITEM_ID(+)
                    AND     B.PROD_VER = PP.PROD_VER(+)
                    AND     B.PROC_ID = PP.PROC_ID(+)
                    AND     B.PLANT_ID = WI.PLANT_ID
                    AND     B.PROC_ID = WI.PROC_ID
                    AND     A.PROD_DATES = WI.DUTY_DATE
                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
                    ) DS,
                    (
                    /* 조운영 캘린더 인덱스 정보 */
                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
                    FROM    V_WORK_DIARY_IDX
                    WHERE   PLANT_ID = '$!{input_plant_id}'
                    ) WD,
                    (
                    SELECT  MAX(OPER_ID) AS OPER_ID
                    FROM    ITEM_CAPA IC
                    WHERE   IC.MADE_TYPE != 'DE'
                    AND     IC.PLANT_ID = '$!{input_plant_id}'
                    AND     IC.ITEM_ID = '$!{input_item_id}'
                    AND     IC.PROD_VER = (
                                            SELECT  DISTINCT PROD_VER
                                            FROM    ITEM_CAPA
                                            WHERE   MADE_TYPE != 'DE'
                                            AND     PLANT_ID = '$!{input_plant_id}'
                                            AND     ITEM_ID = '$!{input_item_id}'
                                            AND     PROC_ID = '$!{input_proc_id}'
                                          )
                    ORDER   BY IC.PROC_ID        
                    ) MX
            WHERE   DS.PLANT_ID = WD.PLANT_ID
            AND     DS.PROC_ID = WD.PROC_ID
            AND     DS.SHIFT_DIFF = WD.IDX
            AND     NOT EXISTS (
                                SELECT  VERSION
                                FROM    DAILY_SCH_PLAN_SHIFT
                                WHERE   CAT_ID = '$!{input_cat_id}'
                                AND     PLANT_ID = '$!{input_plant_id}'
                                AND     VERSION = '$!{input_version}'
                                AND     ITEM_ID = '$!{input_item_id}'
                                AND     PROC_ID = '$!{input_proc_id}'
                                AND     PROD_DATES = '$!{input_prod_dates}'
                                AND     SHIFT_TYPE = '$!{input_shift_type}'
                                [AND		ORD_NO = '${input_ord_no}']                                
                                [AND		ORD_ITEM_NO = '${input_ord_item_no}']                           
                               )			                
			
	</query>
	
	<!-- 공장, 작업장 선택시 생산 가능한 반제품 리스트  -->
	<query id="semi_input_plant_proc_of_item_list">
	
			/*
                조건(공장,작업장)의 생산 가능 제품 리스트
            */
            SELECT  IC.ITEM_ID, IC.ITEM_ID||'_'||IM.ITEM_NAME||'('||IM.SPEC||')' ITEM_NAME
            FROM    (
                    SELECT  DISTINCT IC.ITEM_ID
                    FROM    ITEM_CAPA IC
                    WHERE   IC.MADE_TYPE != 'DE'
                    AND		IC.PLANT_ID = '$!{plant_id}'
                    AND     IC.PROC_ID = '$!{selected_proc}'
                    AND     IC.ITEM_TYPE != 'FERT'
                    -- 생산계획 미 반영 작업장 제외
					AND (PLANT_ID, LINE_ID, ITEM_ID) NOT IN
								(
								SELECT	PLANT_ID, LINE_ID, ITEM_ID
								FROM	ITEM_PLANT_LINE_CTL
								WHERE	USE_FLAG	= 'N'
								)
                    ) IC,
                    ITEM_MST IM
            WHERE   IC.ITEM_ID = IM.ITEM_ID
            ORDER   BY IC.ITEM_ID	
	
	</query>
	
	<!-- 반제품 생산 가능 작업장 리스트 -->
	<query id="semi_proc_list">
	
			SELECT  IC.PLANT_ID, VL.PLANT_NAME, IC.PROC_ID, VL.PROC_NAME
			FROM    (           
			        SELECT  DISTINCT IC.PLANT_ID, IC.PROC_ID
			        FROM    ITEM_CAPA IC
			        WHERE   IC.ITEM_TYPE != 'FERT'
			        AND		IC.MADE_TYPE != 'DE'
			        ) IC,
			        V_LAST_PROC_LIST VL
			WHERE   IC.PLANT_ID = VL.PLANT_ID
			AND     IC.PROC_ID = VL.PROC_ID              
			ORDER   BY IC.PLANT_ID, IC.PROC_ID
	
	</query>
	
	<!-- POPUP 저장-->
	<!-- 01. 이동처리(이동 할 곳에 물량이 없을 경우) -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_popup_save01">
	
        UPDATE  /*+ bypass_ujvc*/
                (                
                SELECT  DT.PROD_DATES, DT.SHIFT_TYPE, DT.SHIFT_QTY, DT.START_DTTM, DT.END_DTTM, DT.GRP_WO_ID, DT.LINE_ID, DT.PROC_ID,
                        ND.NEW_PROD_DATES, ND.NEW_SHIFT_TYPE, ND.NEW_SHIFT_QTY, ND.NEW_START_DTTM, ND.NEW_END_DTTM, 
                        NVL(ND.NEW_LINE_ID, ND.LINE_ID) AS NEW_LINE_ID, 
                        NVL(ND.NEW_PROC_ID, ND.PROC_ID) AS NEW_PROC_ID,
                        DT.PROD_VER, ND.NEW_PROD_VER,
                        DT.MADE_TYPE, ND.NEW_MADE_TYPE,
                        DT.MADE_DTTM, ND.NEW_MADE_DTTM,
                        DT.MADE_BY, ND.NEW_MADE_BY
                FROM    (
                        /* UPDATE할 대상*/
                         SELECT TM.PLANT_ID, TM.VERSION, TM.WO_ID, TM.ITEM_ID, TM.LINE_ID, TM.PROC_ID, 
                                TM.PROD_DATES, TM.SHIFT_TYPE, TM.START_DTTM, TM.END_DTTM, 
                                TM.SHIFT_QTY, TM.QTY_UOM, TM.GRP_WO_ID, TM.PROD_VER,
                                TM.MADE_TYPE, TM.MADE_DTTM, TM.MADE_BY
                         FROM   DAILY_SCH_PLAN_SHIFT TM
                         WHERE  TM.CAT_ID = '$!{cat_id}'
                         AND    TM.PLANT_ID = '$!{plant_id}'
                         AND    TM.VERSION = '$!{version}'
                         --AND    TM.ITEM_ID = '$!{item_id}'
                         AND    TM.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                         --AND	TM.LINE_ID = SUBSTR('$!{proc_id}',1,4)||'0'
                        ) DT,   
                        (
                        SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                DS.SHIFT_QTY, DS.QTY_UOM, DS.NEW_PROD_DATES,
                                /*
                                    변경된 START_DTTM에 맞게 SHIFT_TYPE를 다시 구함
                                */
                                CASE                         
                                WHEN WD.STARTTIME &lt;= TO_NUMBER(DS.NEW_STARTTIME) AND 
                                     TO_NUMBER(DS.NEW_STARTTIME) &lt; WD.ENDTIME
                                THEN 
                                        DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5')
                                ELSE    
                                        '9'
                                END     NEW_SHIFT_TYPE,
                                DS.NEW_START_DTTM, DS.NEW_END_DTTM,
                                /*
                                    포장단 수량만 변경
                                */
                                CASE
                                WHEN VH.CAT IN ( SELECT  DISTINCT PROC_ID FROM V_LAST_PROC_LIST WHERE PLANT_ID = '$!{plant_id}' )
                                THEN
                                        $!{qty}
                                ELSE    
                                        DS.SHIFT_QTY
                                END     NEW_SHIFT_QTY,
                                PL.LINE_ID AS NEW_LINE_ID, PL.PROC_ID AS NEW_PROC_ID,
                                PL.PROD_VER AS NEW_PROD_VER,
                                'UP' AS NEW_MADE_TYPE,
                                SYSDATE AS NEW_MADE_DTTM,
                                '$!{_user_id}' AS NEW_MADE_BY                
                        FROM    (        
                                SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                        DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                        DS.SHIFT_QTY, DS.QTY_UOM,
                                        TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS') AS NEW_START_DTTM,
                                        /*
                                           변경된 START_DTTM에 맞게 PROD_DATES를 다시 계산 
                                           0600 기준으로 날짜 지정  
                                       */ 
                                        CASE
                                        WHEN  TO_NUMBER(SUBSTR('$!{input_start_dttm_date}$!{input_start_dttm_time}',9,6)) &lt; 060000
                                        THEN    
                                                TO_CHAR(TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS')-1,'YYYYMMDD')
                                        ELSE    
                                                SUBSTR('$!{input_start_dttm_date}$!{input_start_dttm_time}',1,8)
                                        END     NEW_PROD_DATES,
                                        /*
                                            입력된 NEW_START_DTTM에 맞게 END_DTTM을 수정
                                        */
                                        CASE
                                        WHEN DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS') &lt; 0
                                        THEN
                                                DS.END_DTTM + ABS(DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS'))
                                        ELSE    
                                                DS.END_DTTM - (DS.START_DTTM - TO_DATE('$!{input_start_dttm_date}$!{input_start_dttm_time}','YYYYMMDDHH24MISS'))
                                        END     NEW_END_DTTM,
                                        '$!{input_start_dttm_date}$!{input_start_dttm_time}' AS    NEW_STARTTIME
                                FROM    DAILY_SCH_PLAN_SHIFT DS
                                WHERE   DS.CAT_ID = '$!{cat_id}'
                                AND     DS.PLANT_ID = '$!{plant_id}'
                                AND     DS.VERSION = '$!{version}'
                                AND     DS.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                                ) DS,
                                (   
                                /*
                                    일자별 SHIFT 추출 
                                    일별, 라인별, SHIFT 코드 기준의 시작시간 종료시간 
                                */
                                SELECT  
                                        /*+INDEX(A WORK_DIARY_PK) */
                                        PLANT_ID, DUTY_DATE, PROC_ID, SHIFT_ID, 
                                        DUTY_DATE||START_TIME   STARTTIME, 
                                        CASE
                                        WHEN SUBSTR(SHIFT_ID,1,3) IN ('NIG','OTN') THEN
                                                TO_CHAR(TO_DATE(DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||END_TIME
                                        ELSE
                                                DUTY_DATE||END_TIME   
                                        END     ENDTIME 
                                FROM    WORK_DIARY A
                                WHERE   PLANT_ID = '$!{plant_id}'
                                ) WD,
                                V_HRCHY_PROC VH,
                                (
                                /* 변경될 라인, 작업장 리스트 */
                                SELECT  DISTINCT IC.PLANT_ID, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER
                                FROM    ITEM_CAPA IC
                                WHERE   IC.MADE_TYPE != 'DE'
                                AND		IC.PLANT_ID = '$!{plant_id}'
                                AND     IC.ITEM_ID = '$!{item_id}'
                                --AND     IC.LINE_ID = SUBSTR('$!{input_proc_id}',1,4)||'0'
                                AND     IC.PROD_VER = (
			                                            SELECT  DISTINCT PROD_VER
			                                            FROM    ITEM_CAPA
			                                            WHERE   MADE_TYPE != 'DE'
			                                            AND     PLANT_ID = '$!{plant_id}'
			                                            AND     ITEM_ID = '$!{item_id}'
			                                            AND     PROC_ID = '$!{input_proc_id}'
			                                          )
                                ) PL
                        WHERE   DS.PROC_ID          = WD.PROC_ID (+)
                        AND     DS.NEW_PROD_DATES   = WD.DUTY_DATE (+)        
                        AND     DS.NEW_STARTTIME    &gt;= WD.STARTTIME (+) 
                        AND     DS.NEW_STARTTIME    &lt;  WD.ENDTIME (+)
                        AND     DS.PLANT_ID         = VH.PLANT_ID(+)
                        AND     DS.PROC_ID          = VH.PROC_ID(+)
                        AND     DS.PLANT_ID         = PL.PLANT_ID(+)
                        AND     SUBSTR(DS.PROC_ID,5,1) = SUBSTR(PL.PROC_ID,5,1)
                        ) ND
                WHERE   DT.PLANT_ID = ND.PLANT_ID
                AND     DT.VERSION = ND.VERSION
                AND     DT.WO_ID = ND.WO_ID    
                AND     DT.ITEM_ID = ND.ITEM_ID
                AND     DT.LINE_ID = ND.LINE_ID  
                AND     DT.PROC_ID = ND.PROC_ID                
                ) 
        SET     PROD_DATES = NEW_PROD_DATES,
                SHIFT_TYPE = NEW_SHIFT_TYPE,
                START_DTTM = NEW_START_DTTM,
                END_DTTM = NEW_END_DTTM,
                SHIFT_QTY = NEW_SHIFT_QTY,
                LINE_ID = NEW_LINE_ID,
                PROC_ID = NEW_PROC_ID,
                PROD_VER = NEW_PROD_VER,
                MADE_TYPE = NEW_MADE_TYPE,
                MADE_DTTM = NEW_MADE_DTTM, 
                MADE_BY = NEW_MADE_BY
        WHERE   '$!{checkModify}' = 'Y'
	
	</query>
	
	<!-- 수량통합처리(이동 할 곳에 물량이 있을 경우)  -->	
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_popup_save02">
	
        UPDATE  /*+ bypass_ujvc*/
                (    
                SELECT  DT.SHIFT_QTY,
                        ND.NEW_SHIFT_QTY + DT.SHIFT_QTY AS NEW_SHIFT_QTY, 
                        DT.MADE_TYPE, ND.NEW_MADE_TYPE,
                        DT.MADE_DTTM, ND.NEW_MADE_DTTM,
                        DT.MADE_BY, ND.NEW_MADE_BY
                FROM    (
                        /* UPDATE할 대상(TARGET) */
                         SELECT TM.PLANT_ID, TM.VERSION, TM.WO_ID, TM.ITEM_ID, TM.LINE_ID, TM.PROC_ID, 
                                TM.PROD_DATES, TM.SHIFT_TYPE, TM.START_DTTM, TM.END_DTTM, 
                                TM.SHIFT_QTY, TM.QTY_UOM, TM.GRP_WO_ID,
                                TM.MADE_TYPE, TM.MADE_DTTM, TM.MADE_BY
                         FROM   DAILY_SCH_PLAN_SHIFT TM
                         WHERE  TM.CAT_ID = '$!{cat_id}'
                         AND    TM.PLANT_ID = '$!{plant_id}'
                         AND    TM.VERSION = '$!{version}'
                         AND    TM.ITEM_ID = '$!{item_id}'
                         --AND	TM.LINE_ID = SUBSTR('$!{input_proc_id}',1,4)||'0'
                         AND    TM.PROD_DATES = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
			                                            TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
                         AND    TM.SHIFT_TYPE =  (
                                                    /* SHIFT_TYPE  */
                                                    SELECT  DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') SHIFT_TYPE
                                                    FROM    WORK_DIARY WD
                                                    WHERE   WD.PLANT_ID = '$!{plant_id}'
                                                    AND     WD.PROC_ID = '$!{input_proc_id}'--INPUT_PROC_ID
                                                    AND     WD.DUTY_DATE = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
                                                                            TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
                                                    AND     WD.DUTY_DATE||WD.START_TIME &lt;= '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
                                                    AND     DECODE(SUBSTR(WD.SHIFT_ID,1,3),'NIG', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
                                                                                           'OTN', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
                                                                                           WD.DUTY_DATE||WD.END_TIME) &gt; '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
                                                 )                                                        
                        ) DT,   
                        (
                        SELECT  DS.PLANT_ID, DS.VERSION, DS.ITEM_ID, DS.PROC_ID,
                                /*
                                    포장단 수량만 변경
                                */
                                CASE
                                WHEN VH.CAT IN ( SELECT  DISTINCT PROC_ID FROM V_LAST_PROC_LIST WHERE PLANT_ID = '$!{plant_id}' )
                                THEN
                                        $!{qty}
                                ELSE    
                                        DS.SHIFT_QTY
                                END     NEW_SHIFT_QTY,
                                'UP' AS NEW_MADE_TYPE,
                                SYSDATE AS NEW_MADE_DTTM,
                                '$!{_user_id}' AS NEW_MADE_BY   
                        FROM    (        
                                SELECT  DS.PLANT_ID, DS.VERSION, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID, 
                                        DS.PROD_DATES, DS.SHIFT_TYPE, DS.START_DTTM, DS.END_DTTM, 
                                        DS.SHIFT_QTY, DS.QTY_UOM
                                FROM    DAILY_SCH_PLAN_SHIFT DS
                                WHERE   DS.CAT_ID = '$!{cat_id}'
                                AND     DS.PLANT_ID = '$!{plant_id}'
                                AND     DS.VERSION = '$!{version}'
                                AND     DS.WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
                                ) DS,
                                V_HRCHY_PROC VH
                        WHERE   DS.PLANT_ID         = VH.PLANT_ID(+)
                        AND     DS.PROC_ID          = VH.PROC_ID(+)
                        ) ND
                WHERE   DT.PLANT_ID = ND.PLANT_ID
                AND     DT.VERSION = ND.VERSION
                AND     DT.ITEM_ID = ND.ITEM_ID
                AND     SUBSTR(DT.PROC_ID,5,1) = SUBSTR(ND.PROC_ID,5,1)    
                ) 
        SET     SHIFT_QTY = NEW_SHIFT_QTY,
                MADE_TYPE = NEW_MADE_TYPE,
                MADE_DTTM = NEW_MADE_DTTM, 
                MADE_BY = NEW_MADE_BY
        WHERE   '$!{checkModify}' = 'Y'
	
	</query>
	
	<!-- wo_id 삭제 -->
	<query id="semi_delete_wo_id">
	
			/* 이동한 WO_ID 삭제 */        
			DELETE  DAILY_SCH_PLAN_SHIFT
			WHERE   CAT_ID = '$!{cat_id}'
			AND     PLANT_ID = '$!{plant_id}'
			AND     VERSION = '$!{version}'
			AND		ITEM_ID	= '$!{item_id}'
			AND     WO_ID = F_REPLACE_WO_ID('$!{input_wo_id}')
	
	</query>
	
	<!-- 이동할 SHIFT에 수량이 있는지 체크-->
	<query id="semi_move_target_check">
	
			SELECT  PLANT_ID, VERSION
			FROM    DAILY_SCH_PLAN_SHIFT            
			WHERE   CAT_ID = '$!{cat_id}'
			AND     PLANT_ID = '$!{plant_id}'
			AND     VERSION = '$!{version}'
			AND     SEQ = '$!{seq}'
			AND     ITEM_ID = '$!{item_id}'
			--AND     LINE_ID = '$!{line_id}'
			AND     PROC_ID = '$!{input_proc_id}'
			AND     PROD_DATES = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
			                                            TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
			AND     SHIFT_TYPE = (
			                        SELECT  DECODE(SUBSTR(WD.SHIFT_ID,1,3),'JOG','1','OTD','1','DAY','3','NIG','5','OTJ','1','OTN','5') SHIFT_TYPE
			                        FROM    WORK_DIARY WD
			                        WHERE   WD.PLANT_ID = '$!{plant_id}'
			                        AND     WD.PROC_ID = '$!{proc_id}'
			                        AND     WD.DUTY_DATE = DECODE(SIGN(TO_NUMBER('$!{input_start_dttm_time}')-055959),1,'$!{input_start_dttm_date}',
                                            				TO_CHAR(TO_DATE('$!{input_start_dttm_date}','YYYYMMDD')-1,'YYYYMMDD'))
			                        AND     WD.DUTY_DATE||WD.START_TIME &lt;= '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
			                        AND     DECODE(SUBSTR(WD.SHIFT_ID,1,3),'NIG', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
			                                                               'OTN', TO_CHAR(TO_DATE(WD.DUTY_DATE,'YYYYMMDD')+1,'YYYYMMDD')||WD.END_TIME,
			                                                               WD.DUTY_DATE||WD.END_TIME) &gt; '$!{input_start_dttm_date}'||'$!{input_start_dttm_time}'
			                     )
	
	</query>
	
	<!-- 공장, 제품 생산 가능 작업장(마지막 작업장) -->
	<query id="semi_plnat_item_proc_list">
	
		SELECT  IC.PLANT_ID, VL.PLANT_NAME, IC.PROC_ID, VL.PROC_NAME
		FROM    (
		        SELECT  DISTINCT IC.PLANT_ID, IC.LINE_ID, IC.PROC_ID--, IC.PROD_VER
		        FROM    ITEM_CAPA IC
		        WHERE   IC.MADE_TYPE != 'DE'
		        AND		IC.PLANT_ID = '$!{plant_id}'
		        AND     IC.ITEM_ID = '$!{item_id}'
		        ) IC,
		        V_LAST_PROC_LIST VL
		WHERE   IC.PLANT_ID = VL.PLANT_ID
		AND     IC.PROC_ID = VL.PROC_ID 
	
	</query>
	
	<!-- 등록 POPUP : 조회(계획에 없는 제품) -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNewItem_reg">
	
			SELECT  A.CAT_ID, A.PLANT_ID, VH.PLANT_NAME, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, A.ITEM_NAME, 
			        B.LINE_ID, VH.LINE_NAME, B.PROC_ID, VH.PROC_NAME, A.PROD_DATES, A.SHIFT_TYPE,
			        A.START_DTTM, A.END_DTTM, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO, B.PROD_VER,
			        A.WO_ID AS GRP_WO_ID
			FROM    ( 
			        SELECT  '$!{cat_id}'  AS CAT_ID,
			        	#if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS") 
			                '$!{semi_plant_id}'     AS PLANT_ID,
			                '$!{semi_version}'    	AS VERSION,
			            #else
			            	'$!{plant_id}'      AS PLANT_ID,
			            	'$!{version}'    	AS VERSION,
			            #end			                
			                '$!{seq}' AS SEQ,
			                /* WO_ID 생성 */
			            #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS") 
			            	'$!{semi_plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')||'_$!{shift_type}_'||
			            #else
                            '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')||'_$!{shift_type}_'||
                        #end
                                TRIM(
                                    TO_CHAR(
                                            (
                                            SELECT  MAX(TO_NUMBER(SUBSTR(WO_ID,23,8)))
                                            FROM    DAILY_SCH_PLAN_SHIFT
                                            WHERE   CAT_ID = '$!{cat_id}' 
                                        #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
                                        	AND     PLANT_ID = '$!{semi_plant_id}' 
                                            AND     VERSION = '$!{semi_version}' 
                                        #else
                                            AND     PLANT_ID = '$!{plant_id}' 
                                            AND     VERSION = '$!{version}' 
                                        #end
                                            )+1
                                            ,'00000000')
                                    )   		AS WO_ID,
			                '$!{item_id}'       AS ITEM_ID,
			                IM.ITEM_NAME        AS ITEM_NAME,
			                TO_CHAR(TO_DATE('$!{prod_dates}','$!{date_form}'),'YYYYMMDD')
			                                    AS PROD_DATES,
			                '$!{shift_type}'    AS SHIFT_TYPE,
			                ''                  AS START_DTTM,
			                ''                  AS END_DTTM,
			                ''                  AS SHIFT_QTY,
			                ''                  AS QTY_UOM,
			                '1'                 AS PRIORITY,
			                ''                  AS ORD_NO,
			                ''                  AS ORD_ITEM_NO,
			                ''                  AS PROJECT_CD,
			                ''                  AS GRP_WO_ID,
			                ''                  AS PROD_VER,
			                'AD'                AS MADE_TYPE,
			                SYSDATE             AS MADE_DTTM,
			                '$!{_user_id}'      AS MADE_BY                    
			        FROM    (
			                SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME, IM.SALES_CAT01
			                FROM    ITEM_MST IM
			                WHERE   IM.ITEM_ID = '$!{item_id}'  
			                ) IM     
			        ) A,
			        (
			        SELECT  DISTINCT 
			                IC.PLANT_ID, IC.ITEM_ID, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.OPER_ID, IC.CONV_UOM
			        FROM    ITEM_CAPA IC
			        WHERE   IC.MADE_TYPE != 'DE'
			    #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
			        AND		IC.PLANT_ID = '$!{semi_plant_id}'
			    #else
			    	AND		IC.PLANT_ID = '$!{plant_id}'
			    #end
			        AND     IC.ITEM_ID = '$!{item_id}'
			        AND     IC.PROC_ID = '$!{proc_id}'
			        /*AND     IC.PROD_VER = (
                                            SELECT  DISTINCT PROD_VER
                                            FROM    ITEM_CAPA
                                            WHERE   MADE_TYPE != 'DE'
                                        #if("$!{semi_plant_id}" != "" &amp;&amp; "$!{cat_id}" == "SS")
									        AND		IC.PLANT_ID = '$!{semi_plant_id}'
									    #else
									    	AND		IC.PLANT_ID = '$!{plant_id}'
									    #end
                                            AND     ITEM_ID = '$!{item_id}'
                                            AND     PROC_ID = '$!{proc_id}'
                                          )*/
			        ) B,
			        V_HRCHY_PROC VH
			WHERE   B.PLANT_ID = VH.PLANT_ID
			AND     B.PROC_ID = VH.PROC_ID
			ORDER	BY B.OPER_ID
	
	</query>
	
	<!-- 수정 POPUP : 조회 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_upd">
	
			SELECT  DS.CAT_ID, DS.PLANT_ID, VH.PLANT_NAME, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, IM.ITEM_NAME, 
                    DS.LINE_ID, VH.LINE_NAME, DS.PROC_ID, VH.PROC_NAME, DS.PROD_DATES, DS.SHIFT_TYPE,
                    DS.START_DTTM, DS.END_DTTM, DS.SHIFT_QTY, DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROD_VER,
                    TO_CHAR(DS.START_DTTM, 'HH24MISS') START_TIME, TO_CHAR(DS.END_DTTM, 'YYYYMMDD') END_DATE,
                    TO_CHAR(DS.END_DTTM, 'HH24MISS') END_TIME, TO_CHAR(DS.START_DTTM, 'YYYYMMDD') START_DATE
            FROM    DAILY_SCH_PLAN_SHIFT DS,
                    V_HRCHY_PROC VH,
                    ITEM_MST IM
			WHERE   DS.PLANT_ID = VH.PLANT_ID
			AND     DS.PROC_ID = VH.PROC_ID
			AND		DS.ITEM_ID IN (
						--완제품계획
						SELECT ITEM_ID
						FROM	ITEM_MST
						where ( cat01 like 'PS%' or cat02 is null)
						and ITYPE='HALB'
						AND ITEM_ID LIKE '72%'
						UNION
						--반제품계획
						select ITEM_ID
						from item_mst
						where cat02 ='SS72'
						and ITYPE='HALB'
						AND ITEM_ID LIKE '72%'		
					)
            AND     DS.ITEM_ID = IM.ITEM_ID
            AND     ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' )
		            [OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
		            )
			ORDER	BY DS.PLANT_ID, DS.ITEM_ID, DS.PROD_DATES, DS.WO_ID, DS.PROD_VER, DS.SHIFT_TYPE, DS.PROC_ID
	
	</query>
	
	<!-- 수정 POPUP : 저장-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_upd_save01" fix="_user_id" 
		iterator="input_cat_id input_plant_id input_version input_seq input_wo_id input_item_id input_line_id input_proc_id input_prod_dates input_shift_type input_start_date input_start_time input_end_date input_end_time input_shift_qty input_qty_uom input_priority input_ord_no input_ord_item_no input_prod_ver">
	
        UPDATE  DAILY_SCH_PLAN_SHIFT
		SET     START_DTTM  = TO_DATE('$!{input_start_date} $!{input_start_time}','YYYYMMDD HH24MISS'),
				END_DTTM    = TO_DATE('$!{input_end_date} $!{input_end_time}','YYYYMMDD HH24MISS'),
		        SHIFT_QTY   = '$!{input_shift_qty}',
			    QTY_UOM     = '$!{input_qty_uom}',
			    MADE_TYPE	= 'UP',
			    MADE_DTTM	= SYSDATE,
			    MADE_BY		= '$!{_user_id}',
			    PROD_DATES  = '$!{input_start_date}'
		WHERE   CAT_ID      = '$!{input_cat_id}'
		AND     PLANT_ID    = '$!{input_plant_id}'
		AND     VERSION     = '$!{input_version}'
		AND     SEQ         = '$!{input_seq}'
		AND     WO_ID       =  F_REPLACE_WO_ID('$!{input_wo_id}')
		AND     ITEM_ID     = '$!{input_item_id}'
		AND     LINE_ID     = '$!{input_line_id}'
		AND     PROC_ID     = '$!{input_proc_id}'
		AND     PROD_DATES  = '$!{input_prod_dates}'
		AND     SHIFT_TYPE  = '$!{input_shift_type}'
			
	</query>
	
	<!-- 02_1. DAILY_SCH_PLAN_SHIFT 테이블에 신규 수량 INSERT -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_save_02_1" fix="_user_id plant_version semi_version" iterator="cat_id plant_id version seq proc_id item_id shift_1_mon_prod_dates shift_1_mon_shift_type shift_1_mon shift_3_mon_prod_dates shift_3_mon_shift_type shift_3_mon shift_5_mon_prod_dates shift_5_mon_shift_type shift_5_mon shift_1_tue_prod_dates shift_1_tue_shift_type shift_1_tue shift_3_tue_prod_dates shift_3_tue_shift_type shift_3_tue shift_5_tue_prod_dates shift_5_tue_shift_type shift_5_tue shift_1_wed_prod_dates shift_1_wed_shift_type shift_1_wed shift_3_wed_prod_dates shift_3_wed_shift_type shift_3_wed shift_5_wed_prod_dates shift_5_wed_shift_type shift_5_wed shift_1_thu_prod_dates shift_1_thu_shift_type shift_1_thu shift_3_thu_prod_dates shift_3_thu_shift_type shift_3_thu shift_5_thu_prod_dates shift_5_thu_shift_type shift_5_thu shift_1_fri_prod_dates shift_1_fri_shift_type shift_1_fri shift_3_fri_prod_dates shift_3_fri_shift_type shift_3_fri shift_5_fri_prod_dates shift_5_fri_shift_type shift_5_fri shift_1_sat_prod_dates shift_1_sat_shift_type shift_1_sat shift_3_sat_prod_dates shift_3_sat_shift_type shift_3_sat shift_5_sat_prod_dates shift_5_sat_shift_type shift_5_sat shift_1_sun_prod_dates shift_1_sun_shift_type shift_1_sun shift_3_sun_prod_dates shift_3_sun_shift_type shift_3_sun shift_5_sun_prod_dates shift_5_sun_shift_type shift_5_sun mon_shift1_check_flag tue_shift1_check_flag wed_shift1_check_flag thu_shift1_check_flag fri_shift1_check_flag sat_shift1_check_flag sun_shift1_check_flag mon_shift3_check_flag tue_shift3_check_flag wed_shift3_check_flag thu_shift3_check_flag fri_shift3_check_flag sat_shift3_check_flag sun_shift3_check_flag mon_shift5_check_flag tue_shift5_check_flag wed_shift5_check_flag thu_shift5_check_flag fri_shift5_check_flag sat_shift5_check_flag sun_shift5_check_flag">

			INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
                    PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, PRIORITY, ORD_NO, ORD_ITEM_NO, 
                    PROJECT_CD, GRP_WO_ID, PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, 
                    RESOURCESET_ID, WO_END) 
          	SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, 
                    DS.WO_ID||LPAD(MX.MX_SEQ + RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION 
                                                           ORDER BY DS.ITEM_ID, DS.WO_ID)
                                  ,8,'0') AS WO_ID, 
                    DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DS.PROD_DATES,
                    DS.SHIFT_TYPE,
                    DS.START_DTTM,
                    DS.END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD,
                    DS.GRP_WO_ID||LPAD(MX.MX_SEQ + RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION 
                                                               ORDER BY DS.ITEM_ID, DS.WO_ID)
                                      ,8,'0') AS GRP_WO_ID, 
                    DS.PROD_VER,
                    DS.MADE_TYPE,
                    DS.MADE_DTTM,
                    DS.MADE_BY,
                    DS.SCH_TYPE,
                    DS.ROUTE_ID,
                    DS.RESOURCESET_ID,
                    DS.WO_END
            FROM    (                    
		            /* 월/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_mon_shift_type}_'
		                                    											AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_mon_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_mon}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_mon_shift_type}'
		                               )
		            AND     '$!{mon_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL                    
		            /* 월/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_mon_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_mon_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_mon}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_mon_shift_type}'
		                               )
		            AND     '$!{mon_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 월/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_mon_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_mon_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_mon}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_mon_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_mon_shift_type}'
		                               )
		            AND     '$!{mon_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 화/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_tue_shift_type}_'
		                                                                           AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_tue_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_tue}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_tue_shift_type}'
		                               )
		            AND     '$!{tue_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL 
		            /* 화/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_tue_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_tue_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_tue}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_tue_shift_type}'
		                               )
		            AND     '$!{tue_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL 
		            /* 화/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_tue_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_tue_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_tue}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_tue_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_tue_shift_type}'
		                               )
		            AND     '$!{tue_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL 
		            /* 수/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_wed_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_wed_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_wed}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_wed_shift_type}'
		                               )
		            AND     '$!{wed_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 수/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_wed_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_wed_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_wed}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_wed_shift_type}'
		                               )
		            AND     '$!{wed_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 수/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_wed_shift_type}_'
		                                        	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_wed_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_wed}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_wed_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_wed_shift_type}'
		                               )
		            AND     '$!{wed_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 목/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_thu_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_thu_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_thu}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_thu_shift_type}'
		                               )
		            AND     '$!{thu_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 목/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_thu_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_thu_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_thu}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_thu_shift_type}'
		                               )
		            AND     '$!{thu_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 목/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_thu_shift_type}_'
		                                          	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_thu_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_thu}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_thu_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_thu_shift_type}'
		                               )
		            AND     '$!{thu_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 금/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_fri_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_fri_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_fri}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_fri_shift_type}'
		                               )
		            AND     '$!{fri_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 금/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_fri_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_fri_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_fri}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_fri_shift_type}'
		                               )
		            AND     '$!{fri_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 금/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_fri_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_fri_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_fri}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_fri_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_fri_shift_type}'
		                               )
		            AND     '$!{fri_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 토/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_sat_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_sat_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_sat}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_sat_shift_type}'
		                               )
		            AND     '$!{sat_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 토/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_sat_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_sat_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_sat}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_sat_shift_type}'
		                               )
		            AND     '$!{sat_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 토/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_sat_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_sat_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_sat}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_sat_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_5_sat_shift_type}'
		                               )
		            AND     '$!{sat_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 일/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_1_sun_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_1_sun_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_1_sun}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_1_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_sun_shift_type}'
		                               )
		            AND     '$!{sun_shift1_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 일/주 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_3_sun_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_3_sun_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_3_sun}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_3_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_3_sun_shift_type}'
		                               )
		            AND     '$!{sun_shift3_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------                   
		            UNION   ALL
		            /* 일/야 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                            DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, A.PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            SELECT  '$!{cat_id}'                                AS CAT_ID,
		                                    '$!{plant_id}'                              AS PLANT_ID,
		                                    '$!{version}'                               AS VERSION,
		                                    '$!{seq}'                                   AS SEQ,
		                                    /* WO_ID 생성 */
		                                    '$!{plant_id}_$!{proc_id}_'||TO_CHAR(TO_DATE('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')||'_$!{shift_5_sun_shift_type}_'
		                                         	                                    AS WO_ID,
		                                    '$!{item_id}'                               AS ITEM_ID,
		                                    TO_CHAR(TO_DATE('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                                                                AS PROD_DATES,
		                                    '$!{shift_5_sun_shift_type}'                AS SHIFT_TYPE,
		                                    REPLACE('$!{shift_5_sun}',',','')           AS SHIFT_QTY,
		                                    ''                  						AS QTY_UOM,
		                                    '1'                                         AS PRIORITY,
		                                    ''                                          AS ORD_NO,
		                                    ''                                          AS ORD_ITEM_NO
		                            FROM    (
		                                    SELECT  IM.ITYPE, IM.ITEM_ID, IM.ITEM_NAME
		                                    FROM    ITEM_MST IM
		                                    WHERE   IM.ITEM_ID = '$!{item_id}'  
		                                    ) IM
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            IC.OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            AND     IC.PLANT_ID = '$!{plant_id}'
		                            AND     IC.ITEM_ID = '$!{item_id}'
		                            AND     IC.PROD_VER = (
		                                                    SELECT  DISTINCT PROD_VER
		                                                    FROM    ITEM_CAPA
		                                                    WHERE   MADE_TYPE != 'DE'
		                                                    AND     PLANT_ID = '$!{plant_id}'
		                                                    AND     ITEM_ID = '$!{item_id}'
		                                                    AND     PROC_ID = '$!{proc_id}'
		                                                  )
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            WHERE   PLANT_ID = '$!{plant_id}'
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    WHERE   PLANT_ID = '$!{plant_id}'
		                    ) WD,
                            (
                            SELECT  MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            AND     IC.PLANT_ID = '$!{plant_id}'
                            AND     IC.ITEM_ID = '$!{item_id}'
                            AND     IC.PROD_VER = (
                                                    SELECT  DISTINCT PROD_VER
                                                    FROM    ITEM_CAPA
                                                    WHERE   MADE_TYPE != 'DE'
                                                    AND     PLANT_ID = '$!{plant_id}'
                                                    AND     ITEM_ID = '$!{item_id}'
                                                    AND     PROC_ID = '$!{proc_id}'
                                                  )
                            ORDER   BY IC.PROC_ID        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID  
		            AND     DS.SHIFT_DIFF = WD.IDX
		            AND     NOT EXISTS (
		                                SELECT  VERSION
		                                FROM    DAILY_SCH_PLAN_SHIFT
		                                WHERE   CAT_ID = '$!{cat_id}'
		                                AND     PLANT_ID = '$!{plant_id}'
		                                AND     VERSION = '$!{version}'
		                                AND     ITEM_ID = '$!{item_id}'
		                                AND     PROC_ID = '$!{proc_id}'
		                                AND     PROD_DATES = TO_CHAR(TO_DATE('$!{shift_5_sun_prod_dates}','YYYY MM/DD(DY)'),'YYYYMMDD')
		                                AND     SHIFT_TYPE = '$!{shift_1_sun_shift_type}'
		                               )
		            AND     '$!{sun_shift5_check_flag}' = 'Y'
		            --------------------------------------------------------------------------------------------------
                    ) DS,
                    (
                    SELECT  DS.VERSION, MAX(TO_NUMBER(SUBSTR(DS.WO_ID,23,8))) AS MX_SEQ
                    FROM    DAILY_SCH_PLAN_SHIFT DS
                    WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' )
                    			[OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                    		)
                    GROUP   BY DS.VERSION
                    ) MX
            WHERE   DS.VERSION = MX.VERSION(+)		            
            
	</query>
	
	<!-- 반제품 검증 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNewStockChk_popup">
	
            SELECT  
                    SP.ITEM_ID,                         --제품코드
                    IM.ITEM_NAME,                       --제품명
                    IM.SPEC,                            --규격
                    HR.PLANT_NAME,                      --공장
                    SP.STOCK_QTY,                       --주초 예상재고
                    SP.SEMI_REQ,                        --소요량
                    SP.SEMI_PROD,                       --생산계획량
                    SP.STOCK_PLAN,                      --주말예상재고
                    SP.SAFETY_STOCK,                    --안전재고
                    SP.SEMI_PROD - ( SP.SAFETY_STOCK + SP.SEMI_REQ ) AS DIFF --소요대비 예상
            FROM    V_SCH_STOCK_PLAN SP,
                    ITEM_MST IM,
                    (
                    -- DEFAULT : 차주, 차주 월요일
                #if("$!{checked_weekly}" == "w0")
                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                #elseif("$!{checked_weekly}" == "w2")
                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                #else
                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                #end                                  
                    FROM   DUAL
                    ) WK,
                    (
                    SELECT  HID PLANT_ID, HID_NAME PLANT_NAME
                    FROM    HRCHY
                    WHERE   LVL_TYPE = '공장'
                    ) HR
                #if("$!{checked_domain}" != "")
                    ,
                    (
                    /* 반제품의 수출, 내수 구분 */        
                    SELECT  DISTINCT A.CONS_ITEM_ID, A.DOMAIN
                    FROM    (
                            SELECT  DISTINCT MB.CONS_ITEM_ID, MB.PROD_ITEM_ID, MB.PROD_ITEM_TYPE, IM.MATERIAL_GROUP,
                                    CASE
                                    --내수
                                    WHEN IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999'
                                    THEN 'DO'
                                    --수출
                                    WHEN IM.MATERIAL_GROUP &gt;= '5K000' AND IM.MATERIAL_GROUP &lt;= '5S999'
                                    THEN 'EX'
                                    ELSE NULL
                                    END     DOMAIN
                            FROM    MBOM MB, ITEM_MST IM
                            WHERE   MB.MADE_TYPE 	 != 'DE'
                            AND     MB.PROD_ITEM_ID   = IM.ITEM_ID
                            AND     MB.CONS_ITEM_TYPE = 'HALB'
                            ) A
                    WHERE   A.DOMAIN = '$!{checked_domain}'                
                    ) MB
                #end        
            WHERE   SP.VERSION 			   = '$!{semi_version}'
            AND     SP.WEEK_START 		   = TO_DATE(TO_CHAR(WK.MON,'YYYY-MM-DD'),'YYYY-MM-DD')
            AND     SUBSTR(SP.ITEM_ID,1,8) = IM.ITEM_ID(+)
            AND     SP.PLANT_ID 		   = HR.PLANT_ID
        #if("$!{checked_domain}" != "")
            AND     SP.ITEM_ID = MB.CONS_ITEM_ID
        #end
        #if("$!{checked_domain}" == "EX")
            AND     (SP.ITEM_ID) NOT IN (
                                        SELECT  SP.ITEM_ID
                                        FROM    V_SCH_STOCK_PLAN SP,
                                                (
                                                /* 반제품의 수출, 내수 구분 */        
                                                SELECT  DISTINCT A.CONS_ITEM_ID, A.DOMAIN
                                                FROM    (
                                                        SELECT  DISTINCT MB.CONS_ITEM_ID, MB.PROD_ITEM_ID, MB.PROD_ITEM_TYPE, IM.MATERIAL_GROUP,
                                                                CASE
                                                                --내수
                                                                WHEN IM.MATERIAL_GROUP &lt; '5K000' OR  IM.MATERIAL_GROUP &gt; '5S999'
                                                                THEN 'DO'
                                                                --수출
                                                                WHEN IM.MATERIAL_GROUP &gt;= '5K000' AND IM.MATERIAL_GROUP &lt;= '5S999'
                                                                THEN 'EX'
                                                                ELSE NULL
                                                                END     DOMAIN
                                                        FROM    MBOM MB, ITEM_MST IM
                                                        WHERE   MB.MADE_TYPE     !='DE'
                                                        AND     MB.PROD_ITEM_ID   = IM.ITEM_ID
                                                        AND     MB.CONS_ITEM_TYPE = 'HALB'
                                                        ) A
                                                ) MB
                                        WHERE   SP.VERSION = '$!{semi_version}'
                                        AND     SP.WEEK_START = (
														        -- DEFAULT : 차주, 차주 월요일
														    #if("$!{checked_weekly}" == "w0")
														        SELECT  TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE-7,2),'YYYY-MM-DD'),'YYYY-MM-DD') MON --금주
														    #elseif("$!{checked_weekly}" == "w2")
														        SELECT  TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE+7,2),'YYYY-MM-DD'),'YYYY-MM-DD') MON --차차주
														    #else
														        SELECT TO_DATE(TO_CHAR(NEXT_DAY(SYSDATE,2),'YYYY-MM-DD'),'YYYY-MM-DD') MON --차주
														    #end                                  
														        FROM   DUAL
														        )
                                        AND     SUBSTR(SP.ITEM_ID,1,8) = MB.CONS_ITEM_ID(+)
                                        GROUP   BY SP.ITEM_ID
                                        HAVING  COUNT(MB.DOMAIN) &gt; 1
                                     )
		#end                                                     
			ORDER   BY SP.ITEM_ID
	
	</query>
	
	
	
	
	<!--
	===================================
	Excel Download and Upload
	===================================
	-->
	<!-- 일간생산계획 분석(재구성) -->
	<!-- 1. Excel Title : 조회 -->
	<query id="excel_down_title">
		SELECT  '공장', '원가부문', '작업장', '제품코드', '제품명', '규격', 'TO여', '구분', '오더번호'
		        , '조','주','야', '조', '주', '야', '조', '주', '야', '조', '주', '야', '조', '주', '야', '조', '주', '야', '조', '주', '야'
		        , '합계', '공장코드', '버전', 'SEQ', '원가부분코드', '라인코드', '작업장코드', '시작일'
		FROM    DUAL,
				(
			#if("$!{checked_weekly}" == "w0")
                SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
            #elseif("$!{checked_weekly}" == "w2")
                SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
            #else
                SELECT NEXT_DAY(SYSDATE,2) MON --차주
            #end  
                FROM   DUAL 
                ) DT
	</query>
	
	<!-- 2. Excel Download : 조회 -->
	<!-- 2014-12-17 면/스낵/기타로 DIVISION 분류식 추가 -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excelDown">
            SELECT  HR.PLANT_NAME, 
                    HR.TEAM_NAME, 
                    HR.PROC_NAME, 
                    DS.ITEM_ID, 
                    IM.ITEM_NAME, 
                    IM.SPEC, 
                    NE.LABOR_WOMAN, 
                    -- 0001 : MTO, 0002: MTS
                    DECODE(IM.MTO_MTS_TYPE, '0001','O', '0002', 'S') MTO_MTS_TYPE, 
                    DS.ORD_NO
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D01A 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D01B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D01C   
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D02A 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D02B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D02C   
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D03A 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D03B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D03C 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D04A 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D04B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D04C 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D05A  
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D05B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D05C 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D06A  
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D06B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D06C 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE NULL END) D07A 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE NULL END) D07B 
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE NULL END) D07C                                                     
                    ---------------------------------------------------------------------------------------------------------------------------
                    , SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+0, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+1, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+2, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+3, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+4, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+5, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '1' THEN  DS.SHIFT_QTY  ELSE 0 END)
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '3' THEN  DS.SHIFT_QTY  ELSE 0 END)               
                    + SUM(CASE WHEN DS.PROD_DATES = TO_CHAR(WK.MON+6, 'YYYYMMDD') AND DS.SHIFT_TYPE = '5' THEN  DS.SHIFT_QTY  ELSE 0 END) TOT
                    ----------------------------------------------------------------------------------------------------------------------------
                    ,HR.PLANT_ID 
                    ,DS.VERSION 
                    ,DS.SEQ 
                    ,HR.TEAM_ID 
                    ,HR.LINE_ID 
                    ,HR.PROC_ID
                    ,TO_CHAR(WK.MON+0, 'YYYYMMDD') AS D01A_PROD_DATE 
                    ,DS.ORD_ITEM_NO 
                    ,DS.CAT_ID                  
            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                    ITEM_MST IM, 
                    SCH_ITEM_RANK HR,
                    (
                -- DEFAULT : 차주, 차주 월요일
                #if("$!{checked_weekly}" == "w0")
                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                #elseif("$!{checked_weekly}" == "w2")
                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                #else
                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                #end  
                    FROM   DUAL                          
                    ) WK,
                    (
                    /* ITEM_CAPA 의 필요인원 정보 SELECT */
                    SELECT  DISTINCT 
                            PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                    FROM    ITEM_CAPA
                    WHERE   MADE_TYPE != 'DE'
                    ORDER   BY PLANT_ID, ITEM_ID, LINE_ID, PROC_ID, LABOR_MAN, LABOR_WOMAN
                    ) NE
            WHERE   DS.CAT_ID = 'PS' 
            AND     ($commonUtil.replaceAll("$!{plant_version}","''","'"))
            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
            AND     DS.CAT_ID   = HR.CAT_ID
            AND     DS.PLANT_ID = HR.PLANT_ID
            AND     DS.LINE_ID  = HR.LINE_ID
            AND     DS.PROC_ID = HR.PROC_ID
            AND     DS.ITEM_ID = HR.ITEM_ID
            AND     DS.ITEM_ID = IM.ITEM_ID
            AND     IM.ITYPE = 'FERT'
            AND     DS.PLANT_ID = NE.PLANT_ID(+)
            AND     DS.ITEM_ID = NE.ITEM_ID(+)
            AND     DS.PROC_ID = NE.PROC_ID(+)
            #if("$!{checked_gubn}" == "d10")
            	AND IM.DIVISION ='10'
            #elseif("$!{checked_gubn}" == "d20")
            	AND IM.DIVISION ='20'
            #elseif("$!{checked_gubn}" == "d30")
            	AND IM.DIVISION NOT IN ('10','20')
            #end
            GROUP   BY DS.CAT_ID, HR.PLANT_ID, HR.PLANT_NAME, HR.TEAM_NAME, HR.LINE_ID, HR.PROC_ID, HR.PROC_NAME, 
                    DS.ITEM_ID, IM.ITEM_NAME, IM.SPEC, NE.LABOR_WOMAN, DS.VERSION, DS.SEQ, IM.MTO_MTS_TYPE, 
                    DS.ORD_NO, HR.TEAM_ID, IM.CAT04, IM.RECIPE_TYPE, DS.ORD_ITEM_NO, HR.ITEM_ORDER 
            ORDER   BY HR.PLANT_ID, HR.TEAM_ID, HR.PROC_ID, HR.ITEM_ORDER
  
	</query>
	
	<!-- 3. DAILY_SCH_PLAN_SHIFT_EXCEL : DELETE (기존에 같은 USER의  데이타를 삭제) -->
	<!-- 각 공장별로 수정할 때 정해진 공장 이외의 데이타를 같이 수정하면 안됨 (항상 같은 유저가 수정하도록 프로세스적인 룰을 정해야함.)-->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_01">
	
		DELETE 	DAILY_SCH_PLAN_SHIFT_EXCEL
		WHERE	MADE_BY = '$!{_user_id}'	
		
	</query>
	
	<!-- 4. DAILY_SCH_PLAN_SHIFT_EXCEL_EXCEPT : DELETE (기존에 같은 USER의  데이타를 삭제) -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_02">
	
		DELETE 	DAILY_SCH_PLAN_EXCEL_EXCEPT
		WHERE	MADE_BY = '$!{_user_id}'
		
	</query>
	
	<!-- 5. DAILY_SCH_PLAN_SHIFT_EXCEL_EXCEPT : INSERT -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_03" fix="_user_id"
		iterator="plant_name plant_id version seq item_id item_name line_id proc_id proc_name start_date ord_no ord_item_no cat_id row_count">
	
		INSERT  INTO DAILY_SCH_PLAN_EXCEL_EXCEPT
                (DESCRIPTION, PLANT_ID, VERSION, SEQ, ITEM_ID, LINE_ID,
                 PROC_ID, START_DATE, CAT_ID, MADE_TYPE, MADE_DTTM, MADE_BY)
        -- 1. 엑셀 업로드시 PK값중 하나라도 없는 경우
        SELECT  'CASE 1 : PK 오류 (Excel $!{row_count} 행)'           DESCRIPTION
                , TRIM('$!{plant_id}')       PLANT_ID              
                , TRIM('$!{version}')        VERSION
                , TRIM('$!{seq}')            SEQ
                , TRIM('$!{item_id}')        ITEM_ID
                , TRIM('$!{line_id}')        LINE_ID
                , TRIM('$!{proc_id}')        PROC_ID
                , TRIM('$!{start_date}')     START_DATE
                , TRIM('$!{cat_id}')         CAT_ID
                , 'AD'                       MADE_TYPE
                , SYSDATE                    MADE_DTTM
                , '$!{_user_id}'             MADE_BY
        FROM    DUAL
        WHERE   TRIM('$!{plant_id}')    IS NULL    -- 공장코드가 없는 경우 
        OR      TRIM('$!{version}')     IS NULL    -- 버전정보가 없는 경우 
        OR      TRIM('$!{seq}')         IS NULL    -- 버전차수가 없는 경우 
        OR      TRIM('$!{item_id}')     IS NULL    -- 제품코드가 없는 경우 
        OR      TRIM('$!{line_id}')     IS NULL    -- 라인코드가 없는 경우 
        OR      TRIM('$!{proc_id}')     IS NULL    -- 작업장코드가 없는 경우 
        OR      TRIM('$!{start_date}')  IS NULL    -- 작업시작일이 없는 경우 
        OR      TRIM('$!{cat_id}')      IS NULL    -- CAT_ID가 없는 경우 
        UNION   ALL
        -- 2. 엑셀 업로드시 PK값은 모두 있으나, ITEM_CAPA에 해당하는 PLANT, ITEM, LINE, PROC 가 아닌 경우
        SELECT  'CASE 2 : PLANT, ITEM, LINE, PROC 코드 오류 (Excel $!{row_count} 행)'            DESCRIPTION
                , TRIM('$!{plant_id}')       PLANT_ID              
                , TRIM('$!{version}')        VERSION
                , TRIM('$!{seq}')            SEQ
                , TRIM('$!{item_id}')        ITEM_ID
                , TRIM('$!{line_id}')        LINE_ID
                , TRIM('$!{proc_id}')        PROC_ID
                , TRIM('$!{start_date}')     START_DATE
                , TRIM('$!{cat_id}')         CAT_ID
                , 'AD'                       MADE_TYPE
                , SYSDATE                    MADE_DTTM
                , '$!{_user_id}'             MADE_BY
        FROM    DUAL
        WHERE   TRIM('$!{plant_id}')    IS NOT NULL    -- 공장코드가 있는 경우 
        AND     TRIM('$!{version}')     IS NOT NULL    -- 버전정보가 있는 경우 
        AND     TRIM('$!{seq}')         IS NOT NULL    -- 버전차수가 있는 경우 
        AND     TRIM('$!{item_id}')     IS NOT NULL    -- 제품코드가 있는 경우 
        AND     TRIM('$!{line_id}')     IS NOT NULL    -- 라인코드가 있는 경우 
        AND     TRIM('$!{proc_id}')     IS NOT NULL    -- 작업장코드가 있는 경우 
        AND     TRIM('$!{start_date}')  IS NOT NULL    -- 작업시작일이 있는 경우 
        AND     TRIM('$!{cat_id}')      IS NOT NULL    -- CAT_ID가 있는 경우 
        AND     NOT EXISTS (                           -- PLANT, ITEM, LINE, 작업장이 일치 하지 않는 경우.
                   SELECT  IC.PLANT_ID
                   FROM    ITEM_CAPA IC
                   WHERE   IC.PLANT_ID = TRIM('$!{plant_id}')
                   AND     IC.ITEM_ID  = TRIM('$!{item_id}')
                   AND     IC.LINE_ID  = TRIM('$!{line_id}') 
                   AND     IC.PROC_ID  = TRIM('$!{proc_id}')
                   AND	   IC.MADE_TYPE != 'DE'
               )
        UNION   ALL
        -- 3. 엑셀 업로드시 PK값은 모두 있으나, VERSION, PLANT 가 다른거나 없는 경우
        SELECT  'CASE 3 : 해당 VERSION, PLANT 불일치 (Excel $!{row_count} 행)'            DESCRIPTION
                , TRIM('$!{plant_id}')       PLANT_ID              
                , TRIM('$!{version}')        VERSION
                , TRIM('$!{seq}')            SEQ
                , TRIM('$!{item_id}')        ITEM_ID
                , TRIM('$!{line_id}')        LINE_ID
                , TRIM('$!{proc_id}')        PROC_ID
                , TRIM('$!{start_date}')     START_DATE
                , TRIM('$!{cat_id}')         CAT_ID
                , 'AD'                       MADE_TYPE
                , SYSDATE                    MADE_DTTM
                , '$!{_user_id}'             MADE_BY
        FROM    DUAL
        WHERE   TRIM('$!{plant_id}')    IS NOT NULL    -- 공장코드가 있는 경우 
        AND     TRIM('$!{version}')     IS NOT NULL    -- 버전정보가 있는 경우 
        AND     TRIM('$!{seq}')         IS NOT NULL    -- 버전차수가 있는 경우 
        AND     TRIM('$!{item_id}')     IS NOT NULL    -- 제품코드가 있는 경우 
        AND     TRIM('$!{line_id}')     IS NOT NULL    -- 라인코드가 있는 경우 
        AND     TRIM('$!{proc_id}')     IS NOT NULL    -- 작업장코드가 있는 경우 
        AND     TRIM('$!{start_date}')  IS NOT NULL    -- 작업시작일이 있는 경우 
        AND     TRIM('$!{cat_id}')      IS NOT NULL    -- CAT_ID가 있는 경우 
        AND     NOT EXISTS (                           -- VERSION, PLANT_ID가 일치하지 않는 경우.
        	#if("$!{cat_id}" == "PS")
                   SELECT  EB.PLANT_ID, PV.VERSION, PV.SEQ, PV.STATUS  
                   FROM    PLAN_VERSION_LOG PV, ENGN_BAT_MST EB
                   WHERE   PV.MADE_TYPE != 'DE'
                   AND     EB.MADE_TYPE != 'DE'
                   AND     PV.PERIOD_TYPE = 'DAILY'
                   AND     PV.PERIOD_TYPE = EB.PERIOD_TYPE 
                   AND     PV.CAT_ID = EB.CAT_ID
                   AND     PV.SUB_CAT = EB.SUB_CAT
                   AND     PV.CAT_ID = '$!{cat_id}'
                   AND     PV.SEQ IS NOT NULL
                   AND     EB.PLANT_ID = TRIM('$!{plant_id}')
                   AND     PV.VERSION  = TRIM('$!{version}')
                   AND     PV.SEQ      = TRIM('$!{seq}')
            #else
            	   SELECT  PV.VERSION, PV.SEQ, PV.STATUS  
                   FROM    PLAN_VERSION_LOG PV
                   WHERE   PV.MADE_TYPE != 'DE'
                   AND     PV.PERIOD_TYPE = 'DAILY'
                   AND     PV.CAT_ID = '$!{cat_id}'
                   AND     PV.SEQ IS NOT NULL
                   AND     PV.VERSION  = TRIM('$!{version}')
                   AND     PV.SEQ      = TRIM('$!{seq}')
            #end
              )
		
	</query>
	
	<!-- 6. DAILY_SCH_PLAN_SHIFT_EXCEL : INSERT -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_04" fix="_user_id"
		iterator="plant_id version seq item_id line_id proc_id start_date ord_no ord_item_no mon_qty_1 mon_qty_3 mon_qty_5 tue_qty_1 tue_qty_3 tue_qty_5 wed_qty_1 wed_qty_3 wed_qty_5 thu_qty_1 thu_qty_3 thu_qty_5 fri_qty_1 fri_qty_3 fri_qty_5 sat_qty_1 sat_qty_3 sat_qty_5 sun_qty_1 sun_qty_3 sun_qty_5 cat_id">
	<!-- 2014-12-18 면/스낵/기타 구분값으로 ITEM_MST 조인테이블 추가 -->
		INSERT  INTO DAILY_SCH_PLAN_SHIFT_EXCEL
		        (PLANT_ID, VERSION, SEQ, ITEM_ID, LINE_ID, PROC_ID, START_DATE, ORD_NO, ORD_ITEM_NO, CAT_ID,
		         MON_QTY_1, MON_QTY_3, MON_QTY_5, TUE_QTY_1, TUE_QTY_3, TUE_QTY_5,
		         WED_QTY_1, WED_QTY_3, WED_QTY_5, THU_QTY_1, THU_QTY_3, THU_QTY_5,
		         FRI_QTY_1, FRI_QTY_3, FRI_QTY_5, SAT_QTY_1, SAT_QTY_3, SAT_QTY_5,
		         SUN_QTY_1, SUN_QTY_3, SUN_QTY_5, MADE_TYPE, MADE_DTTM, MADE_BY)		
		SELECT	T1.PLANT_ID,
				T1.VERSION,
				T1.SEQ,
				T1.ITEM_ID,
				T1.LINE_ID,
				T1.PROC_ID,
				T1.START_DATE,
				T1.ORD_NO,
				T1.ORD_ITEM_NO,
				T1.CAT_ID,
				T1.MON_QTY_1,
				T1.MON_QTY_3,
				T1.MON_QTY_5,
				T1.TUE_QTY_1,
				T1.TUE_QTY_3,
				T1.TUE_QTY_5,
				T1.WED_QTY_1,
				T1.WED_QTY_3,
				T1.WED_QTY_5,
				T1.THU_QTY_1,
				T1.THU_QTY_3,
				T1.THU_QTY_5,
				T1.FRI_QTY_1,
				T1.FRI_QTY_3,
				T1.FRI_QTY_5,
				T1.SAT_QTY_1,
				T1.SAT_QTY_3,
				T1.SAT_QTY_5,
				T1.SUN_QTY_1,
				T1.SUN_QTY_3,
				T1.SUN_QTY_5,
				T1.MADE_TYPE,
				T1.MADE_DTTM,
				T1.MADE_BY
		FROM
		(
		SELECT  TRIM('$!{plant_id}')		PLANT_ID
				, TRIM('$!{version}')	 	VERSION
				, TRIM('$!{seq}')			SEQ
				, TRIM('$!{item_id}')	 	ITEM_ID
				, TRIM('$!{line_id}')		LINE_ID
				, TRIM('$!{proc_id}')		PROC_ID
				, TRIM('$!{start_date}')	START_DATE
				, TRIM('$!{ord_no}')		ORD_NO
				, TRIM('$!{ord_item_no}')	ORD_ITEM_NO
				, TRIM('$!{cat_id}')		CAT_ID
				, TO_NUMBER(REPLACE('$!{mon_qty_1}', ',', ''))	MON_QTY_1
				, TO_NUMBER(REPLACE('$!{mon_qty_3}', ',', ''))	MON_QTY_3
				, TO_NUMBER(REPLACE('$!{mon_qty_5}', ',', '')) 	MON_QTY_5
				, TO_NUMBER(REPLACE('$!{tue_qty_1}', ',', ''))	TUE_QTY_1
				, TO_NUMBER(REPLACE('$!{tue_qty_3}', ',', ''))	TUE_QTY_3
				, TO_NUMBER(REPLACE('$!{tue_qty_5}', ',', ''))	TUE_QTY_5
				, TO_NUMBER(REPLACE('$!{wed_qty_1}', ',', ''))	WED_QTY_1
				, TO_NUMBER(REPLACE('$!{wed_qty_3}', ',', ''))	WED_QTY_3
				, TO_NUMBER(REPLACE('$!{wed_qty_5}', ',', ''))	WED_QTY_5
				, TO_NUMBER(REPLACE('$!{thu_qty_1}', ',', ''))	THU_QTY_1
				, TO_NUMBER(REPLACE('$!{thu_qty_3}', ',', ''))	THU_QTY_3
				, TO_NUMBER(REPLACE('$!{thu_qty_5}', ',', ''))	THU_QTY_5
				, TO_NUMBER(REPLACE('$!{fri_qty_1}', ',', ''))	FRI_QTY_1
				, TO_NUMBER(REPLACE('$!{fri_qty_3}', ',', ''))	FRI_QTY_3
				, TO_NUMBER(REPLACE('$!{fri_qty_5}', ',', ''))	FRI_QTY_5
				, TO_NUMBER(REPLACE('$!{sat_qty_1}', ',', ''))	SAT_QTY_1
				, TO_NUMBER(REPLACE('$!{sat_qty_3}', ',', ''))	SAT_QTY_3
				, TO_NUMBER(REPLACE('$!{sat_qty_5}', ',', ''))	SAT_QTY_5 
				, TO_NUMBER(REPLACE('$!{sun_qty_1}', ',', ''))	SUN_QTY_1
				, TO_NUMBER(REPLACE('$!{sun_qty_3}', ',', ''))	SUN_QTY_3
				, TO_NUMBER(REPLACE('$!{sun_qty_5}', ',', ''))	SUN_QTY_5
				, 'AD'				MADE_TYPE
				, SYSDATE			MADE_DTTM
				, '$!{_user_id}'	MADE_BY
		FROM	DUAL
		)T1, ITEM_MST T2
		WHERE	NOT EXISTS (
					SELECT	DE.VERSION
					FROM	DAILY_SCH_PLAN_SHIFT_EXCEL DE
					WHERE	DE.PLANT_ID = TRIM('$!{plant_id}')
					AND		DE.VERSION	= TRIM('$!{version}')
					AND		DE.SEQ		= TRIM('$!{seq}')
					AND		DE.ITEM_ID	= TRIM('$!{item_id}')
					AND		DE.LINE_ID	= TRIM('$!{line_id}')
					AND		DE.PROC_ID	= TRIM('$!{proc_id}')
					AND		DE.ORD_NO	= TRIM('$!{ord_no}')
				)
		AND		T1.ITEM_ID = T2.ITEM_ID
		#if("$!{checked_gubn}" == "d10")
           AND T2.DIVISION ='10'
        #elseif("$!{checked_gubn}" == "d20")
           AND T2.DIVISION ='20'
        #elseif("$!{checked_gubn}" == "d30")
           AND T2.DIVISION NOT IN ('10','20')
        #end
		AND		TRIM('$!{plant_id}')	IS NOT NULL	-- 공장코드가 없으면 입력 불가
		AND		TRIM('$!{version}')	 	IS NOT NULL	-- 버전정보가 없으면 입력 불가
		AND		TRIM('$!{seq}')			IS NOT NULL	-- 버전차수가 없으면 입력 불가
		AND		TRIM('$!{item_id}')	 	IS NOT NULL	-- 제품코드가 없으면 입력 불가
		AND		TRIM('$!{line_id}')		IS NOT NULL -- 라인코드가 없으면 입력 불가
		AND		TRIM('$!{proc_id}')		IS NOT NULL -- 작업장코드가 없으면 입력 불가
		AND		TRIM('$!{start_date}')	IS NOT NULL -- 작업시작일이 없으면 입력 불가
		AND		TRIM('$!{cat_id}')		IS NOT NULL -- CAT_ID가 없으면 입력 불가
	
	</query>
	
	<!-- 7. DAILY_SCH_PLAN_EXCEL_EXCEPT : INSERT -->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_05" fix="_user_id">
		INSERT  INTO DAILY_SCH_PLAN_EXCEL_EXCEPT
                (DESCRIPTION, PLANT_ID, VERSION, SEQ, ITEM_ID, LINE_ID,
                 PROC_ID, START_DATE, CAT_ID, SHIFT_TYPE, SHIFT_QTY, PROD_DATES,
                 MADE_TYPE, MADE_DTTM, MADE_BY)
				SELECT  'CASE 4 : 설비, 조운영 CALENDAR 휴무에 의한 데이타 누락' DESCRIPTION,
				        DP.PLANT_ID, 
				        DP.VERSION, 
				        DP.SEQ,
				        DP.ITEM_ID,
				        DP.LINE_ID, 
				        DP.PROC_ID, 
				        DP.START_DATE,
				        DP.CAT_ID,
				        DP.SHIFT_TYPE,
				        DP.SHIFT_QTY,
				        DP.PROD_DATES,
				        'AD'            MADE_TYPE,
				        SYSDATE         MADE_DTTM,
				        '$!{_user_id}'  MADE_BY
				FROM    (
				        -- 월요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, MON_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.MON_QTY_1 IS NOT NULL
				        AND     DE.MON_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 월요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, MON_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.MON_QTY_3 IS NOT NULL
				        AND     DE.MON_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 월요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, MON_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.MON_QTY_5 IS NOT NULL
				        AND     DE.MON_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 화요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, TUE_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.TUE_QTY_1 IS NOT NULL
				        AND     DE.TUE_QTY_1 &lt;&gt; 0
				        AND    DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 화요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, TUE_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.TUE_QTY_3 IS NOT NULL
				        AND     DE.TUE_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 화요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, TUE_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.TUE_QTY_5 IS NOT NULL
				        AND     DE.TUE_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 수요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, WED_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.WED_QTY_1 IS NOT NULL
				        AND     DE.WED_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 수요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, WED_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.WED_QTY_3 IS NOT NULL
				        AND     DE.WED_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 수요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, WED_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.WED_QTY_5 IS NOT NULL
				        AND     DE.WED_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 목요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, THU_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.THU_QTY_1 IS NOT NULL
				        AND     DE.THU_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 목요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, THU_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.THU_QTY_3 IS NOT NULL
				        AND     DE.THU_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 목요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, THU_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.THU_QTY_5 IS NOT NULL
				        AND     DE.THU_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 금요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, FRI_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.FRI_QTY_1 IS NOT NULL
				        AND     DE.FRI_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 금요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, FRI_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.FRI_QTY_3 IS NOT NULL
				        AND     DE.FRI_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 금요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, FRI_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.FRI_QTY_5 IS NOT NULL
				        AND     DE.FRI_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 토요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, SAT_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SAT_QTY_1 IS NOT NULL
				        AND     DE.SAT_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 토요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, SAT_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SAT_QTY_3 IS NOT NULL
				        AND     DE.SAT_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 토요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, SAT_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SAT_QTY_5 IS NOT NULL
				        AND     DE.SAT_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 일요일 조간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
				                '1' SHIFT_TYPE, SUN_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SUN_QTY_1 IS NOT NULL
				        AND     DE.SUN_QTY_1 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 일요일 주간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
				                '3' SHIFT_TYPE, SUN_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SUN_QTY_3 IS NOT NULL
				        AND     DE.SUN_QTY_3 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        UNION   ALL
				        -- 일요일 야간
				        SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ,
				                DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, DE.START_DATE,
				                TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
				                '5' SHIFT_TYPE, SUN_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
				        FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
				        WHERE   DE.SUN_QTY_5 IS NOT NULL
				        AND     DE.SUN_QTY_5 &lt;&gt; 0
				        AND     DE.MADE_BY =   '$!{_user_id}'
				        ) DP,
				        (
				        SELECT 	DISTINCT PLANT_ID, ITEM_ID, LINE_ID, PROC_ID
				        FROM 	ITEM_CAPA
				        ) IC
				WHERE   DP.PLANT_ID = IC.PLANT_ID
				AND     DP.ITEM_ID  = IC.ITEM_ID
				AND     DP.LINE_ID  = IC.LINE_ID
				AND     DP.PROC_ID  = IC.PROC_ID
				AND     NOT EXISTS (
				            /* 조운영 캘린더 인덱스 정보 */
				            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
				            FROM    V_WORK_DIARY_IDX  WI
				            WHERE   DP.PLANT_ID = WI.PLANT_ID
				            AND     DP.PROC_ID = WI.PROC_ID
				            AND     DP.PROD_DATES = WI.DUTY_DATE
				            AND     DP.SHIFT_TYPE = WI.SHIFT_NAME
				        )
	</query>
	
	<!-- 8. DAILY_SCH_PLAN_SHIFT : DELETE (새로 엑셀에서 업로드 한 사용자의  데이타를 원본 테이블에서 삭제함)-->
	<!-- 완제품 계획 버전에는 반제품 버전도 포함되므로 완제품 데이타만 삭제되도록 ITEM_MST를 걸어줌.-->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_06" fix="_user_id">
        
		DELETE  DAILY_SCH_PLAN_SHIFT DT
		WHERE   DT.WO_ID IN (
            SELECT  DS.WO_ID
            FROM    DAILY_SCH_PLAN_SHIFT DS,
                    (SELECT DISTINCT DE.VERSION, DE.SEQ, DE.PLANT_ID, 
                            START_DATE, TO_CHAR(TO_DATE(START_DATE,'YYYYMMDD')+6,'YYYYMMDD') END_DATE
                     FROM   DAILY_SCH_PLAN_SHIFT_EXCEL DE
                     WHERE  DE.MADE_BY = '$!{_user_id}') VS, 
                    ITEM_MST IM
            WHERE   DS.VERSION  = VS.VERSION
            AND     DS.SEQ      = VS.SEQ
            AND     DS.PLANT_ID = VS.PLANT_ID
            AND     DS.ITEM_ID  = IM.ITEM_ID
            AND     IM.ITYPE    = 'FERT'
            AND     DS.PROD_DATES BETWEEN VS.START_DATE AND VS.END_DATE
           	#if("$!{checked_gubn}" == "d10")
			AND		IM.DIVISION ='10'
			#elseif("$!{checked_gubn}" == "d20")
			AND		IM.DIVISION ='20'
			#elseif("$!{checked_gubn}" == "d30")
			AND		IM.DIVISION NOT IN ('10','20')
			#end				
            
        )

	</query>
	
	<!-- 9. DAILY_SCH_PLAN_SHIFT : INSERT (포장단 및 전공정 생산 계획 생성)-->
	<query id="sc_11020_dailyProductionPlanAnalysisNew_list_excel_save_07" fix="_user_id">
        
		    INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
                    PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, PRIORITY, ORD_NO, ORD_ITEM_NO, 
                    PROJECT_CD, GRP_WO_ID, PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, 
                    RESOURCESET_ID, WO_END)                
            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, 
                    DS.WO_ID||LPAD(RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION
                                                           ORDER BY DS.ITEM_ID, DS.WO_ID, DS.ORD_NO)
                                  ,8,'0') AS WO_ID, 
                    DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DS.PROD_DATES,
                    DS.SHIFT_TYPE,
                    DS.START_DTTM,
                    DS.END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD,
                    DS.GRP_WO_ID||LPAD(RANK() OVER(PARTITION BY DS.CAT_ID, DS.PLANT_ID, DS.VERSION
                                                               ORDER BY DS.ITEM_ID, DS.WO_ID, DS.ORD_NO)
                                      ,8,'0') AS GRP_WO_ID, 
                    DS.PROD_VER,
                    DS.MADE_TYPE,
                    DS.MADE_DTTM,
                    DS.MADE_BY,
                    DS.SCH_TYPE,
                    DS.ROUTE_ID,
                    DS.RESOURCESET_ID,
                    DS.WO_END                 
            FROM    (
		            /* 월/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                    		DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, '1' AS PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            -- 월요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, MON_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_1 IS NOT NULL
                                    AND     DE.MON_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 월요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, MON_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_3 IS NOT NULL
                                    AND     DE.MON_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 월요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, MON_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_5 IS NOT NULL
                                    AND     DE.MON_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, TUE_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_1 IS NOT NULL
                                    AND     DE.TUE_QTY_1 &lt;&gt; 0
                                    AND    DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, TUE_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_3 IS NOT NULL
                                    AND     DE.TUE_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, TUE_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_5 IS NOT NULL
                                    AND     DE.TUE_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, WED_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_1 IS NOT NULL
                                    AND     DE.WED_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, WED_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_3 IS NOT NULL
                                    AND     DE.WED_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, WED_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_5 IS NOT NULL
                                    AND     DE.WED_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, THU_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_1 IS NOT NULL
                                    AND     DE.THU_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, THU_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_3 IS NOT NULL
                                    AND     DE.THU_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, THU_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_5 IS NOT NULL
                                    AND     DE.THU_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, FRI_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_1 IS NOT NULL
                                    AND     DE.FRI_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, FRI_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_3 IS NOT NULL
                                    AND     DE.FRI_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, FRI_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_5 IS NOT NULL
                                    AND     DE.FRI_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, SAT_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_1 IS NOT NULL
                                    AND     DE.SAT_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, SAT_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_3 IS NOT NULL
                                    AND     DE.SAT_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, SAT_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_5 IS NOT NULL
                                    AND     DE.SAT_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, SUN_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_1 IS NOT NULL
                                    AND     DE.SUN_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, SUN_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_3 IS NOT NULL
                                    AND     DE.SUN_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, SUN_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_5 IS NOT NULL
                                    AND     DE.SUN_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
                                    (
                                    SELECT  DISTINCT PLANT_ID, PROC_ID, ITEM_ID, PROD_VER
                                    FROM    ITEM_CAPA
                                    WHERE   MADE_TYPE != 'DE'
                                    ) C,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            ) WI,
		                            ITEM_MST IM
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
                            AND     A.PLANT_ID = C.PLANT_ID(+)
                            AND     A.PROC_ID = C.PROC_ID(+)
                            AND     A.ITEM_ID = C.ITEM_ID(+)
                            AND     B.PROD_VER = C.PROD_VER
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    AND		A.ITEM_ID	 = IM.ITEM_ID
		                    #if("$!{checked_gubn}" == "d10")
            				AND IM.DIVISION ='10'
           					#elseif("$!{checked_gubn}" == "d20")
            				AND IM.DIVISION ='20'
           					#elseif("$!{checked_gubn}" == "d30")
            				AND IM.DIVISION NOT IN ('10','20')
          					#end
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    ) WD,
                            (
                            SELECT  IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER  , MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            GROUP   BY IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER                      
                            ORDER   BY IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
                    AND     DS.PLANT_ID = MX.PLANT_ID
                    AND     DS.PLANT_ID = MX.PLANT_ID(+)
                    AND     DS.ITEM_ID = MX.ITEM_ID(+)
                    AND     DS.PROD_VER = MX.PROD_VER(+)
		            ) DS

	</query>
	
	<!-- 10. DAILY_SCH_PLAN_EXCEL_EXCEPT : SELECT-->
	<query id="sc_11020_dailyProductionPlanAnalysisNewExcelExcept_popup" fix="_user_id">
		
		SELECT  DESCRIPTION, VERSION, SEQ, PLANT_ID, LINE_ID, PROC_ID, ITEM_ID,
		        TO_CHAR(TO_DATE(PROD_DATES, 'YYYY-MM-DD'), 'YYYY-MM-DD') PROD_DATES,
		        DECODE(SHIFT_TYPE, 1, '조간', 3, '주간', 5, '야간') SHIFT_NAME,
		        SHIFT_QTY
		FROM    DAILY_SCH_PLAN_EXCEL_EXCEPT,
				(SELECT 1 FROM DUAL)
		WHERE   MADE_BY = '$!{_user_id}'
		ORDER   BY PLANT_ID, DESCRIPTION, ITEM_ID, PROD_DATES, SHIFT_TYPE
		
	</query>
	
	
	<!-- 일간 반제품 생산계획 분석(재구성) -->
	<!-- 1. Excel Download : 조회 -->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_excelDown">
            
            SELECT  DS.PLANT_NAME, DS.TEAM_NAME, DS.PROC_NAME, 
                    DS.ITEM_ID, DS.ITEM_NAME, DS.SPEC, '' AS LABOR_WOMAN, 
                    '' AS MTO_MTS_TYPE, DS.ORD_NO,
                    CASE WHEN DS.D01A = 0 THEN NULL ELSE DS.D01A END D01A, 
                    CASE WHEN DS.D01B = 0 THEN NULL ELSE DS.D01B END D01B,
                    CASE WHEN DS.D01C = 0 THEN NULL ELSE DS.D01C END D01C,
                    ------------------------------------------------
                    CASE WHEN DS.D02A = 0 THEN NULL ELSE DS.D02A END D02A, 
                    CASE WHEN DS.D02B = 0 THEN NULL ELSE DS.D02B END D02B,
                    CASE WHEN DS.D02C = 0 THEN NULL ELSE DS.D02C END D02C,
                    ------------------------------------------------
                    CASE WHEN DS.D03A = 0 THEN NULL ELSE DS.D03A END D03A, 
                    CASE WHEN DS.D03B = 0 THEN NULL ELSE DS.D03B END D03B,
                    CASE WHEN DS.D03C = 0 THEN NULL ELSE DS.D03C END D03C,
                    ------------------------------------------------
                    CASE WHEN DS.D04A = 0 THEN NULL ELSE DS.D04A END D04A, 
                    CASE WHEN DS.D04B = 0 THEN NULL ELSE DS.D04B END D04B,
                    CASE WHEN DS.D04C = 0 THEN NULL ELSE DS.D04C END D04C,
                    ------------------------------------------------
                    CASE WHEN DS.D05A = 0 THEN NULL ELSE DS.D05A END D05A, 
                    CASE WHEN DS.D05B = 0 THEN NULL ELSE DS.D05B END D05B,
                    CASE WHEN DS.D05C = 0 THEN NULL ELSE DS.D05C END D05C,
                    ------------------------------------------------
                    CASE WHEN DS.D06A = 0 THEN NULL ELSE DS.D06A END D06A, 
                    CASE WHEN DS.D06B = 0 THEN NULL ELSE DS.D06B END D06B,
                    CASE WHEN DS.D06C = 0 THEN NULL ELSE DS.D06C END D06C,
                    ------------------------------------------------
                    CASE WHEN DS.D07A = 0 THEN NULL ELSE DS.D07A END D07A, 
                    CASE WHEN DS.D07B = 0 THEN NULL ELSE DS.D07B END D07B,
                    CASE WHEN DS.D07C = 0 THEN NULL ELSE DS.D07C END D07C,
                    DS.TOT,                    
                    ------------------------------------------------
                    DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.TEAM_ID, DS.LINE_ID, DS.PROC_ID,
                    DS.D01A_PROD_DATE, DS.ORD_ITEM_NO, DS.CAT_ID
            FROM    (
                    SELECT  A.PLANT_ID, A.PLANT_NAME, A.TEAM_NAME, A.LINE_ID, A.PROC_ID, A.PROC_NAME,
                            A.ITEM_ID, A.ITEM_NAME, A.SPEC, A.VERSION, A.SEQ, A.ORD_NO                                                 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D01A 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D01B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D01C   
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D02A 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D02B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D02C   
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D03A 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D03B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D03C 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D04A 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D04B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D04C 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D05A  
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D05B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D05C 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D06A  
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D06B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D06C 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END) D07A 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END) D07B 
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) D07C                                                     
                            ---------------------------------------------------------------------------------------------------------------------------
                            , SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+0, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+1, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+2, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+3, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+4, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+5, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '1' THEN  A.SHIFT_QTY  ELSE 0 END)
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '3' THEN  A.SHIFT_QTY  ELSE 0 END)               
                            + SUM(CASE WHEN A.PROD_DATES = TO_CHAR(A.MON+6, 'YYYYMMDD') AND A.SHIFT_TYPE = '5' THEN  A.SHIFT_QTY  ELSE 0 END) TOT
                            ----------------------------------------------------------------------------------------------------------------------------
                            , A.TEAM_ID, A.CAT_ID, A.ORD_ITEM_NO
                            , TO_CHAR(WK.MON+0, 'YYYYMMDD') AS D01A_PROD_DATE, TO_CHAR(WK.MON+6, 'YYYYMMDD') AS D07C_PROD_DATE  
                    FROM    (
                            SELECT    
                                    HR.PLANT_ID,    HR.PLANT_NAME,  HR.TEAM_NAME,   HR.PROC_ID, HR.PROC_NAME, 
                                    DS.ITEM_ID,     IM.ITEM_NAME,   IM.SPEC,        DS.VERSION, DS.SEQ, 
                                    HR.TEAM_ID,     DS.CAT_ID,      DS.PROD_DATES,  WK.MON,     DS.SHIFT_TYPE, 
                                    DS.SHIFT_QTY,   DS.ORD_NO,      DS.ORD_ITEM_NO, DS.LINE_ID
                            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                    ITEM_MST IM, 
                                    V_LAST_PROC_LIST HR, -- 마지막 작업장 리스트
                                    (
                                    -- DEFAULT : 차주, 차주 월요일
                                #if("$!{checked_weekly}" == "w0")
                                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                #elseif("$!{checked_weekly}" == "w2")
                                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                #else
                                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                #end                                  
                                    FROM   DUAL
                                    ) WK
                            WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' [$commonUtil.replaceAll("${semi_plant}","''","'")] )
                                        [OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                                    )
                            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                            AND     HR.PLANT_ID = DS.PLANT_ID
                            AND     DS.PROC_ID  = HR.PROC_ID
                            AND     DS.ITEM_ID  NOT LIKE '72%'
                            AND     DS.ITEM_ID  = IM.ITEM_ID
                            AND		DS.PROC_ID	!= '11091' -- 계량실 제외
                            AND     IM.ITYPE   != 'FERT'                            
                            UNION ALL
                            SELECT  
                                    HR.PLANT_ID,    HR.PLANT_NAME,  HR.TEAM_NAME,   HR.PROC_ID,     HR.PROC_NAME,   
                                    DS.ITEM_ID,     IM.ITEM_NAME,   IM.SPEC,        DS.VERSION,     DS.SEQ, 
                                    HR.TEAM_ID,     DS.CAT_ID,      DS.PROD_DATES,  WK.MON,         DS.SHIFT_TYPE, 
                                    DS.SHIFT_QTY,   DS.ORD_NO,      DS.ORD_ITEM_NO, DS.LINE_ID
                            FROM    DAILY_SCH_PLAN_SHIFT DS, 
                                    ITEM_MST IM, 
                                    V_HRCHY_PROC HR, -- 작업장 리스트
                                    (
                                    -- DEFAULT : 차주, 차주 월요일
                                #if("$!{checked_weekly}" == "w0")
                                    SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                                #elseif("$!{checked_weekly}" == "w2")
                                    SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                                #else
                                    SELECT NEXT_DAY(SYSDATE,2) MON --차주
                                #end                                  
                                    FROM   DUAL
                                    ) WK,
                                    (
                                    /* 기지류의 첫공정(투입공정) 추출 */
                                    SELECT  
                                            PLANT_ID, ITEM_ID, PROD_VER, LINE_ID, PROC_ID
                                    FROM    SCH_OPER_RANK_SEMI
                                    WHERE   ITEM_ID   LIKE '72%'
                                    AND     OPER_RANK = 1
                                    ) OP
                            WHERE   ( ( DS.CAT_ID = 'SS' AND DS.VERSION = '$!{semi_version}' [$commonUtil.replaceAll("${semi_plant}","''","'")] )
                                        [OR (DS.CAT_ID = 'PS' AND ($commonUtil.replaceAll("${plant_version}","''","'")))]
                                    ) 
                            AND     DS.PROD_DATES BETWEEN  TO_CHAR(WK.MON,'YYYYMMDD') AND TO_CHAR(WK.MON+6,'YYYYMMDD') 
                            AND     HR.PLANT_ID = DS.PLANT_ID
                            AND     DS.ITEM_ID  LIKE '72%'
                            AND     HR.PROC_ID  = DS.PROC_ID
                            AND     DS.PLANT_ID = OP.PLANT_ID 
                            AND     DS.ITEM_ID  = OP.ITEM_ID 
                            AND     DS.PROD_VER = OP.PROD_VER 
                            AND     DS.LINE_ID  = OP.LINE_ID 
                            AND     DS.PROC_ID  = OP.PROC_ID
                            AND     DS.ITEM_ID  = IM.ITEM_ID
                            AND		DS.PROC_ID	!= '11091' -- 계량실 제외
                            AND     IM.ITYPE   != 'FERT'                            
                            ) A,
                            (
                            -- DEFAULT : 차주, 차주 월요일
                        #if("$!{checked_weekly}" == "w0")
                            SELECT  NEXT_DAY(SYSDATE-7,2) MON --금주
                        #elseif("$!{checked_weekly}" == "w2")
                            SELECT  NEXT_DAY(SYSDATE+7,2) MON --차차주
                        #else
                            SELECT NEXT_DAY(SYSDATE,2) MON --차주
                        #end                                  
                            FROM   DUAL
                            ) WK
                    GROUP   BY A.PLANT_ID, A.PLANT_NAME, A.TEAM_NAME, A.PROC_ID, A.PROC_NAME, A.ITEM_ID, A.ITEM_NAME, A.SPEC, 
                            A.VERSION, A.SEQ, A.TEAM_ID, A.CAT_ID, A.LINE_ID, A.ORD_NO, A.ORD_ITEM_NO
                    ) DS
            ORDER   BY DS.PLANT_ID, DS.TEAM_ID, DS.PROC_ID, DS.ITEM_ID
  
	</query>
	
	<!-- 2. DAILY_SCH_PLAN_SHIFT : DELETE (반제품 새로 엑셀에서 업로드 한 사용자의  데이타를 원본 테이블에서 삭제함)-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_excel_save_01" fix="_user_id">
        
		DELETE  DAILY_SCH_PLAN_SHIFT DT
		WHERE   DT.WO_ID IN (
            SELECT  DISTINCT DS.WO_ID
            FROM    DAILY_SCH_PLAN_SHIFT DS,
                    (SELECT DISTINCT DE.VERSION, DE.SEQ, DE.PLANT_ID, 
                            START_DATE, TO_CHAR(TO_DATE(START_DATE,'YYYYMMDD')+6,'YYYYMMDD') END_DATE
                     FROM   DAILY_SCH_PLAN_SHIFT_EXCEL DE
                     WHERE  DE.MADE_BY = '$!{_user_id}') VS, 
                    ITEM_MST IM
            WHERE   DS.VERSION  = VS.VERSION
            AND     DS.SEQ      = VS.SEQ
            AND     DS.PLANT_ID = VS.PLANT_ID
            AND     DS.ITEM_ID  = IM.ITEM_ID
            AND     IM.ITYPE    != 'FERT'
            AND     DS.PROD_DATES BETWEEN VS.START_DATE AND VS.END_DATE
        )
        
	</query>
	
	<!-- 3. DAILY_SCH_PLAN_SHIFT : INSERT (포장단 및 전공정 생산 계획 생성)-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNew_list_excel_save_02" fix="_user_id">
        
		    INSERT  INTO DAILY_SCH_PLAN_SHIFT(CAT_ID, PLANT_ID, VERSION, SEQ, WO_ID, ITEM_ID, LINE_ID, PROC_ID, 
                    PROD_DATES, SHIFT_TYPE, START_DTTM, END_DTTM, SHIFT_QTY, QTY_UOM, PRIORITY, ORD_NO, ORD_ITEM_NO, 
                    PROJECT_CD, GRP_WO_ID, PROD_VER, MADE_TYPE, MADE_DTTM, MADE_BY, SCH_TYPE, ROUTE_ID, 
                    RESOURCESET_ID, WO_END)                
            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, 
                    DS.WO_ID||LPAD(RANK() OVER(PARTITION BY DS.CAT_ID, DS.VERSION
                                                           ORDER BY DS.ITEM_ID, DS.WO_ID, DS.ORD_NO)
                                  ,8,'0') AS WO_ID, 
                    DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
                    DS.PROD_DATES,
                    DS.SHIFT_TYPE,
                    DS.START_DTTM,
                    DS.END_DTTM,
                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO, DS.PROJECT_CD,
                    DS.GRP_WO_ID||LPAD(RANK() OVER(PARTITION BY DS.CAT_ID, DS.VERSION
                                                               ORDER BY DS.ITEM_ID, DS.WO_ID, DS.ORD_NO)
                                      ,8,'0') AS GRP_WO_ID, 
                    DS.PROD_VER,
                    DS.MADE_TYPE,
                    DS.MADE_DTTM,
                    DS.MADE_BY,
                    DS.SCH_TYPE,
                    DS.ROUTE_ID,
                    DS.RESOURCESET_ID,
                    DS.WO_END
            FROM    (
		            /* 월/조 */
		            SELECT  DS.CAT_ID, DS.PLANT_ID, DS.VERSION, DS.SEQ, DS.WO_ID, DS.ITEM_ID, DS.LINE_ID, DS.PROC_ID,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.PROD_DATES, WD.DUTY_DATE)   AS PROD_DATES,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.SHIFT_TYPE, WD.SHIFT_NAME)  AS SHIFT_TYPE,
		                    DECODE(DS.SHIFT_INDEX, NULL, DS.START_TIME, 0, DS.START_TIME, WD.START_TIME)  AS START_DTTM,
		                    CASE
		                    WHEN DS.SHIFT_INDEX IS NULL OR DS.SHIFT_INDEX = 0 OR DS.END_SYNC_FLAG = 'Y'
		                    THEN    
		                            DS.END_TIME
		                    ELSE
		                            WD.END_TIME
		                    END                                                         AS END_DTTM,
		                    DS.SHIFT_QTY,DS.QTY_UOM, DS.PRIORITY, DS.ORD_NO, DS.ORD_ITEM_NO,
		                    '' AS PROJECT_CD, DS.WO_ID AS GRP_WO_ID, DS.PROD_VER,
		                    'AD'                                                        AS MADE_TYPE,
		                    SYSDATE                                                     AS MADE_DTTM,
		                    '$!{_user_id}'                                              AS MADE_BY,
		                    ''                                                          AS SCH_TYPE,
		                    'R_'||DS.PLANT_ID||'_'||DS.PROC_ID||'_'||DS.ITEM_ID         AS ROUTE_ID,
		                    ''                                                          AS RESOURCESET_ID,
                    		DECODE(DS.OPER_ID,MX.OPER_ID,'Y','N')                       AS WO_END
		            FROM    (
		                    SELECT  A.CAT_ID, A.PLANT_ID, A.VERSION, A.SEQ, A.WO_ID, A.ITEM_ID, B.LINE_ID, B.PROC_ID, 
		                            A.PROD_DATES, A.SHIFT_TYPE, A.SHIFT_QTY, B.CONV_UOM AS QTY_UOM, '1' AS PRIORITY, A.ORD_NO, A.ORD_ITEM_NO,
		                            B.PROD_VER, WI.IDX, PP.SHIFT_INDEX, PP.END_SYNC_FLAG,
		                            (WI.IDX - NVL(PP.SHIFT_INDEX,0)) AS SHIFT_DIFF, WI.START_TIME, WI.END_TIME,
                                    B.OPER_ID
		                    FROM    (
		                            -- 월요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, MON_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_1 IS NOT NULL
                                    AND     DE.MON_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 월요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, MON_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_3 IS NOT NULL
                                    AND     DE.MON_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 월요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+0, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, MON_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.MON_QTY_5 IS NOT NULL
                                    AND     DE.MON_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, TUE_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_1 IS NOT NULL
                                    AND     DE.TUE_QTY_1 &lt;&gt; 0
                                    AND    DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, TUE_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_3 IS NOT NULL
                                    AND     DE.TUE_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 화요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+1, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, TUE_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.TUE_QTY_5 IS NOT NULL
                                    AND     DE.TUE_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, WED_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_1 IS NOT NULL
                                    AND     DE.WED_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, WED_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_3 IS NOT NULL
                                    AND     DE.WED_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 수요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+2, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, WED_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.WED_QTY_5 IS NOT NULL
                                    AND     DE.WED_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, THU_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_1 IS NOT NULL
                                    AND     DE.THU_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, THU_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_3 IS NOT NULL
                                    AND     DE.THU_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 목요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+3, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, THU_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.THU_QTY_5 IS NOT NULL
                                    AND     DE.THU_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, FRI_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_1 IS NOT NULL
                                    AND     DE.FRI_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, FRI_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_3 IS NOT NULL
                                    AND     DE.FRI_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 금요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+4, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, FRI_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.FRI_QTY_5 IS NOT NULL
                                    AND     DE.FRI_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, SAT_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_1 IS NOT NULL
                                    AND     DE.SAT_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, SAT_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_3 IS NOT NULL
                                    AND     DE.SAT_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 토요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+5, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, SAT_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SAT_QTY_5 IS NOT NULL
                                    AND     DE.SAT_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 조간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_1_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '1' SHIFT_TYPE, SUN_QTY_1 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_1 IS NOT NULL
                                    AND     DE.SUN_QTY_1 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 주간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_3_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '3' SHIFT_TYPE, SUN_QTY_3 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_3 IS NOT NULL
                                    AND     DE.SUN_QTY_3 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
                                    UNION   ALL
                                    -- 일요일 야간
                                    SELECT  DE.CAT_ID, DE.PLANT_ID, DE.VERSION, DE.SEQ, 
                                            /* WO_ID 생성 */
                                            DE.PLANT_ID||'_'||DE.PROC_ID||'_'||TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD')||'_5_' AS WO_ID,
                                            DE.ITEM_ID, DE.LINE_ID, DE.PROC_ID, 
                                            TO_CHAR(TO_DATE(START_DATE, 'YYYYMMDD')+6, 'YYYYMMDD') AS PROD_DATES,
                                            '5' SHIFT_TYPE, SUN_QTY_5 AS SHIFT_QTY, DE.ORD_NO, DE.ORD_ITEM_NO
                                    FROM    DAILY_SCH_PLAN_SHIFT_EXCEL DE
                                    WHERE   DE.SUN_QTY_5 IS NOT NULL
                                    AND     DE.SUN_QTY_5 &lt;&gt; 0
                                    AND     DE.MADE_BY =   '$!{_user_id}'
		                            ) A, 
		                            (
		                            SELECT  DISTINCT 
		                                    IC.PLANT_ID, IC.ITEM_ID, IC.ITEM_TYPE, IC.LINE_ID, IC.PROC_ID, IC.PROD_VER, IC.CONV_UOM,
                                            OPER_ID
		                            FROM    ITEM_CAPA IC
		                            WHERE   IC.MADE_TYPE != 'DE'
		                            ORDER   BY IC.PROC_ID        
		                            ) B,
                                    (
                                    SELECT  DISTINCT PLANT_ID, PROC_ID, ITEM_ID, PROD_VER
                                    FROM    ITEM_CAPA
                                    WHERE   MADE_TYPE != 'DE'
                                    ) C,
		                            /* 포장단 전 공정 SHIFT위치 정보 */
		                            V_POST_PRE_PROC PP,
		                            (
		                            /* 조운영 캘린더 인덱스 정보 */
		                            SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                            FROM    V_WORK_DIARY_IDX
		                            ) WI
		                    WHERE   A.PLANT_ID = B.PLANT_ID
		                    AND     A.ITEM_ID = B.ITEM_ID
                            AND     A.PLANT_ID = C.PLANT_ID(+)
                            AND     A.PROC_ID = C.PROC_ID(+)
                            AND     A.ITEM_ID = C.ITEM_ID(+)
                            AND     B.PROD_VER = C.PROD_VER
		                    AND     B.PLANT_ID = PP.PLANT_ID(+)
		                    AND     B.ITEM_ID = PP.ITEM_ID(+)
		                    AND     B.PROD_VER = PP.PROD_VER(+)
		                    AND     B.PROC_ID = PP.PROC_ID(+)
		                    AND     B.PLANT_ID = WI.PLANT_ID
		                    AND     B.PROC_ID = WI.PROC_ID
		                    AND     A.PROD_DATES = WI.DUTY_DATE
		                    AND     A.SHIFT_TYPE = WI.SHIFT_NAME
		                    ) DS,
		                    (
		                    /* 조운영 캘린더 인덱스 정보 */
		                    SELECT  PLANT_ID, PROC_ID, DUTY_DATE, SHIFT_NAME, IDX, START_TIME, END_TIME
		                    FROM    V_WORK_DIARY_IDX
		                    ) WD,
                            (
                            SELECT  IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER  , MAX(OPER_ID) AS OPER_ID
                            FROM    ITEM_CAPA IC
                            WHERE   IC.MADE_TYPE != 'DE'
                            GROUP   BY IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER                      
                            ORDER   BY IC.PLANT_ID, IC.ITEM_ID, IC.PROD_VER        
                            ) MX
		            WHERE   DS.PLANT_ID = WD.PLANT_ID
		            AND     DS.PROC_ID = WD.PROC_ID
		            AND     DS.SHIFT_DIFF = WD.IDX
                    AND     DS.PLANT_ID = MX.PLANT_ID
                    AND     DS.PLANT_ID = MX.PLANT_ID(+)
                    AND     DS.ITEM_ID = MX.ITEM_ID(+)
                    AND     DS.PROD_VER = MX.PROD_VER(+)
		            ) DS

	</query>
	
	<!-- 10. DAILY_SCH_PLAN_EXCEL_EXCEPT : SELECT (반제품)-->
	<query id="sc_12020_dailySemifinishedProductPlanAnalysisNewExcelExcept_popup" fix="_user_id">
		
		SELECT  DESCRIPTION, VERSION, SEQ, PLANT_ID, LINE_ID, PROC_ID, ITEM_ID,
		        TO_CHAR(TO_DATE(PROD_DATES, 'YYYY-MM-DD'), 'YYYY-MM-DD') PROD_DATES,
		        DECODE(SHIFT_TYPE, 1, '조간', 3, '주간', 5, '야간') SHIFT_NAME,
		        SHIFT_QTY
		FROM    DAILY_SCH_PLAN_EXCEL_EXCEPT,
				(SELECT 1 FROM DUAL)
		WHERE   MADE_BY = '$!{_user_id}'
		ORDER   BY PLANT_ID, DESCRIPTION, ITEM_ID, PROD_DATES, SHIFT_TYPE
		
	</query>
<!--
=====================================================================================================
 끝  
=====================================================================================================
--> 

</queries>